{"ast":null,"code":"// import React, { useEffect, useState, useRef } from 'react';\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [allProducts, setAllProducts] = useState([]); // Store original data\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add filters state\n//   const [filters, setFilters] = useState({\n//     category: '',\n//     size: '',\n//     style: ''\n//   });\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n//   const [showProfileDropdown, setShowProfileDropdown] = useState(false);\n\n//   // Check if mobile view\n//   const [isMobile, setIsMobile] = useState(window.innerWidth < 600);\n\n//   useEffect(() => {\n//     const handleResize = () => {\n//       setIsMobile(window.innerWidth < 600);\n//     };\n\n//     window.addEventListener('resize', handleResize);\n//     return () => window.removeEventListener('resize', handleResize);\n//   }, []);\n\n//   useEffect(() => {\n//     fetchProducts();\n\n//     // Close dropdown when clicking outside\n//     const handleClickOutside = (event) => {\n//       if (showProfileDropdown && !event.target.closest('.profile-dropdown-container')) {\n//         setShowProfileDropdown(false);\n//       }\n//     };\n\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, [showProfileDropdown]);\n\n//   // Apply filters whenever filters or allProducts change\n//   useEffect(() => {\n//     applyFilters();\n//   }, [filters, allProducts]);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await fetch('http://localhost:3001/api/products/all');\n//       const data = await res.json();\n//       setAllProducts(data); // Store original data\n//       setProducts(data); // Display data\n//       calculateStats(data);\n//     } catch (err) {\n//       console.error('Failed to fetch products', err);\n//     }\n//   };\n\n//   // New function to apply filters\n//   const applyFilters = () => {\n//     let filtered = [...allProducts];\n\n//     if (filters.category) {\n//       filtered = filtered.filter(product => product.category === filters.category);\n//     }\n\n//     if (filters.size) {\n//       filtered = filtered.filter(product => product.size === filters.size);\n//     }\n\n//     if (filters.style) {\n//       filtered = filtered.filter(product => product.style === filters.style);\n//     }\n\n//     setProducts(filtered);\n//     calculateStats(filtered);\n//   };\n\n//   // New function to handle filter changes\n//   const handleFilterChange = (filterType, value) => {\n//     setFilters(prev => ({\n//       ...prev,\n//       [filterType]: value\n//     }));\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:3001/api/products/delete/${selectedProductId}`, {\n//         method: 'DELETE'\n//       });\n\n//       if (response.ok) {\n//         fetchProducts();\n//       } else {\n//         console.error('Delete failed');\n//       }\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n\n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n\n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n\n//       setSelectedFile(file);\n\n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n\n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n\n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n\n//         const uploadResponse = await fetch('http://localhost:3001/api/upload', {\n//           method: 'POST',\n//           body: formData\n//         });\n\n//         const uploadResult = await uploadResponse.json();\n\n//         if (uploadResult.success) {\n//           imageUrl = uploadResult.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       let response;\n//       if (editingProduct) {\n//         response = await fetch(`http://localhost:3001/api/products/update/${editingProduct._id}`, {\n//           method: 'PUT',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       } else {\n//         response = await fetch('http://localhost:3001/api/products/add', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       }\n\n//       if (response.ok) {\n//         // Reset form and close modal\n//         setEditingProduct(null);\n//         setShowModal(false);\n//         setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//         setImagePreview(null);\n//         setSelectedFile(null);\n//         fetchProducts();\n//       } else {\n//         alert('Failed to save product');\n//       }\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     window.location.href = '/login'; // or use your routing method\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ \n//       padding: isMobile ? '16px' : '24px', \n//       backgroundColor: '#f3f4f6', \n//       minHeight: '100vh', \n//       fontFamily: 'Arial, sans-serif' \n//     }}>\n//       {/* Topbar */}\n//       <div style={{ \n//         display: 'flex', \n//         justifyContent: 'space-between', \n//         alignItems: 'center', \n//         marginBottom: '24px',\n//         flexWrap: 'wrap',\n//         gap: '12px'\n//       }}>\n//         <h2 style={{ \n//           fontSize: isMobile ? '20px' : '24px', \n//           fontWeight: 'bold',\n//           margin: '0'\n//         }}>\n//           <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//         </h2>\n//         <div style={{ display: 'flex', alignItems: 'center', gap: '12px', position: 'relative' }} className=\"profile-dropdown-container\">\n//           <span style={{ fontSize: isMobile ? '14px' : '16px' }}>Welcome, Admin</span>\n//           <div \n//             onClick={() => setShowProfileDropdown(!showProfileDropdown)}\n//             style={{ \n//               width: '32px', \n//               height: '32px', \n//               backgroundColor: '#2563eb', \n//               color: '#fff', \n//               borderRadius: '50%', \n//               display: 'flex', \n//               alignItems: 'center', \n//               justifyContent: 'center', \n//               fontWeight: 'bold',\n//               cursor: 'pointer'\n//             }}\n//           >\n//             A\n//           </div>\n\n//           {/* Profile Dropdown */}\n//           {showProfileDropdown && (\n//             <div style={{\n//               position: 'absolute',\n//               top: '100%',\n//               right: '0',\n//               marginTop: '8px',\n//               backgroundColor: '#fff',\n//               border: '1px solid #e5e7eb',\n//               borderRadius: '8px',\n//               boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n//               zIndex: 1000,\n//               minWidth: '120px'\n//             }}>\n//               <button\n//                 onClick={handleLogout}\n//                 style={{\n//                   width: '100%',\n//                   padding: '12px 16px',\n//                   backgroundColor: 'transparent',\n//                   border: 'none',\n//                   textAlign: 'left',\n//                   cursor: 'pointer',\n//                   fontSize: '14px',\n//                   borderRadius: '8px',\n//                   color: '#374151'\n//                 }}\n//                 onMouseEnter={(e) => e.target.style.backgroundColor = '#f3f4f6'}\n//                 onMouseLeave={(e) => e.target.style.backgroundColor = 'transparent'}\n//               >\n//                 🚪 Logout\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Stats - Responsive Grid */}\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: isMobile ? '1fr' : 'repeat(4, 1fr)', \n//         gap: '16px', \n//         marginBottom: '24px' \n//       }}>\n//         {[\n//           { label: 'Total Products 📦', value: totalProducts },\n//           { label: 'Active Products ✅', value: activeProducts },\n//           { label: 'Low Stock ⚠️', value: lowStock },\n//           { label: 'Total Value 💰', value: `₹${totalValue.toFixed(2)}/-` }\n//         ].map((stat, idx) => (\n//           <div key={idx} style={{ \n//             backgroundColor: '#fff', \n//             padding: isMobile ? '12px' : '16px', \n//             borderRadius: '8px' \n//           }}>\n//             <p style={{ \n//               margin: '0 0 8px 0', \n//               fontSize: isMobile ? '14px' : '16px' \n//             }}>{stat.label}</p>\n//             <h2 style={{ \n//               fontSize: isMobile ? '20px' : '24px', \n//               fontWeight: 'bold',\n//               margin: '0'\n//             }}>{stat.value}</h2>\n//           </div>\n//         ))}\n//       </div>\n\n//      {/* Product Table */}\n//      <div style={{ \n//        backgroundColor: '#fff', \n//        padding: isMobile ? '12px' : '16px', \n//        borderRadius: '8px', \n//        marginBottom: '24px', \n//        overflowX: 'auto' \n//      }}>\n//         <div style={{ \n//           display: 'flex', \n//           justifyContent: 'space-between', \n//           marginBottom: '16px',\n//           flexDirection: isMobile ? 'column' : 'row',\n//           gap: isMobile ? '12px' : '0'\n//         }}>\n//           <h3 style={{ \n//             fontSize: isMobile ? '24px' : '30px', \n//             fontWeight: 'bold',\n//             margin: '0',\n//             padding: '8px 12px', \n//           }}>Product Management</h3>\n//           <button\n//             onClick={openModal}\n//             style={{ \n//               backgroundColor: '#2563eb', \n//               color: '#fff', \n//               padding: isMobile ? '10px 16px' : '12px 12px', \n//               borderRadius: '8px',\n//               border: 'none',\n//               cursor: 'pointer',\n//               fontSize: isMobile ? '16px' : '20px',\n//               transition: 'all 0.2s ease-in-out',\n//               transform: 'scale(1)',\n//               alignSelf: isMobile ? 'flex-start' : 'auto'\n//             }}\n//             onMouseEnter={(e) => {\n//               e.target.style.backgroundColor = '#1d4ed8';\n//               e.target.style.transform = 'scale(1.05)';\n//               e.target.style.boxShadow = '0 4px 12px rgba(37, 99, 235, 0.3)';\n//             }}\n//             onMouseLeave={(e) => {\n//               e.target.style.backgroundColor = '#2563eb';\n//               e.target.style.transform = 'scale(1)';\n//               e.target.style.boxShadow = 'none';\n//             }}\n//           >\n//              Add New Product\n//           </button>\n//         </div>\n\n//         {/* Mobile Filters - Show as cards on mobile */}\n//         {isMobile && (\n//           <div style={{ \n//             display: 'flex', \n//             flexDirection: 'column', \n//             gap: '8px', \n//             marginBottom: '16px',\n//             padding: '12px',\n//             backgroundColor: '#f9fafb',\n//             borderRadius: '8px'\n//           }}>\n//             <select\n//               value={filters.category}\n//               onChange={(e) => handleFilterChange('category', e.target.value)}\n//               style={{\n//                 padding: '8px',\n//                 fontSize: '14px',\n//                 borderRadius: '4px',\n//                 border: '1px solid #ccc',\n//                 width: '100%'\n//               }}\n//             >\n//               <option value=\"\">All Categories</option>\n//               <option value=\"Shirts\">Shirts</option>\n//               <option value=\"Pants\">Pants</option>\n//               <option value=\"Accessories\">Accessories</option>\n//               <option value=\"Shoes\">Shoes</option>\n//             </select>\n\n//             <div style={{ display: 'flex', gap: '8px' }}>\n//               <select\n//                 value={filters.size}\n//                 onChange={(e) => handleFilterChange('size', e.target.value)}\n//                 style={{\n//                   padding: '8px',\n//                   fontSize: '14px',\n//                   borderRadius: '4px',\n//                   border: '1px solid #ccc',\n//                   flex: 1\n//                 }}\n//               >\n//                 <option value=\"\">All Sizes</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n\n//               <select\n//                 value={filters.style}\n//                 onChange={(e) => handleFilterChange('style', e.target.value)}\n//                 style={{\n//                   padding: '8px',\n//                   fontSize: '14px',\n//                   borderRadius: '4px',\n//                   border: '1px solid #ccc',\n//                   flex: 1\n//                 }}\n//               >\n//                 <option value=\"\">All Styles</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n//           </div>\n//         )}\n\n//         <style>\n//           {`\n//             .product-table-row:hover {\n//               background-color: #dbeafe !important;\n//             }\n//             .product-table-row {\n//               transition: background-color 0.2s ease-in-out;\n//             }\n//           `}\n//         </style>\n\n//         <div style={{ minWidth: isMobile ? '300px' : '700px' }}>\n//           <table style={{ width: '100%', fontSize: isMobile ? '14px' : '16px', borderCollapse: 'collapse' }}>\n//             <thead style={{ backgroundColor: 'rgb(243,244,246)', width: '100%', padding: '15px' }}>\n//               <tr>\n//                 <th \n//                   style={{ \n//                     padding: isMobile ? '10px' : '14px', \n//                     fontSize: isMobile ? '14px' : '16px', \n//                     textAlign: 'left',\n//                     transition: 'background-color 0.2s ease-in-out',\n//                     cursor: 'pointer'\n//                   }}\n//                   onMouseEnter={(e) => {\n//                     e.target.style.backgroundColor = '#e5e7eb';\n//                   }}\n//                   onMouseLeave={(e) => {\n//                     e.target.style.backgroundColor = 'transparent';\n//                   }}\n//                 >\n//                   Product\n//                 </th>\n\n//                 {/* Desktop-only columns */}\n//                 {!isMobile && (\n//                   <>\n//                     {/* Category Filter */}\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px',\n//                         backgroundColor: 'transparent'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                       onMouseOut={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       <select\n//                         value={filters.category}\n//                         onChange={(e) => handleFilterChange('category', e.target.value)}\n//                         onFocus={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         onBlur={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         style={{\n//                           padding: '4px',\n//                           fontSize: '16px',\n//                           borderRadius: '4px',\n//                           border: '1px solid #ccc'\n//                         }}\n//                       >\n//                         <option value=\"\">Category</option>\n//                         <option value=\"Shirts\">Shirts</option>\n//                         <option value=\"Pants\">Pants</option>\n//                         <option value=\"Accessories\">Accessories</option>\n//                         <option value=\"Shoes\">Shoes</option>\n//                       </select>\n//                     </th>\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Price\n//                     </th>\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Stock\n//                     </th>\n\n//                     {/* Size Filter */}\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px',\n//                         backgroundColor: 'transparent'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                       onMouseOut={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       <select\n//                         value={filters.size}\n//                         onChange={(e) => handleFilterChange('size', e.target.value)}\n//                         onFocus={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         onBlur={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         style={{\n//                           padding: '4px',\n//                           fontSize: '16px',\n//                           borderRadius: '4px',\n//                           border: '1px solid #ccc'\n//                         }}\n//                       >\n//                         <option value=\"\">Size</option>\n//                         <option value=\"XS\">XS</option>\n//                         <option value=\"S\">S</option>\n//                         <option value=\"M\">M</option>\n//                         <option value=\"L\">L</option>\n//                         <option value=\"XL\">XL</option>\n//                       </select>\n//                     </th>\n\n//                     {/* Style Filter */}\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px',\n//                         backgroundColor: 'transparent'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                       onMouseOut={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       <select\n//                         value={filters.style}\n//                         onChange={(e) => handleFilterChange('style', e.target.value)}\n//                         onFocus={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         onBlur={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         style={{\n//                           padding: '4px',\n//                           fontSize: '16px',\n//                           borderRadius: '4px',\n//                           border: '1px solid #ccc'\n//                         }}\n//                       >\n//                         <option value=\"\">Style</option>\n//                         <option value=\"Regular Fit\">Regular Fit</option>\n//                         <option value=\"Oversized Fit\">Oversized Fit</option>\n//                       </select>\n//                     </th>\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Status\n//                     </th>\n//                   </>\n//                 )}\n\n//                 <th \n//                   style={{ \n//                     textAlign: 'center',\n//                     transition: 'background-color 0.2s ease-in-out',\n//                     cursor: 'pointer',\n//                     padding: isMobile ? '10px' : '14px'\n//                   }}\n//                   onMouseEnter={(e) => {\n//                     e.target.style.backgroundColor = '#e5e7eb';\n//                   }}\n//                   onMouseLeave={(e) => {\n//                     e.target.style.backgroundColor = 'transparent';\n//                   }}\n//                 >\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr \n//                   key={product._id} \n//                   className=\"product-table-row\"\n//                   style={{ \n//                     borderTop: '1px solid #e5e7eb'\n//                   }}\n//                 >\n//                   <td style={{ \n//                     display: 'flex', \n//                     alignItems: 'center', \n//                     padding: isMobile ? '6px' : '8px',\n//                     flexDirection: isMobile ? 'column' : 'row',\n//                     gap: isMobile ? '8px' : '0'\n//                   }}>\n//                     <img\n//                       src={product.image}\n//                       alt={product.name}\n//                       style={{\n//                         width: isMobile ? '60px' : '40px',\n//                         height: isMobile ? '60px' : '40px',\n//                         objectFit: 'cover',\n//                         borderRadius: '6px',\n//                         marginRight: isMobile ? '0' : '12px',\n//                         border: '1px solid #ccc',\n//                       }}\n//                     />\n//                     <div style={{ \n//                       textAlign: isMobile ? 'center' : 'left',\n//                       fontSize: isMobile ? '12px' : '14px'\n//                     }}>\n//                       <div style={{ fontWeight: 'bold', marginBottom: isMobile ? '4px' : '0' }}>\n//                         {product.name}\n//                       </div>\n//                       {/* Show additional info on mobile */}\n//                       {isMobile && (\n//                         <div style={{ fontSize: '11px', color: '#666', lineHeight: '1.2' }}>\n//                           <div>{product.category} • {product.size} • {product.style}</div>\n//                           <div>₹{product.price.toFixed(2)} • Stock: {product.quantity}</div>\n//                           <span style={{\n//                             padding: '2px 6px',\n//                             borderRadius: '8px',\n//                             fontSize: '10px',\n//                             backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                             color: product.quantity >= 1 ? '#15803d' : '#b91c1c',\n//                             display: 'inline-block',\n//                             marginTop: '2px'\n//                           }}>\n//                             {product.quantity >= 1 ? 'active' : 'inactive'}\n//                           </span>\n//                         </div>\n//                       )}\n//                     </div>\n//                   </td>\n\n//                   {/* Desktop-only columns */}\n//                   {!isMobile && (\n//                     <>\n//                       <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                       <td style={{ textAlign: 'center' }}>₹{product.price.toFixed(2)}/-</td>\n//                       <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                       <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                       <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                       <td style={{ textAlign: 'center' }}>\n//                         <span style={{\n//                           padding: '4px 8px',\n//                           borderRadius: '12px',\n//                           fontSize: '12px',\n//                           backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                           color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                         }}>\n//                           {product.quantity >= 1 ? 'active' : 'inactive'}\n//                         </span>\n//                       </td>\n//                     </>\n//                   )}\n\n//                   <td style={{ textAlign: 'center', padding: isMobile ? '6px' : '8px' }}>\n//                     <div style={{ display: 'flex', justifyContent: 'center', gap: isMobile ? '8px' : '12px' }}>\n//                       <span\n//                         onClick={() => handleEdit(product)}\n//                         title=\"Edit Product\"\n//                         style={{ \n//                           cursor: 'pointer',\n//                           transition: 'all 0.2s ease-in-out',\n//                           display: 'inline-block',\n//                           padding: isMobile ? '8px' : '4px'\n//                         }}\n//                         onMouseEnter={(e) => {\n//                           e.target.style.transform = 'scale(1.1)';\n//                         }}\n//                         onMouseLeave={(e) => {\n//                           e.target.style.transform = 'scale(1)';\n//                         }}\n//                       >\n//                         <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                           <path d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" stroke=\"#3b82f6\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                         </svg>\n//                       </span>\n//                       <span\n//                         onClick={() => handleDeleteClick(product._id)}\n//                         title=\"Delete Product\"\n//                         style={{ \n//                           cursor: 'pointer',\n//                           transition: 'all 0.2s ease-in-out',\n//                           display: 'inline-block',\n//                           padding: isMobile ? '8px' : '4px'\n//                         }}\n//                         onMouseEnter={(e) => {\n//                           e.target.style.transform = 'scale(1.1)';\n//                         }}\n//                         onMouseLeave={(e) => {\n//                           e.target.style.transform = 'scale(1)';\n//                         }}\n//                       >\n//                         <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                           <path d=\"M3 6h18M8 6V4a2 2 0 012-2h4a2 2 0 012 2v2m3 0v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6h14zM10 11v6M14 11v6\" stroke=\"#da1b1b\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                         </svg>\n//                       </span>\n//                     </div>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//         </div>\n\n//       {/* Updated Modal with Mobile Responsiveness */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', \n//             padding: isMobile ? '16px' : '24px', \n//             borderRadius: '8px',\n//             width: isMobile ? '100%' : '400px',\n//             maxWidth: isMobile ? 'none' : '400px',\n//             maxHeight: '90vh', \n//             overflowY: 'auto', \n//             boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ \n//               fontSize: isMobile ? '16px' : '18px', \n//               fontWeight: 'bold', \n//               marginBottom: '16px',\n//               margin: '0 0 16px 0'\n//             }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input \n//                 name=\"name\" \n//                 placeholder=\"Product Name\" \n//                 value={newProduct.name} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n\n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ \n//                   fontSize: isMobile ? '13px' : '14px', \n//                   fontWeight: '500', \n//                   color: '#374151' \n//                 }}>\n//                   Product Image\n//                 </label>\n\n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n\n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: isMobile ? '10px 12px' : '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: isMobile ? '15px' : '14px',\n//                     cursor: 'pointer',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n\n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n\n//                 <input \n//                   name=\"image\" \n//                   placeholder=\"Or paste image URL\" \n//                   value={newProduct.image} \n//                   onChange={handleInputChange} \n//                   style={{\n//                     ...inputStyle, \n//                     width: '100%', \n//                     boxSizing: 'border-box',\n//                     fontSize: isMobile ? '16px' : '14px',\n//                     padding: isMobile ? '12px' : '10px'\n//                   }} \n//                 />\n//               </div>\n\n//               <select \n//                 name=\"category\" \n//                 value={newProduct.category} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirts\">Shirts</option>\n//                 <option value=\"Pants\">Pants</option>\n//                 <option value=\"Accessories\">Accessories</option>\n//               </select>\n//               <input \n//                 name=\"price\" \n//                 type=\"number\" \n//                 placeholder=\"Price ($)\" \n//                 value={newProduct.price} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <input \n//                 name=\"quantity\" \n//                 type=\"number\" \n//                 placeholder=\"Stock Quantity\" \n//                 value={newProduct.quantity} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <select \n//                 name=\"size\" \n//                 value={newProduct.size} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select \n//                 name=\"style\" \n//                 value={newProduct.style} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'flex-end', \n//               marginTop: '20px', \n//               gap: '10px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={() => setShowModal(false)} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#f3f4f6', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={handleSave} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup - Mobile Responsive */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             background: '#fff', \n//             padding: isMobile ? '20px' : '24px 32px', \n//             borderRadius: '12px', \n//             width: isMobile ? '100%' : '350px',\n//             maxWidth: isMobile ? 'none' : '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', \n//             textAlign: 'center', \n//             fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ \n//               marginBottom: '10px', \n//               margin: '0 0 10px 0',\n//               fontSize: isMobile ? '18px' : '20px'\n//             }}>🟠 Delete Product</h3>\n//             <p style={{ \n//               marginBottom: '20px',\n//               margin: '0 0 20px 0',\n//               fontSize: isMobile ? '14px' : '16px'\n//             }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'center', \n//               gap: '12px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={cancelDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#e5e7eb', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={confirmDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#ef4444', \n//                   color: '#fff', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\n// import React, { useEffect, useState, useRef } from 'react';\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [allProducts, setAllProducts] = useState([]); // Store original data\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add filters state\n//   const [filters, setFilters] = useState({\n//     category: '',\n//     size: '',\n//     style: ''\n//   });\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n//   const [showProfileDropdown, setShowProfileDropdown] = useState(false);\n\n//   // Check if mobile view\n//   const [isMobile, setIsMobile] = useState(window.innerWidth < 600);\n\n//   useEffect(() => {\n//     const handleResize = () => {\n//       setIsMobile(window.innerWidth < 600);\n//     };\n\n//     window.addEventListener('resize', handleResize);\n//     return () => window.removeEventListener('resize', handleResize);\n//   }, []);\n\n//   useEffect(() => {\n//     fetchProducts();\n\n//     // Close dropdown when clicking outside\n//     const handleClickOutside = (event) => {\n//       if (showProfileDropdown && !event.target.closest('.profile-dropdown-container')) {\n//         setShowProfileDropdown(false);\n//       }\n//     };\n\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, [showProfileDropdown]);\n\n//   // Apply filters whenever filters or allProducts change\n//   useEffect(() => {\n//     applyFilters();\n//   }, [filters, allProducts]);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await fetch('http://localhost:3001/api/products/all');\n//       const data = await res.json();\n//       setAllProducts(data); // Store original data\n//       setProducts(data); // Display data\n//       calculateStats(data);\n//     } catch (err) {\n//       console.error('Failed to fetch products', err);\n//     }\n//   };\n\n//   // New function to apply filters\n//   const applyFilters = () => {\n//     let filtered = [...allProducts];\n\n//     if (filters.category) {\n//       filtered = filtered.filter(product => product.category === filters.category);\n//     }\n\n//     if (filters.size) {\n//       filtered = filtered.filter(product => product.size === filters.size);\n//     }\n\n//     if (filters.style) {\n//       filtered = filtered.filter(product => product.style === filters.style);\n//     }\n\n//     setProducts(filtered);\n//     calculateStats(filtered);\n//   };\n\n//   // New function to handle filter changes\n//   const handleFilterChange = (filterType, value) => {\n//     setFilters(prev => ({\n//       ...prev,\n//       [filterType]: value\n//     }));\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:3001/api/products/delete/${selectedProductId}`, {\n//         method: 'DELETE'\n//       });\n\n//       if (response.ok) {\n//         fetchProducts();\n//       } else {\n//         console.error('Delete failed');\n//       }\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n\n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n\n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n\n//       setSelectedFile(file);\n\n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n\n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n\n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n\n//         const uploadResponse = await fetch('http://localhost:3001/api/upload', {\n//           method: 'POST',\n//           body: formData\n//         });\n\n//         const uploadResult = await uploadResponse.json();\n\n//         if (uploadResult.success) {\n//           imageUrl = uploadResult.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       let response;\n//       if (editingProduct) {\n//         response = await fetch(`http://localhost:3001/api/products/update/${editingProduct._id}`, {\n//           method: 'PUT',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       } else {\n//         response = await fetch('http://localhost:3001/api/products/add', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       }\n\n//       if (response.ok) {\n//         // Reset form and close modal\n//         setEditingProduct(null);\n//         setShowModal(false);\n//         setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//         setImagePreview(null);\n//         setSelectedFile(null);\n//         fetchProducts();\n//       } else {\n//         alert('Failed to save product');\n//       }\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     window.location.href = '/login'; // or use your routing method\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ \n//       padding: '0',\n//       backgroundColor: '#f3f4f6', \n//       minHeight: '100vh', \n//       fontFamily: 'Arial, sans-serif',\n//       display: 'flex',\n//       flexDirection: 'column'\n//     }}>\n//       {/* Sticky Header */}\n//       <div style={{\n//         position: 'sticky',\n//         top: '0',\n//         zIndex: 100,\n//         backgroundColor: '#f3f4f6',\n//         padding: isMobile ? '16px' : '24px',\n//         borderBottom: '1px solid #e5e7eb'\n//       }}>\n//         {/* Topbar */}\n//         <div style={{ \n//           display: 'flex', \n//           justifyContent: 'space-between', \n//           alignItems: 'center', \n//           marginBottom: '24px',\n//           flexWrap: 'wrap',\n//           gap: '12px'\n//         }}>\n//           <h2 style={{ \n//             fontSize: isMobile ? '20px' : '24px', \n//             fontWeight: 'bold',\n//             margin: '0'\n//           }}>\n//             <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//           </h2>\n//           <div style={{ display: 'flex', alignItems: 'center', gap: '12px', position: 'relative' }} className=\"profile-dropdown-container\">\n//             <span style={{ fontSize: isMobile ? '14px' : '16px' }}>Welcome, Admin</span>\n//             <div \n//               onClick={() => setShowProfileDropdown(!showProfileDropdown)}\n//               style={{ \n//                 width: '32px', \n//                 height: '32px', \n//                 backgroundColor: '#2563eb', \n//                 color: '#fff', \n//                 borderRadius: '50%', \n//                 display: 'flex', \n//                 alignItems: 'center', \n//                 justifyContent: 'center', \n//                 fontWeight: 'bold',\n//                 cursor: 'pointer'\n//               }}\n//             >\n//               A\n//             </div>\n\n//             {/* Profile Dropdown */}\n//             {showProfileDropdown && (\n//               <div style={{\n//                 position: 'absolute',\n//                 top: '100%',\n//                 right: '0',\n//                 marginTop: '8px',\n//                 backgroundColor: '#fff',\n//                 border: '1px solid #e5e7eb',\n//                 borderRadius: '8px',\n//                 boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n//                 zIndex: 1000,\n//                 minWidth: '120px'\n//               }}>\n//                 <button\n//                   onClick={handleLogout}\n//                   style={{\n//                     width: '100%',\n//                     padding: '12px 16px',\n//                     backgroundColor: 'transparent',\n//                     border: 'none',\n//                     textAlign: 'left',\n//                     cursor: 'pointer',\n//                     fontSize: '14px',\n//                     borderRadius: '8px',\n//                     color: '#374151'\n//                   }}\n//                   onMouseEnter={(e) => e.target.style.backgroundColor = '#f3f4f6'}\n//                   onMouseLeave={(e) => e.target.style.backgroundColor = 'transparent'}\n//                 >\n//                   🚪 Logout\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n\n//         {/* Stats - Responsive Grid */}\n//         <div style={{ \n//           display: 'grid', \n//           gridTemplateColumns: isMobile ? '1fr' : 'repeat(4, 1fr)', \n//           gap: '16px'\n//         }}>\n//           {[\n//             { label: 'Total Products 📦', value: totalProducts },\n//             { label: 'Active Products ✅', value: activeProducts },\n//             { label: 'Low Stock ⚠️', value: lowStock },\n//             { label: 'Total Value 💰', value: `₹${totalValue.toFixed(2)}/-` }\n//           ].map((stat, idx) => (\n//             <div key={idx} style={{ \n//               backgroundColor: '#fff', \n//               padding: isMobile ? '12px' : '16px', \n//               borderRadius: '8px' \n//             }}>\n//               <p style={{ \n//                 margin: '0 0 8px 0', \n//                 fontSize: isMobile ? '14px' : '16px' \n//               }}>{stat.label}</p>\n//               <h2 style={{ \n//                 fontSize: isMobile ? '20px' : '24px', \n//                 fontWeight: 'bold',\n//                 margin: '0'\n//               }}>{stat.value}</h2>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* Scrollable Content Area */}\n//       <div style={{ \n//         flex: 1,\n//         padding: isMobile ? '16px' : '24px',\n//         paddingTop: '0',\n//         display: 'flex',\n//         flexDirection: 'column'\n//       }}>\n//         {/* Product Table */}\n//         <div style={{ \n//           backgroundColor: '#fff', \n//           borderRadius: '8px', \n//           marginBottom: '24px',\n//           display: 'flex',\n//           flexDirection: 'column',\n//           height: 'calc(100vh - 300px)', // Adjust based on header height\n//           minHeight: '400px'\n//         }}>\n//           {/* Sticky Table Header */}\n//           <div style={{\n//             position: 'sticky',\n//             top: '0',\n//             zIndex: 50,\n//             backgroundColor: '#fff',\n//             borderRadius: '8px 8px 0 0',\n//             padding: isMobile ? '12px' : '16px',\n//             borderBottom: '1px solid #e5e7eb'\n//           }}>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'space-between', \n//               marginBottom: '16px',\n//               flexDirection: isMobile ? 'column' : 'row',\n//               gap: isMobile ? '12px' : '0'\n//             }}>\n//               <h3 style={{ \n//                 fontSize: isMobile ? '24px' : '30px', \n//                 fontWeight: 'bold',\n//                 margin: '0',\n//                 padding: '8px 12px', \n//               }}>Product Management</h3>\n//               <button\n//                 onClick={openModal}\n//                 style={{ \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   padding: isMobile ? '10px 16px' : '12px 12px', \n//                   borderRadius: '8px',\n//                   border: 'none',\n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '20px',\n//                   transition: 'all 0.2s ease-in-out',\n//                   transform: 'scale(1)',\n//                   alignSelf: isMobile ? 'flex-start' : 'auto'\n//                 }}\n//                 onMouseEnter={(e) => {\n//                   e.target.style.backgroundColor = '#1d4ed8';\n//                   e.target.style.transform = 'scale(1.05)';\n//                   e.target.style.boxShadow = '0 4px 12px rgba(37, 99, 235, 0.3)';\n//                 }}\n//                 onMouseLeave={(e) => {\n//                   e.target.style.backgroundColor = '#2563eb';\n//                   e.target.style.transform = 'scale(1)';\n//                   e.target.style.boxShadow = 'none';\n//                 }}\n//               >\n//                 Add New Product\n//               </button>\n//             </div>\n\n//             {/* Mobile Filters - Show as cards on mobile */}\n//             {isMobile && (\n//               <div style={{ \n//                 display: 'flex', \n//                 flexDirection: 'column', \n//                 gap: '8px', \n//                 marginBottom: '16px',\n//                 padding: '12px',\n//                 backgroundColor: '#f9fafb',\n//                 borderRadius: '8px'\n//               }}>\n//                 <select\n//                   value={filters.category}\n//                   onChange={(e) => handleFilterChange('category', e.target.value)}\n//                   style={{\n//                     padding: '8px',\n//                     fontSize: '14px',\n//                     borderRadius: '4px',\n//                     border: '1px solid #ccc',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   <option value=\"\">All Categories</option>\n//                   <option value=\"Shirts\">Shirts</option>\n//                   <option value=\"Pants\">Pants</option>\n//                   <option value=\"Accessories\">Accessories</option>\n//                   <option value=\"Shoes\">Shoes</option>\n//                 </select>\n\n//                 <div style={{ display: 'flex', gap: '8px' }}>\n//                   <select\n//                     value={filters.size}\n//                     onChange={(e) => handleFilterChange('size', e.target.value)}\n//                     style={{\n//                       padding: '8px',\n//                       fontSize: '14px',\n//                       borderRadius: '4px',\n//                       border: '1px solid #ccc',\n//                       flex: 1\n//                     }}\n//                   >\n//                     <option value=\"\">All Sizes</option>\n//                     <option value=\"XS\">XS</option>\n//                     <option value=\"S\">S</option>\n//                     <option value=\"M\">M</option>\n//                     <option value=\"L\">L</option>\n//                     <option value=\"XL\">XL</option>\n//                   </select>\n\n//                   <select\n//                     value={filters.style}\n//                     onChange={(e) => handleFilterChange('style', e.target.value)}\n//                     style={{\n//                       padding: '8px',\n//                       fontSize: '14px',\n//                       borderRadius: '4px',\n//                       border: '1px solid #ccc',\n//                       flex: 1\n//                     }}\n//                   >\n//                     <option value=\"\">All Styles</option>\n//                     <option value=\"Regular Fit\">Regular Fit</option>\n//                     <option value=\"Oversized Fit\">Oversized Fit</option>\n//                   </select>\n//                 </div>\n//               </div>\n//             )}\n\n//             {/* Fixed Table Structure */}\n//             <div style={{ minWidth: isMobile ? '300px' : '700px', overflowX: 'auto' }}>\n//               <table style={{ width: '100%', fontSize: isMobile ? '14px' : '16px', borderCollapse: 'collapse' }}>\n//                 <thead style={{ backgroundColor: 'rgb(243,244,246)', width: '100%' }}>\n//                   <tr>\n//                     <th \n//                       style={{ \n//                         padding: isMobile ? '10px' : '14px', \n//                         fontSize: isMobile ? '14px' : '16px', \n//                         textAlign: 'left',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Product\n//                     </th>\n\n//                     {/* Desktop-only columns */}\n//                     {!isMobile && (\n//                       <>\n//                         {/* Category Filter */}\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px',\n//                             backgroundColor: 'transparent'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           <select\n//                             value={filters.category}\n//                             onChange={(e) => handleFilterChange('category', e.target.value)}\n//                             onFocus={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             onBlur={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             style={{\n//                               padding: '4px',\n//                               fontSize: '16px',\n//                               borderRadius: '4px',\n//                               border: '1px solid #ccc'\n//                             }}\n//                           >\n//                             <option value=\"\">Category</option>\n//                             <option value=\"Shirts\">Shirts</option>\n//                             <option value=\"Pants\">Pants</option>\n//                             <option value=\"Accessories\">Accessories</option>\n//                             <option value=\"Shoes\">Shoes</option>\n//                           </select>\n//                         </th>\n\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           Price\n//                         </th>\n\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           Stock\n//                         </th>\n\n//                         {/* Size Filter */}\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px',\n//                             backgroundColor: 'transparent'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           <select\n//                             value={filters.size}\n//                             onChange={(e) => handleFilterChange('size', e.target.value)}\n//                             onFocus={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             onBlur={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             style={{\n//                               padding: '4px',\n//                               fontSize: '16px',\n//                               borderRadius: '4px',\n//                               border: '1px solid #ccc'\n//                             }}\n//                           >\n//                             <option value=\"\">Size</option>\n//                             <option value=\"XS\">XS</option>\n//                             <option value=\"S\">S</option>\n//                             <option value=\"M\">M</option>\n//                             <option value=\"L\">L</option>\n//                             <option value=\"XL\">XL</option>\n//                           </select>\n//                         </th>\n\n//                         {/* Style Filter */}\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px',\n//                             backgroundColor: 'transparent'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           <select\n//                             value={filters.style}\n//                             onChange={(e) => handleFilterChange('style', e.target.value)}\n//                             onFocus={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             onBlur={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             style={{\n//                               padding: '4px',\n//                               fontSize: '16px',\n//                               borderRadius: '4px',\n//                               border: '1px solid #ccc'\n//                             }}\n//                           >\n//                             <option value=\"\">Style</option>\n//                             <option value=\"Regular Fit\">Regular Fit</option>\n//                             <option value=\"Oversized Fit\">Oversized Fit</option>\n//                           </select>\n//                         </th>\n\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           Status\n//                         </th>\n//                       </>\n//                     )}\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: isMobile ? '10px' : '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {products.map((product) => (\n//                     <tr \n//                       key={product._id} \n//                       className=\"product-table-row\"\n//                       style={{ \n//                         borderTop: '1px solid #e5e7eb'\n//                       }}\n//                     >\n//                       <td style={{ \n//                         display: 'flex', \n//                         alignItems: 'center', \n//                         padding: isMobile ? '6px' : '8px',\n//                         flexDirection: isMobile ? 'column' : 'row',\n//                         gap: isMobile ? '8px' : '0'\n//                       }}>\n//                         <img\n//                           src={product.image}\n//                           alt={product.name}\n//                           style={{\n//                             width: isMobile ? '60px' : '40px',\n//                             height: isMobile ? '60px' : '40px',\n//                             objectFit: 'cover',\n//                             borderRadius: '6px',\n//                             marginRight: isMobile ? '0' : '12px',\n//                             border: '1px solid #ccc',\n//                           }}\n//                         />\n//                         <div style={{ \n//                           textAlign: isMobile ? 'center' : 'left',\n//                           fontSize: isMobile ? '12px' : '14px'\n//                         }}>\n//                           <div style={{ fontWeight: 'bold', marginBottom: isMobile ? '4px' : '0' }}>\n//                             {product.name}\n//                           </div>\n//                           {/* Show additional info on mobile */}\n//                           {isMobile && (\n//                             <div style={{ fontSize: '11px', color: '#666', lineHeight: '1.2' }}>\n//                               <div>{product.category} • {product.size} • {product.style}</div>\n//                               <div>₹{product.price.toFixed(2)} • Stock: {product.quantity}</div>\n//                               <span style={{\n//                                 padding: '2px 6px',\n//                                 borderRadius: '8px',\n//                                 fontSize: '10px',\n//                                 backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                                 color: product.quantity >= 1 ? '#15803d' : '#b91c1c',\n//                                 display: 'inline-block',\n//                                 marginTop: '2px'\n//                               }}>\n//                                 {product.quantity >= 1 ? 'active' : 'inactive'}\n//                               </span>\n//                             </div>\n//                           )}\n//                         </div>\n//                       </td>\n\n//                       {/* Desktop-only columns */}\n//                       {!isMobile && (\n//                         <>\n//                           <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                           <td style={{ textAlign: 'center' }}>₹{product.price.toFixed(2)}/-</td>\n//                           <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                           <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                           <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                           <td style={{ textAlign: 'center' }}>\n//                             <span style={{\n//                               padding: '4px 8px',\n//                               borderRadius: '12px',\n//                               fontSize: '12px',\n//                               backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                               color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                             }}>\n//                               {product.quantity >= 1 ? 'active' : 'inactive'}\n//                             </span>\n//                           </td>\n//                         </>\n//                       )}\n\n//                       <td style={{ textAlign: 'center', padding: isMobile ? '6px' : '8px' }}>\n//                         <div style={{ display: 'flex', justifyContent: 'center', gap: isMobile ? '8px' : '12px' }}>\n//                           <span\n//                             onClick={() => handleEdit(product)}\n//                             title=\"Edit Product\"\n//                             style={{ \n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s ease-in-out',\n//                               display: 'inline-block',\n//                               padding: isMobile ? '8px' : '4px'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.transform = 'scale(1.1)';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.transform = 'scale(1)';\n//                             }}\n//                           >\n//                             <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                               <path d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" stroke=\"#3b82f6\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                             </svg>\n//                           </span>\n//                           <span\n//                             onClick={() => handleDeleteClick(product._id)}\n//                             title=\"Delete Product\"\n//                             style={{ \n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s ease-in-out',\n//                               display: 'inline-block',\n//                               padding: isMobile ? '8px' : '4px'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.transform = 'scale(1.1)';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.transform = 'scale(1)';\n//                             }}\n//                           >\n//                             <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                               <path d=\"M3 6h18M8 6V4a2 2 0 012-2h4a2 2 0 012 2v2m3 0v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6h14zM10 11v6M14 11v6\" stroke=\"#da1b1b\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                             </svg>\n//                           </span>\n//                         </div>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Add CSS styles */}\n//       <style>\n//         {`\n//           .product-table-row:hover {\n//             background-color: #dbeafe !important;\n//           }\n//           .product-table-row {\n//             transition: background-color 0.2s ease-in-out;\n//           }\n//         `}\n//       </style>\n\n//       {/* Updated Modal with Mobile Responsiveness */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', \n//             padding: isMobile ? '16px' : '24px', \n//             borderRadius: '8px',\n//             width: isMobile ? '100%' : '400px',\n//             maxWidth: isMobile ? 'none' : '400px',\n//             maxHeight: '90vh', \n//             overflowY: 'auto', \n//             boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ \n//               fontSize: isMobile ? '16px' : '18px', \n//               fontWeight: 'bold', \n//               marginBottom: '16px',\n//               margin: '0 0 16px 0'\n//             }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input \n//                 name=\"name\" \n//                 placeholder=\"Product Name\" \n//                 value={newProduct.name} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n\n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ \n//                   fontSize: isMobile ? '13px' : '14px', \n//                   fontWeight: '500', \n//                   color: '#374151' \n//                 }}>\n//                   Product Image\n//                 </label>\n\n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n\n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: isMobile ? '10px 12px' : '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: isMobile ? '15px' : '14px',\n//                     cursor: 'pointer',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n\n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n\n//                 <input \n//                   name=\"image\" \n//                   placeholder=\"Or paste image URL\" \n//                   value={newProduct.image} \n//                   onChange={handleInputChange} \n//                   style={{\n//                     ...inputStyle, \n//                     width: '100%', \n//                     boxSizing: 'border-box',\n//                     fontSize: isMobile ? '16px' : '14px',\n//                     padding: isMobile ? '12px' : '10px'\n//                   }} \n//                 />\n//               </div>\n\n//               <select \n//                 name=\"category\" \n//                 value={newProduct.category} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirts\">Shirts</option>\n//                 <option value=\"Pants\">Pants</option>\n//                 <option value=\"Accessories\">Accessories</option>\n//                 <option value=\"Shoes\">Shoes</option>\n//               </select>\n//               <input \n//                 name=\"price\" \n//                 type=\"number\" \n//                 placeholder=\"Price ($)\" \n//                 value={newProduct.price} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <input \n//                 name=\"quantity\" \n//                 type=\"number\" \n//                 placeholder=\"Stock Quantity\" \n//                 value={newProduct.quantity} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <select \n//                 name=\"size\" \n//                 value={newProduct.size} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select \n//                 name=\"style\" \n//                 value={newProduct.style} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'flex-end', \n//               marginTop: '20px', \n//               gap: '10px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={() => setShowModal(false)} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#f3f4f6', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={handleSave} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup - Mobile Responsive */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             background: '#fff', \n//             padding: isMobile ? '20px' : '24px 32px', \n//             borderRadius: '12px', \n//             width: isMobile ? '100%' : '350px',\n//             maxWidth: isMobile ? 'none' : '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', \n//             textAlign: 'center', \n//             fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ \n//               marginBottom: '10px', \n//               margin: '0 0 10px 0',\n//               fontSize: isMobile ? '18px' : '20px'\n//             }}>🟠 Delete Product</h3>\n//             <p style={{ \n//               marginBottom: '20px',\n//               margin: '0 0 20px 0',\n//               fontSize: isMobile ? '14px' : '16px'\n//             }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'center', \n//               gap: '12px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={cancelDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#e5e7eb', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={confirmDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#ef4444', \n//                   color: '#fff', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/Aroha Task1/Frontend/src/Pages/AdminDashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState, useRef } from 'react';\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [allProducts, setAllProducts] = useState([]); // Store original data\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add filters state\n//   const [filters, setFilters] = useState({\n//     category: '',\n//     size: '',\n//     style: ''\n//   });\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n//   const [showProfileDropdown, setShowProfileDropdown] = useState(false);\n\n//   // Check if mobile view\n//   const [isMobile, setIsMobile] = useState(window.innerWidth < 600);\n\n//   useEffect(() => {\n//     const handleResize = () => {\n//       setIsMobile(window.innerWidth < 600);\n//     };\n\n//     window.addEventListener('resize', handleResize);\n//     return () => window.removeEventListener('resize', handleResize);\n//   }, []);\n\n//   useEffect(() => {\n//     fetchProducts();\n    \n//     // Close dropdown when clicking outside\n//     const handleClickOutside = (event) => {\n//       if (showProfileDropdown && !event.target.closest('.profile-dropdown-container')) {\n//         setShowProfileDropdown(false);\n//       }\n//     };\n    \n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, [showProfileDropdown]);\n\n//   // Apply filters whenever filters or allProducts change\n//   useEffect(() => {\n//     applyFilters();\n//   }, [filters, allProducts]);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await fetch('http://localhost:3001/api/products/all');\n//       const data = await res.json();\n//       setAllProducts(data); // Store original data\n//       setProducts(data); // Display data\n//       calculateStats(data);\n//     } catch (err) {\n//       console.error('Failed to fetch products', err);\n//     }\n//   };\n\n//   // New function to apply filters\n//   const applyFilters = () => {\n//     let filtered = [...allProducts];\n    \n//     if (filters.category) {\n//       filtered = filtered.filter(product => product.category === filters.category);\n//     }\n    \n//     if (filters.size) {\n//       filtered = filtered.filter(product => product.size === filters.size);\n//     }\n    \n//     if (filters.style) {\n//       filtered = filtered.filter(product => product.style === filters.style);\n//     }\n    \n//     setProducts(filtered);\n//     calculateStats(filtered);\n//   };\n\n//   // New function to handle filter changes\n//   const handleFilterChange = (filterType, value) => {\n//     setFilters(prev => ({\n//       ...prev,\n//       [filterType]: value\n//     }));\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:3001/api/products/delete/${selectedProductId}`, {\n//         method: 'DELETE'\n//       });\n      \n//       if (response.ok) {\n//         fetchProducts();\n//       } else {\n//         console.error('Delete failed');\n//       }\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n    \n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n      \n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n      \n//       setSelectedFile(file);\n      \n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n      \n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n      \n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n        \n//         const uploadResponse = await fetch('http://localhost:3001/api/upload', {\n//           method: 'POST',\n//           body: formData\n//         });\n        \n//         const uploadResult = await uploadResponse.json();\n        \n//         if (uploadResult.success) {\n//           imageUrl = uploadResult.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       let response;\n//       if (editingProduct) {\n//         response = await fetch(`http://localhost:3001/api/products/update/${editingProduct._id}`, {\n//           method: 'PUT',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       } else {\n//         response = await fetch('http://localhost:3001/api/products/add', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       }\n      \n//       if (response.ok) {\n//         // Reset form and close modal\n//         setEditingProduct(null);\n//         setShowModal(false);\n//         setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//         setImagePreview(null);\n//         setSelectedFile(null);\n//         fetchProducts();\n//       } else {\n//         alert('Failed to save product');\n//       }\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     window.location.href = '/login'; // or use your routing method\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ \n//       padding: isMobile ? '16px' : '24px', \n//       backgroundColor: '#f3f4f6', \n//       minHeight: '100vh', \n//       fontFamily: 'Arial, sans-serif' \n//     }}>\n//       {/* Topbar */}\n//       <div style={{ \n//         display: 'flex', \n//         justifyContent: 'space-between', \n//         alignItems: 'center', \n//         marginBottom: '24px',\n//         flexWrap: 'wrap',\n//         gap: '12px'\n//       }}>\n//         <h2 style={{ \n//           fontSize: isMobile ? '20px' : '24px', \n//           fontWeight: 'bold',\n//           margin: '0'\n//         }}>\n//           <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//         </h2>\n//         <div style={{ display: 'flex', alignItems: 'center', gap: '12px', position: 'relative' }} className=\"profile-dropdown-container\">\n//           <span style={{ fontSize: isMobile ? '14px' : '16px' }}>Welcome, Admin</span>\n//           <div \n//             onClick={() => setShowProfileDropdown(!showProfileDropdown)}\n//             style={{ \n//               width: '32px', \n//               height: '32px', \n//               backgroundColor: '#2563eb', \n//               color: '#fff', \n//               borderRadius: '50%', \n//               display: 'flex', \n//               alignItems: 'center', \n//               justifyContent: 'center', \n//               fontWeight: 'bold',\n//               cursor: 'pointer'\n//             }}\n//           >\n//             A\n//           </div>\n          \n//           {/* Profile Dropdown */}\n//           {showProfileDropdown && (\n//             <div style={{\n//               position: 'absolute',\n//               top: '100%',\n//               right: '0',\n//               marginTop: '8px',\n//               backgroundColor: '#fff',\n//               border: '1px solid #e5e7eb',\n//               borderRadius: '8px',\n//               boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n//               zIndex: 1000,\n//               minWidth: '120px'\n//             }}>\n//               <button\n//                 onClick={handleLogout}\n//                 style={{\n//                   width: '100%',\n//                   padding: '12px 16px',\n//                   backgroundColor: 'transparent',\n//                   border: 'none',\n//                   textAlign: 'left',\n//                   cursor: 'pointer',\n//                   fontSize: '14px',\n//                   borderRadius: '8px',\n//                   color: '#374151'\n//                 }}\n//                 onMouseEnter={(e) => e.target.style.backgroundColor = '#f3f4f6'}\n//                 onMouseLeave={(e) => e.target.style.backgroundColor = 'transparent'}\n//               >\n//                 🚪 Logout\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Stats - Responsive Grid */}\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: isMobile ? '1fr' : 'repeat(4, 1fr)', \n//         gap: '16px', \n//         marginBottom: '24px' \n//       }}>\n//         {[\n//           { label: 'Total Products 📦', value: totalProducts },\n//           { label: 'Active Products ✅', value: activeProducts },\n//           { label: 'Low Stock ⚠️', value: lowStock },\n//           { label: 'Total Value 💰', value: `₹${totalValue.toFixed(2)}/-` }\n//         ].map((stat, idx) => (\n//           <div key={idx} style={{ \n//             backgroundColor: '#fff', \n//             padding: isMobile ? '12px' : '16px', \n//             borderRadius: '8px' \n//           }}>\n//             <p style={{ \n//               margin: '0 0 8px 0', \n//               fontSize: isMobile ? '14px' : '16px' \n//             }}>{stat.label}</p>\n//             <h2 style={{ \n//               fontSize: isMobile ? '20px' : '24px', \n//               fontWeight: 'bold',\n//               margin: '0'\n//             }}>{stat.value}</h2>\n//           </div>\n//         ))}\n//       </div>\n\n//      {/* Product Table */}\n//      <div style={{ \n//        backgroundColor: '#fff', \n//        padding: isMobile ? '12px' : '16px', \n//        borderRadius: '8px', \n//        marginBottom: '24px', \n//        overflowX: 'auto' \n//      }}>\n//         <div style={{ \n//           display: 'flex', \n//           justifyContent: 'space-between', \n//           marginBottom: '16px',\n//           flexDirection: isMobile ? 'column' : 'row',\n//           gap: isMobile ? '12px' : '0'\n//         }}>\n//           <h3 style={{ \n//             fontSize: isMobile ? '24px' : '30px', \n//             fontWeight: 'bold',\n//             margin: '0',\n//             padding: '8px 12px', \n//           }}>Product Management</h3>\n//           <button\n//             onClick={openModal}\n//             style={{ \n//               backgroundColor: '#2563eb', \n//               color: '#fff', \n//               padding: isMobile ? '10px 16px' : '12px 12px', \n//               borderRadius: '8px',\n//               border: 'none',\n//               cursor: 'pointer',\n//               fontSize: isMobile ? '16px' : '20px',\n//               transition: 'all 0.2s ease-in-out',\n//               transform: 'scale(1)',\n//               alignSelf: isMobile ? 'flex-start' : 'auto'\n//             }}\n//             onMouseEnter={(e) => {\n//               e.target.style.backgroundColor = '#1d4ed8';\n//               e.target.style.transform = 'scale(1.05)';\n//               e.target.style.boxShadow = '0 4px 12px rgba(37, 99, 235, 0.3)';\n//             }}\n//             onMouseLeave={(e) => {\n//               e.target.style.backgroundColor = '#2563eb';\n//               e.target.style.transform = 'scale(1)';\n//               e.target.style.boxShadow = 'none';\n//             }}\n//           >\n//              Add New Product\n//           </button>\n//         </div>\n\n//         {/* Mobile Filters - Show as cards on mobile */}\n//         {isMobile && (\n//           <div style={{ \n//             display: 'flex', \n//             flexDirection: 'column', \n//             gap: '8px', \n//             marginBottom: '16px',\n//             padding: '12px',\n//             backgroundColor: '#f9fafb',\n//             borderRadius: '8px'\n//           }}>\n//             <select\n//               value={filters.category}\n//               onChange={(e) => handleFilterChange('category', e.target.value)}\n//               style={{\n//                 padding: '8px',\n//                 fontSize: '14px',\n//                 borderRadius: '4px',\n//                 border: '1px solid #ccc',\n//                 width: '100%'\n//               }}\n//             >\n//               <option value=\"\">All Categories</option>\n//               <option value=\"Shirts\">Shirts</option>\n//               <option value=\"Pants\">Pants</option>\n//               <option value=\"Accessories\">Accessories</option>\n//               <option value=\"Shoes\">Shoes</option>\n//             </select>\n            \n//             <div style={{ display: 'flex', gap: '8px' }}>\n//               <select\n//                 value={filters.size}\n//                 onChange={(e) => handleFilterChange('size', e.target.value)}\n//                 style={{\n//                   padding: '8px',\n//                   fontSize: '14px',\n//                   borderRadius: '4px',\n//                   border: '1px solid #ccc',\n//                   flex: 1\n//                 }}\n//               >\n//                 <option value=\"\">All Sizes</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n              \n//               <select\n//                 value={filters.style}\n//                 onChange={(e) => handleFilterChange('style', e.target.value)}\n//                 style={{\n//                   padding: '8px',\n//                   fontSize: '14px',\n//                   borderRadius: '4px',\n//                   border: '1px solid #ccc',\n//                   flex: 1\n//                 }}\n//               >\n//                 <option value=\"\">All Styles</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n//           </div>\n//         )}\n\n//         <style>\n//           {`\n//             .product-table-row:hover {\n//               background-color: #dbeafe !important;\n//             }\n//             .product-table-row {\n//               transition: background-color 0.2s ease-in-out;\n//             }\n//           `}\n//         </style>\n        \n//         <div style={{ minWidth: isMobile ? '300px' : '700px' }}>\n//           <table style={{ width: '100%', fontSize: isMobile ? '14px' : '16px', borderCollapse: 'collapse' }}>\n//             <thead style={{ backgroundColor: 'rgb(243,244,246)', width: '100%', padding: '15px' }}>\n//               <tr>\n//                 <th \n//                   style={{ \n//                     padding: isMobile ? '10px' : '14px', \n//                     fontSize: isMobile ? '14px' : '16px', \n//                     textAlign: 'left',\n//                     transition: 'background-color 0.2s ease-in-out',\n//                     cursor: 'pointer'\n//                   }}\n//                   onMouseEnter={(e) => {\n//                     e.target.style.backgroundColor = '#e5e7eb';\n//                   }}\n//                   onMouseLeave={(e) => {\n//                     e.target.style.backgroundColor = 'transparent';\n//                   }}\n//                 >\n//                   Product\n//                 </th>\n\n//                 {/* Desktop-only columns */}\n//                 {!isMobile && (\n//                   <>\n//                     {/* Category Filter */}\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px',\n//                         backgroundColor: 'transparent'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                       onMouseOut={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       <select\n//                         value={filters.category}\n//                         onChange={(e) => handleFilterChange('category', e.target.value)}\n//                         onFocus={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         onBlur={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         style={{\n//                           padding: '4px',\n//                           fontSize: '16px',\n//                           borderRadius: '4px',\n//                           border: '1px solid #ccc'\n//                         }}\n//                       >\n//                         <option value=\"\">Category</option>\n//                         <option value=\"Shirts\">Shirts</option>\n//                         <option value=\"Pants\">Pants</option>\n//                         <option value=\"Accessories\">Accessories</option>\n//                         <option value=\"Shoes\">Shoes</option>\n//                       </select>\n//                     </th>\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Price\n//                     </th>\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Stock\n//                     </th>\n\n//                     {/* Size Filter */}\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px',\n//                         backgroundColor: 'transparent'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                       onMouseOut={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       <select\n//                         value={filters.size}\n//                         onChange={(e) => handleFilterChange('size', e.target.value)}\n//                         onFocus={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         onBlur={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         style={{\n//                           padding: '4px',\n//                           fontSize: '16px',\n//                           borderRadius: '4px',\n//                           border: '1px solid #ccc'\n//                         }}\n//                       >\n//                         <option value=\"\">Size</option>\n//                         <option value=\"XS\">XS</option>\n//                         <option value=\"S\">S</option>\n//                         <option value=\"M\">M</option>\n//                         <option value=\"L\">L</option>\n//                         <option value=\"XL\">XL</option>\n//                       </select>\n//                     </th>\n\n//                     {/* Style Filter */}\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px',\n//                         backgroundColor: 'transparent'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                       onMouseOut={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       <select\n//                         value={filters.style}\n//                         onChange={(e) => handleFilterChange('style', e.target.value)}\n//                         onFocus={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         onBlur={(e) => {\n//                           e.target.parentElement.style.backgroundColor = 'transparent';\n//                         }}\n//                         style={{\n//                           padding: '4px',\n//                           fontSize: '16px',\n//                           borderRadius: '4px',\n//                           border: '1px solid #ccc'\n//                         }}\n//                       >\n//                         <option value=\"\">Style</option>\n//                         <option value=\"Regular Fit\">Regular Fit</option>\n//                         <option value=\"Oversized Fit\">Oversized Fit</option>\n//                       </select>\n//                     </th>\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Status\n//                     </th>\n//                   </>\n//                 )}\n\n//                 <th \n//                   style={{ \n//                     textAlign: 'center',\n//                     transition: 'background-color 0.2s ease-in-out',\n//                     cursor: 'pointer',\n//                     padding: isMobile ? '10px' : '14px'\n//                   }}\n//                   onMouseEnter={(e) => {\n//                     e.target.style.backgroundColor = '#e5e7eb';\n//                   }}\n//                   onMouseLeave={(e) => {\n//                     e.target.style.backgroundColor = 'transparent';\n//                   }}\n//                 >\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr \n//                   key={product._id} \n//                   className=\"product-table-row\"\n//                   style={{ \n//                     borderTop: '1px solid #e5e7eb'\n//                   }}\n//                 >\n//                   <td style={{ \n//                     display: 'flex', \n//                     alignItems: 'center', \n//                     padding: isMobile ? '6px' : '8px',\n//                     flexDirection: isMobile ? 'column' : 'row',\n//                     gap: isMobile ? '8px' : '0'\n//                   }}>\n//                     <img\n//                       src={product.image}\n//                       alt={product.name}\n//                       style={{\n//                         width: isMobile ? '60px' : '40px',\n//                         height: isMobile ? '60px' : '40px',\n//                         objectFit: 'cover',\n//                         borderRadius: '6px',\n//                         marginRight: isMobile ? '0' : '12px',\n//                         border: '1px solid #ccc',\n//                       }}\n//                     />\n//                     <div style={{ \n//                       textAlign: isMobile ? 'center' : 'left',\n//                       fontSize: isMobile ? '12px' : '14px'\n//                     }}>\n//                       <div style={{ fontWeight: 'bold', marginBottom: isMobile ? '4px' : '0' }}>\n//                         {product.name}\n//                       </div>\n//                       {/* Show additional info on mobile */}\n//                       {isMobile && (\n//                         <div style={{ fontSize: '11px', color: '#666', lineHeight: '1.2' }}>\n//                           <div>{product.category} • {product.size} • {product.style}</div>\n//                           <div>₹{product.price.toFixed(2)} • Stock: {product.quantity}</div>\n//                           <span style={{\n//                             padding: '2px 6px',\n//                             borderRadius: '8px',\n//                             fontSize: '10px',\n//                             backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                             color: product.quantity >= 1 ? '#15803d' : '#b91c1c',\n//                             display: 'inline-block',\n//                             marginTop: '2px'\n//                           }}>\n//                             {product.quantity >= 1 ? 'active' : 'inactive'}\n//                           </span>\n//                         </div>\n//                       )}\n//                     </div>\n//                   </td>\n                  \n//                   {/* Desktop-only columns */}\n//                   {!isMobile && (\n//                     <>\n//                       <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                       <td style={{ textAlign: 'center' }}>₹{product.price.toFixed(2)}/-</td>\n//                       <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                       <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                       <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                       <td style={{ textAlign: 'center' }}>\n//                         <span style={{\n//                           padding: '4px 8px',\n//                           borderRadius: '12px',\n//                           fontSize: '12px',\n//                           backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                           color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                         }}>\n//                           {product.quantity >= 1 ? 'active' : 'inactive'}\n//                         </span>\n//                       </td>\n//                     </>\n//                   )}\n                  \n//                   <td style={{ textAlign: 'center', padding: isMobile ? '6px' : '8px' }}>\n//                     <div style={{ display: 'flex', justifyContent: 'center', gap: isMobile ? '8px' : '12px' }}>\n//                       <span\n//                         onClick={() => handleEdit(product)}\n//                         title=\"Edit Product\"\n//                         style={{ \n//                           cursor: 'pointer',\n//                           transition: 'all 0.2s ease-in-out',\n//                           display: 'inline-block',\n//                           padding: isMobile ? '8px' : '4px'\n//                         }}\n//                         onMouseEnter={(e) => {\n//                           e.target.style.transform = 'scale(1.1)';\n//                         }}\n//                         onMouseLeave={(e) => {\n//                           e.target.style.transform = 'scale(1)';\n//                         }}\n//                       >\n//                         <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                           <path d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" stroke=\"#3b82f6\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                         </svg>\n//                       </span>\n//                       <span\n//                         onClick={() => handleDeleteClick(product._id)}\n//                         title=\"Delete Product\"\n//                         style={{ \n//                           cursor: 'pointer',\n//                           transition: 'all 0.2s ease-in-out',\n//                           display: 'inline-block',\n//                           padding: isMobile ? '8px' : '4px'\n//                         }}\n//                         onMouseEnter={(e) => {\n//                           e.target.style.transform = 'scale(1.1)';\n//                         }}\n//                         onMouseLeave={(e) => {\n//                           e.target.style.transform = 'scale(1)';\n//                         }}\n//                       >\n//                         <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                           <path d=\"M3 6h18M8 6V4a2 2 0 012-2h4a2 2 0 012 2v2m3 0v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6h14zM10 11v6M14 11v6\" stroke=\"#da1b1b\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                         </svg>\n//                       </span>\n//                     </div>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//         </div>\n\n//       {/* Updated Modal with Mobile Responsiveness */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', \n//             padding: isMobile ? '16px' : '24px', \n//             borderRadius: '8px',\n//             width: isMobile ? '100%' : '400px',\n//             maxWidth: isMobile ? 'none' : '400px',\n//             maxHeight: '90vh', \n//             overflowY: 'auto', \n//             boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ \n//               fontSize: isMobile ? '16px' : '18px', \n//               fontWeight: 'bold', \n//               marginBottom: '16px',\n//               margin: '0 0 16px 0'\n//             }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input \n//                 name=\"name\" \n//                 placeholder=\"Product Name\" \n//                 value={newProduct.name} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n              \n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ \n//                   fontSize: isMobile ? '13px' : '14px', \n//                   fontWeight: '500', \n//                   color: '#374151' \n//                 }}>\n//                   Product Image\n//                 </label>\n                \n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n                \n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n                \n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: isMobile ? '10px 12px' : '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: isMobile ? '15px' : '14px',\n//                     cursor: 'pointer',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n                \n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n                \n//                 <input \n//                   name=\"image\" \n//                   placeholder=\"Or paste image URL\" \n//                   value={newProduct.image} \n//                   onChange={handleInputChange} \n//                   style={{\n//                     ...inputStyle, \n//                     width: '100%', \n//                     boxSizing: 'border-box',\n//                     fontSize: isMobile ? '16px' : '14px',\n//                     padding: isMobile ? '12px' : '10px'\n//                   }} \n//                 />\n//               </div>\n              \n//               <select \n//                 name=\"category\" \n//                 value={newProduct.category} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirts\">Shirts</option>\n//                 <option value=\"Pants\">Pants</option>\n//                 <option value=\"Accessories\">Accessories</option>\n//               </select>\n//               <input \n//                 name=\"price\" \n//                 type=\"number\" \n//                 placeholder=\"Price ($)\" \n//                 value={newProduct.price} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <input \n//                 name=\"quantity\" \n//                 type=\"number\" \n//                 placeholder=\"Stock Quantity\" \n//                 value={newProduct.quantity} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <select \n//                 name=\"size\" \n//                 value={newProduct.size} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select \n//                 name=\"style\" \n//                 value={newProduct.style} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'flex-end', \n//               marginTop: '20px', \n//               gap: '10px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={() => setShowModal(false)} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#f3f4f6', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={handleSave} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup - Mobile Responsive */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             background: '#fff', \n//             padding: isMobile ? '20px' : '24px 32px', \n//             borderRadius: '12px', \n//             width: isMobile ? '100%' : '350px',\n//             maxWidth: isMobile ? 'none' : '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', \n//             textAlign: 'center', \n//             fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ \n//               marginBottom: '10px', \n//               margin: '0 0 10px 0',\n//               fontSize: isMobile ? '18px' : '20px'\n//             }}>🟠 Delete Product</h3>\n//             <p style={{ \n//               marginBottom: '20px',\n//               margin: '0 0 20px 0',\n//               fontSize: isMobile ? '14px' : '16px'\n//             }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'center', \n//               gap: '12px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={cancelDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#e5e7eb', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={confirmDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#ef4444', \n//                   color: '#fff', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n                \n\n\n\n\n\n\n\n\n// import React, { useEffect, useState, useRef } from 'react';\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [allProducts, setAllProducts] = useState([]); // Store original data\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add filters state\n//   const [filters, setFilters] = useState({\n//     category: '',\n//     size: '',\n//     style: ''\n//   });\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n//   const [showProfileDropdown, setShowProfileDropdown] = useState(false);\n\n//   // Check if mobile view\n//   const [isMobile, setIsMobile] = useState(window.innerWidth < 600);\n\n//   useEffect(() => {\n//     const handleResize = () => {\n//       setIsMobile(window.innerWidth < 600);\n//     };\n\n//     window.addEventListener('resize', handleResize);\n//     return () => window.removeEventListener('resize', handleResize);\n//   }, []);\n\n//   useEffect(() => {\n//     fetchProducts();\n    \n//     // Close dropdown when clicking outside\n//     const handleClickOutside = (event) => {\n//       if (showProfileDropdown && !event.target.closest('.profile-dropdown-container')) {\n//         setShowProfileDropdown(false);\n//       }\n//     };\n    \n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, [showProfileDropdown]);\n\n//   // Apply filters whenever filters or allProducts change\n//   useEffect(() => {\n//     applyFilters();\n//   }, [filters, allProducts]);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await fetch('http://localhost:3001/api/products/all');\n//       const data = await res.json();\n//       setAllProducts(data); // Store original data\n//       setProducts(data); // Display data\n//       calculateStats(data);\n//     } catch (err) {\n//       console.error('Failed to fetch products', err);\n//     }\n//   };\n\n//   // New function to apply filters\n//   const applyFilters = () => {\n//     let filtered = [...allProducts];\n    \n//     if (filters.category) {\n//       filtered = filtered.filter(product => product.category === filters.category);\n//     }\n    \n//     if (filters.size) {\n//       filtered = filtered.filter(product => product.size === filters.size);\n//     }\n    \n//     if (filters.style) {\n//       filtered = filtered.filter(product => product.style === filters.style);\n//     }\n    \n//     setProducts(filtered);\n//     calculateStats(filtered);\n//   };\n\n//   // New function to handle filter changes\n//   const handleFilterChange = (filterType, value) => {\n//     setFilters(prev => ({\n//       ...prev,\n//       [filterType]: value\n//     }));\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:3001/api/products/delete/${selectedProductId}`, {\n//         method: 'DELETE'\n//       });\n      \n//       if (response.ok) {\n//         fetchProducts();\n//       } else {\n//         console.error('Delete failed');\n//       }\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n    \n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n      \n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n      \n//       setSelectedFile(file);\n      \n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n      \n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n      \n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n        \n//         const uploadResponse = await fetch('http://localhost:3001/api/upload', {\n//           method: 'POST',\n//           body: formData\n//         });\n        \n//         const uploadResult = await uploadResponse.json();\n        \n//         if (uploadResult.success) {\n//           imageUrl = uploadResult.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       let response;\n//       if (editingProduct) {\n//         response = await fetch(`http://localhost:3001/api/products/update/${editingProduct._id}`, {\n//           method: 'PUT',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       } else {\n//         response = await fetch('http://localhost:3001/api/products/add', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       }\n      \n//       if (response.ok) {\n//         // Reset form and close modal\n//         setEditingProduct(null);\n//         setShowModal(false);\n//         setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//         setImagePreview(null);\n//         setSelectedFile(null);\n//         fetchProducts();\n//       } else {\n//         alert('Failed to save product');\n//       }\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     window.location.href = '/login'; // or use your routing method\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ \n//       padding: '0',\n//       backgroundColor: '#f3f4f6', \n//       minHeight: '100vh', \n//       fontFamily: 'Arial, sans-serif',\n//       display: 'flex',\n//       flexDirection: 'column'\n//     }}>\n//       {/* Sticky Header */}\n//       <div style={{\n//         position: 'sticky',\n//         top: '0',\n//         zIndex: 100,\n//         backgroundColor: '#f3f4f6',\n//         padding: isMobile ? '16px' : '24px',\n//         borderBottom: '1px solid #e5e7eb'\n//       }}>\n//         {/* Topbar */}\n//         <div style={{ \n//           display: 'flex', \n//           justifyContent: 'space-between', \n//           alignItems: 'center', \n//           marginBottom: '24px',\n//           flexWrap: 'wrap',\n//           gap: '12px'\n//         }}>\n//           <h2 style={{ \n//             fontSize: isMobile ? '20px' : '24px', \n//             fontWeight: 'bold',\n//             margin: '0'\n//           }}>\n//             <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//           </h2>\n//           <div style={{ display: 'flex', alignItems: 'center', gap: '12px', position: 'relative' }} className=\"profile-dropdown-container\">\n//             <span style={{ fontSize: isMobile ? '14px' : '16px' }}>Welcome, Admin</span>\n//             <div \n//               onClick={() => setShowProfileDropdown(!showProfileDropdown)}\n//               style={{ \n//                 width: '32px', \n//                 height: '32px', \n//                 backgroundColor: '#2563eb', \n//                 color: '#fff', \n//                 borderRadius: '50%', \n//                 display: 'flex', \n//                 alignItems: 'center', \n//                 justifyContent: 'center', \n//                 fontWeight: 'bold',\n//                 cursor: 'pointer'\n//               }}\n//             >\n//               A\n//             </div>\n            \n//             {/* Profile Dropdown */}\n//             {showProfileDropdown && (\n//               <div style={{\n//                 position: 'absolute',\n//                 top: '100%',\n//                 right: '0',\n//                 marginTop: '8px',\n//                 backgroundColor: '#fff',\n//                 border: '1px solid #e5e7eb',\n//                 borderRadius: '8px',\n//                 boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n//                 zIndex: 1000,\n//                 minWidth: '120px'\n//               }}>\n//                 <button\n//                   onClick={handleLogout}\n//                   style={{\n//                     width: '100%',\n//                     padding: '12px 16px',\n//                     backgroundColor: 'transparent',\n//                     border: 'none',\n//                     textAlign: 'left',\n//                     cursor: 'pointer',\n//                     fontSize: '14px',\n//                     borderRadius: '8px',\n//                     color: '#374151'\n//                   }}\n//                   onMouseEnter={(e) => e.target.style.backgroundColor = '#f3f4f6'}\n//                   onMouseLeave={(e) => e.target.style.backgroundColor = 'transparent'}\n//                 >\n//                   🚪 Logout\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n\n//         {/* Stats - Responsive Grid */}\n//         <div style={{ \n//           display: 'grid', \n//           gridTemplateColumns: isMobile ? '1fr' : 'repeat(4, 1fr)', \n//           gap: '16px'\n//         }}>\n//           {[\n//             { label: 'Total Products 📦', value: totalProducts },\n//             { label: 'Active Products ✅', value: activeProducts },\n//             { label: 'Low Stock ⚠️', value: lowStock },\n//             { label: 'Total Value 💰', value: `₹${totalValue.toFixed(2)}/-` }\n//           ].map((stat, idx) => (\n//             <div key={idx} style={{ \n//               backgroundColor: '#fff', \n//               padding: isMobile ? '12px' : '16px', \n//               borderRadius: '8px' \n//             }}>\n//               <p style={{ \n//                 margin: '0 0 8px 0', \n//                 fontSize: isMobile ? '14px' : '16px' \n//               }}>{stat.label}</p>\n//               <h2 style={{ \n//                 fontSize: isMobile ? '20px' : '24px', \n//                 fontWeight: 'bold',\n//                 margin: '0'\n//               }}>{stat.value}</h2>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* Scrollable Content Area */}\n//       <div style={{ \n//         flex: 1,\n//         padding: isMobile ? '16px' : '24px',\n//         paddingTop: '0',\n//         display: 'flex',\n//         flexDirection: 'column'\n//       }}>\n//         {/* Product Table */}\n//         <div style={{ \n//           backgroundColor: '#fff', \n//           borderRadius: '8px', \n//           marginBottom: '24px',\n//           display: 'flex',\n//           flexDirection: 'column',\n//           height: 'calc(100vh - 300px)', // Adjust based on header height\n//           minHeight: '400px'\n//         }}>\n//           {/* Sticky Table Header */}\n//           <div style={{\n//             position: 'sticky',\n//             top: '0',\n//             zIndex: 50,\n//             backgroundColor: '#fff',\n//             borderRadius: '8px 8px 0 0',\n//             padding: isMobile ? '12px' : '16px',\n//             borderBottom: '1px solid #e5e7eb'\n//           }}>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'space-between', \n//               marginBottom: '16px',\n//               flexDirection: isMobile ? 'column' : 'row',\n//               gap: isMobile ? '12px' : '0'\n//             }}>\n//               <h3 style={{ \n//                 fontSize: isMobile ? '24px' : '30px', \n//                 fontWeight: 'bold',\n//                 margin: '0',\n//                 padding: '8px 12px', \n//               }}>Product Management</h3>\n//               <button\n//                 onClick={openModal}\n//                 style={{ \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   padding: isMobile ? '10px 16px' : '12px 12px', \n//                   borderRadius: '8px',\n//                   border: 'none',\n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '20px',\n//                   transition: 'all 0.2s ease-in-out',\n//                   transform: 'scale(1)',\n//                   alignSelf: isMobile ? 'flex-start' : 'auto'\n//                 }}\n//                 onMouseEnter={(e) => {\n//                   e.target.style.backgroundColor = '#1d4ed8';\n//                   e.target.style.transform = 'scale(1.05)';\n//                   e.target.style.boxShadow = '0 4px 12px rgba(37, 99, 235, 0.3)';\n//                 }}\n//                 onMouseLeave={(e) => {\n//                   e.target.style.backgroundColor = '#2563eb';\n//                   e.target.style.transform = 'scale(1)';\n//                   e.target.style.boxShadow = 'none';\n//                 }}\n//               >\n//                 Add New Product\n//               </button>\n//             </div>\n\n//             {/* Mobile Filters - Show as cards on mobile */}\n//             {isMobile && (\n//               <div style={{ \n//                 display: 'flex', \n//                 flexDirection: 'column', \n//                 gap: '8px', \n//                 marginBottom: '16px',\n//                 padding: '12px',\n//                 backgroundColor: '#f9fafb',\n//                 borderRadius: '8px'\n//               }}>\n//                 <select\n//                   value={filters.category}\n//                   onChange={(e) => handleFilterChange('category', e.target.value)}\n//                   style={{\n//                     padding: '8px',\n//                     fontSize: '14px',\n//                     borderRadius: '4px',\n//                     border: '1px solid #ccc',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   <option value=\"\">All Categories</option>\n//                   <option value=\"Shirts\">Shirts</option>\n//                   <option value=\"Pants\">Pants</option>\n//                   <option value=\"Accessories\">Accessories</option>\n//                   <option value=\"Shoes\">Shoes</option>\n//                 </select>\n                \n//                 <div style={{ display: 'flex', gap: '8px' }}>\n//                   <select\n//                     value={filters.size}\n//                     onChange={(e) => handleFilterChange('size', e.target.value)}\n//                     style={{\n//                       padding: '8px',\n//                       fontSize: '14px',\n//                       borderRadius: '4px',\n//                       border: '1px solid #ccc',\n//                       flex: 1\n//                     }}\n//                   >\n//                     <option value=\"\">All Sizes</option>\n//                     <option value=\"XS\">XS</option>\n//                     <option value=\"S\">S</option>\n//                     <option value=\"M\">M</option>\n//                     <option value=\"L\">L</option>\n//                     <option value=\"XL\">XL</option>\n//                   </select>\n                  \n//                   <select\n//                     value={filters.style}\n//                     onChange={(e) => handleFilterChange('style', e.target.value)}\n//                     style={{\n//                       padding: '8px',\n//                       fontSize: '14px',\n//                       borderRadius: '4px',\n//                       border: '1px solid #ccc',\n//                       flex: 1\n//                     }}\n//                   >\n//                     <option value=\"\">All Styles</option>\n//                     <option value=\"Regular Fit\">Regular Fit</option>\n//                     <option value=\"Oversized Fit\">Oversized Fit</option>\n//                   </select>\n//                 </div>\n//               </div>\n//             )}\n\n//             {/* Fixed Table Structure */}\n//             <div style={{ minWidth: isMobile ? '300px' : '700px', overflowX: 'auto' }}>\n//               <table style={{ width: '100%', fontSize: isMobile ? '14px' : '16px', borderCollapse: 'collapse' }}>\n//                 <thead style={{ backgroundColor: 'rgb(243,244,246)', width: '100%' }}>\n//                   <tr>\n//                     <th \n//                       style={{ \n//                         padding: isMobile ? '10px' : '14px', \n//                         fontSize: isMobile ? '14px' : '16px', \n//                         textAlign: 'left',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Product\n//                     </th>\n\n//                     {/* Desktop-only columns */}\n//                     {!isMobile && (\n//                       <>\n//                         {/* Category Filter */}\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px',\n//                             backgroundColor: 'transparent'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           <select\n//                             value={filters.category}\n//                             onChange={(e) => handleFilterChange('category', e.target.value)}\n//                             onFocus={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             onBlur={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             style={{\n//                               padding: '4px',\n//                               fontSize: '16px',\n//                               borderRadius: '4px',\n//                               border: '1px solid #ccc'\n//                             }}\n//                           >\n//                             <option value=\"\">Category</option>\n//                             <option value=\"Shirts\">Shirts</option>\n//                             <option value=\"Pants\">Pants</option>\n//                             <option value=\"Accessories\">Accessories</option>\n//                             <option value=\"Shoes\">Shoes</option>\n//                           </select>\n//                         </th>\n\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           Price\n//                         </th>\n\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           Stock\n//                         </th>\n\n//                         {/* Size Filter */}\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px',\n//                             backgroundColor: 'transparent'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           <select\n//                             value={filters.size}\n//                             onChange={(e) => handleFilterChange('size', e.target.value)}\n//                             onFocus={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             onBlur={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             style={{\n//                               padding: '4px',\n//                               fontSize: '16px',\n//                               borderRadius: '4px',\n//                               border: '1px solid #ccc'\n//                             }}\n//                           >\n//                             <option value=\"\">Size</option>\n//                             <option value=\"XS\">XS</option>\n//                             <option value=\"S\">S</option>\n//                             <option value=\"M\">M</option>\n//                             <option value=\"L\">L</option>\n//                             <option value=\"XL\">XL</option>\n//                           </select>\n//                         </th>\n\n//                         {/* Style Filter */}\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px',\n//                             backgroundColor: 'transparent'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           <select\n//                             value={filters.style}\n//                             onChange={(e) => handleFilterChange('style', e.target.value)}\n//                             onFocus={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             onBlur={(e) => {\n//                               e.target.parentElement.style.backgroundColor = 'transparent';\n//                             }}\n//                             style={{\n//                               padding: '4px',\n//                               fontSize: '16px',\n//                               borderRadius: '4px',\n//                               border: '1px solid #ccc'\n//                             }}\n//                           >\n//                             <option value=\"\">Style</option>\n//                             <option value=\"Regular Fit\">Regular Fit</option>\n//                             <option value=\"Oversized Fit\">Oversized Fit</option>\n//                           </select>\n//                         </th>\n\n//                         <th \n//                           style={{ \n//                             textAlign: 'center',\n//                             transition: 'background-color 0.2s ease-in-out',\n//                             cursor: 'pointer',\n//                             padding: '14px'\n//                           }}\n//                           onMouseEnter={(e) => {\n//                             e.target.style.backgroundColor = '#e5e7eb';\n//                           }}\n//                           onMouseLeave={(e) => {\n//                             e.target.style.backgroundColor = 'transparent';\n//                           }}\n//                         >\n//                           Status\n//                         </th>\n//                       </>\n//                     )}\n\n//                     <th \n//                       style={{ \n//                         textAlign: 'center',\n//                         transition: 'background-color 0.2s ease-in-out',\n//                         cursor: 'pointer',\n//                         padding: isMobile ? '10px' : '14px'\n//                       }}\n//                       onMouseEnter={(e) => {\n//                         e.target.style.backgroundColor = '#e5e7eb';\n//                       }}\n//                       onMouseLeave={(e) => {\n//                         e.target.style.backgroundColor = 'transparent';\n//                       }}\n//                     >\n//                       Actions\n//                     </th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {products.map((product) => (\n//                     <tr \n//                       key={product._id} \n//                       className=\"product-table-row\"\n//                       style={{ \n//                         borderTop: '1px solid #e5e7eb'\n//                       }}\n//                     >\n//                       <td style={{ \n//                         display: 'flex', \n//                         alignItems: 'center', \n//                         padding: isMobile ? '6px' : '8px',\n//                         flexDirection: isMobile ? 'column' : 'row',\n//                         gap: isMobile ? '8px' : '0'\n//                       }}>\n//                         <img\n//                           src={product.image}\n//                           alt={product.name}\n//                           style={{\n//                             width: isMobile ? '60px' : '40px',\n//                             height: isMobile ? '60px' : '40px',\n//                             objectFit: 'cover',\n//                             borderRadius: '6px',\n//                             marginRight: isMobile ? '0' : '12px',\n//                             border: '1px solid #ccc',\n//                           }}\n//                         />\n//                         <div style={{ \n//                           textAlign: isMobile ? 'center' : 'left',\n//                           fontSize: isMobile ? '12px' : '14px'\n//                         }}>\n//                           <div style={{ fontWeight: 'bold', marginBottom: isMobile ? '4px' : '0' }}>\n//                             {product.name}\n//                           </div>\n//                           {/* Show additional info on mobile */}\n//                           {isMobile && (\n//                             <div style={{ fontSize: '11px', color: '#666', lineHeight: '1.2' }}>\n//                               <div>{product.category} • {product.size} • {product.style}</div>\n//                               <div>₹{product.price.toFixed(2)} • Stock: {product.quantity}</div>\n//                               <span style={{\n//                                 padding: '2px 6px',\n//                                 borderRadius: '8px',\n//                                 fontSize: '10px',\n//                                 backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                                 color: product.quantity >= 1 ? '#15803d' : '#b91c1c',\n//                                 display: 'inline-block',\n//                                 marginTop: '2px'\n//                               }}>\n//                                 {product.quantity >= 1 ? 'active' : 'inactive'}\n//                               </span>\n//                             </div>\n//                           )}\n//                         </div>\n//                       </td>\n                      \n//                       {/* Desktop-only columns */}\n//                       {!isMobile && (\n//                         <>\n//                           <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                           <td style={{ textAlign: 'center' }}>₹{product.price.toFixed(2)}/-</td>\n//                           <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                           <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                           <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                           <td style={{ textAlign: 'center' }}>\n//                             <span style={{\n//                               padding: '4px 8px',\n//                               borderRadius: '12px',\n//                               fontSize: '12px',\n//                               backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                               color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                             }}>\n//                               {product.quantity >= 1 ? 'active' : 'inactive'}\n//                             </span>\n//                           </td>\n//                         </>\n//                       )}\n                      \n//                       <td style={{ textAlign: 'center', padding: isMobile ? '6px' : '8px' }}>\n//                         <div style={{ display: 'flex', justifyContent: 'center', gap: isMobile ? '8px' : '12px' }}>\n//                           <span\n//                             onClick={() => handleEdit(product)}\n//                             title=\"Edit Product\"\n//                             style={{ \n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s ease-in-out',\n//                               display: 'inline-block',\n//                               padding: isMobile ? '8px' : '4px'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.transform = 'scale(1.1)';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.transform = 'scale(1)';\n//                             }}\n//                           >\n//                             <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                               <path d=\"M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125\" stroke=\"#3b82f6\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                             </svg>\n//                           </span>\n//                           <span\n//                             onClick={() => handleDeleteClick(product._id)}\n//                             title=\"Delete Product\"\n//                             style={{ \n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s ease-in-out',\n//                               display: 'inline-block',\n//                               padding: isMobile ? '8px' : '4px'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.transform = 'scale(1.1)';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.transform = 'scale(1)';\n//                             }}\n//                           >\n//                             <svg width={isMobile ? \"20\" : \"16\"} height={isMobile ? \"20\" : \"16\"} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                               <path d=\"M3 6h18M8 6V4a2 2 0 012-2h4a2 2 0 012 2v2m3 0v14a2 2 0 01-2 2H7a2 2 0 01-2-2V6h14zM10 11v6M14 11v6\" stroke=\"#da1b1b\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n//                             </svg>\n//                           </span>\n//                         </div>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Add CSS styles */}\n//       <style>\n//         {`\n//           .product-table-row:hover {\n//             background-color: #dbeafe !important;\n//           }\n//           .product-table-row {\n//             transition: background-color 0.2s ease-in-out;\n//           }\n//         `}\n//       </style>\n\n//       {/* Updated Modal with Mobile Responsiveness */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', \n//             padding: isMobile ? '16px' : '24px', \n//             borderRadius: '8px',\n//             width: isMobile ? '100%' : '400px',\n//             maxWidth: isMobile ? 'none' : '400px',\n//             maxHeight: '90vh', \n//             overflowY: 'auto', \n//             boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ \n//               fontSize: isMobile ? '16px' : '18px', \n//               fontWeight: 'bold', \n//               marginBottom: '16px',\n//               margin: '0 0 16px 0'\n//             }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input \n//                 name=\"name\" \n//                 placeholder=\"Product Name\" \n//                 value={newProduct.name} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n              \n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ \n//                   fontSize: isMobile ? '13px' : '14px', \n//                   fontWeight: '500', \n//                   color: '#374151' \n//                 }}>\n//                   Product Image\n//                 </label>\n                \n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n                \n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n                \n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: isMobile ? '10px 12px' : '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: isMobile ? '15px' : '14px',\n//                     cursor: 'pointer',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n                \n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n                \n//                 <input \n//                   name=\"image\" \n//                   placeholder=\"Or paste image URL\" \n//                   value={newProduct.image} \n//                   onChange={handleInputChange} \n//                   style={{\n//                     ...inputStyle, \n//                     width: '100%', \n//                     boxSizing: 'border-box',\n//                     fontSize: isMobile ? '16px' : '14px',\n//                     padding: isMobile ? '12px' : '10px'\n//                   }} \n//                 />\n//               </div>\n              \n//               <select \n//                 name=\"category\" \n//                 value={newProduct.category} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirts\">Shirts</option>\n//                 <option value=\"Pants\">Pants</option>\n//                 <option value=\"Accessories\">Accessories</option>\n//                 <option value=\"Shoes\">Shoes</option>\n//               </select>\n//               <input \n//                 name=\"price\" \n//                 type=\"number\" \n//                 placeholder=\"Price ($)\" \n//                 value={newProduct.price} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <input \n//                 name=\"quantity\" \n//                 type=\"number\" \n//                 placeholder=\"Stock Quantity\" \n//                 value={newProduct.quantity} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }} \n//               />\n//               <select \n//                 name=\"size\" \n//                 value={newProduct.size} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select \n//                 name=\"style\" \n//                 value={newProduct.style} \n//                 onChange={handleInputChange} \n//                 style={{\n//                   ...inputStyle, \n//                   width: '100%', \n//                   boxSizing: 'border-box',\n//                   fontSize: isMobile ? '16px' : '14px',\n//                   padding: isMobile ? '12px' : '10px'\n//                 }}\n//               >\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'flex-end', \n//               marginTop: '20px', \n//               gap: '10px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={() => setShowModal(false)} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#f3f4f6', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={handleSave} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup - Mobile Responsive */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000,\n//           padding: isMobile ? '16px' : '0'\n//         }}>\n//           <div style={{\n//             background: '#fff', \n//             padding: isMobile ? '20px' : '24px 32px', \n//             borderRadius: '12px', \n//             width: isMobile ? '100%' : '350px',\n//             maxWidth: isMobile ? 'none' : '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', \n//             textAlign: 'center', \n//             fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ \n//               marginBottom: '10px', \n//               margin: '0 0 10px 0',\n//               fontSize: isMobile ? '18px' : '20px'\n//             }}>🟠 Delete Product</h3>\n//             <p style={{ \n//               marginBottom: '20px',\n//               margin: '0 0 20px 0',\n//               fontSize: isMobile ? '14px' : '16px'\n//             }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'center', \n//               gap: '12px',\n//               flexDirection: isMobile ? 'column' : 'row'\n//             }}>\n//               <button \n//                 onClick={cancelDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#e5e7eb', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={confirmDelete} \n//                 style={{ \n//                   padding: isMobile ? '12px 16px' : '8px 16px', \n//                   backgroundColor: '#ef4444', \n//                   color: '#fff', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer',\n//                   fontSize: isMobile ? '16px' : '14px'\n//                 }}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}