{"ast":null,"code":"// import React from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size)));\n//   };\n\n//   const total = cartItems.reduce(\n//     (sum, item) => sum + item.price * item.quantity,\n//     0\n//   );\n\n//   const handleSaveCart = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         {\n//           cartItems,\n//           total\n//         },\n//         { withCredentials: true }\n//       );\n//       alert('Cart saved successfully!');\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to save cart');\n//     }\n//   };\n\n//   return (\n//     <div style={sidebarStyle}>\n//       <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//         <h3>Shopping Cart</h3>\n//         <button onClick={onClose} style={closeBtn}>×</button>\n//       </div>\n\n//       {cartItems.length === 0 ? (\n//         <p>Your cart is empty.</p>\n//       ) : (\n//         cartItems.map((item, index) => (\n//           <div key={`${item.id}-${item.size}-${index}`} style={itemStyle}>\n//             <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n//               <img\n//                 src={item.image}\n//                 alt={item.name}\n//                 style={{ width: '50px', height: '50px', objectFit: 'cover', borderRadius: '4px' }}\n//               />\n//               <div>\n//                 <p style={{ fontWeight: 'bold', margin: 0 }}>{item.name}</p>\n//                 <p style={{ margin: 0 }}>Size: <strong>{item.size}</strong></p>\n//                 <p style={{ margin: 0 }}>Style: <strong>{item.style}</strong></p> {/* ✅ Show Style */}\n//                 <p style={{ margin: 0 }}>${item.price.toFixed(2)}</p>\n//               </div>\n//             </div>\n\n//             <div style={{ display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n//               <button onClick={() => updateQuantity(item.id, item.size, -1)} style={qtyBtn}>-</button>\n//               <span style={{ margin: '0 10px' }}>{item.quantity}</span>\n//               <button onClick={() => updateQuantity(item.id, item.size, 1)} style={qtyBtn}>+</button>\n\n//               <button onClick={() => removeItem(item.id, item.size)} style={deleteBtn}>\n//                 <FontAwesomeIcon icon={faTrash} style={{ color: 'red' }} />\n//               </button>\n//             </div>\n//           </div>\n//         ))\n//       )}\n\n//       <h4>Total: ${total.toFixed(2)}</h4>\n\n//       <button style={saveBtn} onClick={handleSaveCart}>\n//         Add to Cart\n//       </button>\n//     </div>\n//   );\n// };\n\n// const sidebarStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   right: 0,\n//   width: '320px',\n//   height: '100%',\n//   backgroundColor: '#fff',\n//   boxShadow: '-2px 0 5px rgba(0,0,0,0.2)',\n//   padding: '20px',\n//   zIndex: 1000,\n//   overflowY: 'auto'\n// };\n\n// const closeBtn = {\n//   fontSize: '32px',\n//   background: 'none',\n//   border: 'black',\n//   cursor: 'pointer',\n//   color: 'red'\n// };\n\n// const itemStyle = {\n//   borderBottom: '1px solid #ddd',\n//   paddingBottom: '10px',\n//   marginBottom: '15px'\n// };\n\n// const qtyBtn = {\n//   width: '30px',\n//   height: '30px',\n//   fontSize: '16px',\n//   background: '#eee',\n//   border: '1px solid #ccc',\n//   cursor: 'pointer'\n// };\n\n// const deleteBtn = {\n//   marginLeft: 'auto',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer'\n// };\n\n// const saveBtn = {\n//   backgroundColor: '#2563eb',\n//   color: '#fff',\n//   padding: '10px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n//   fontWeight: '600'\n// };\n\n// export default CartSidebar;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/CartSidebar.jsx"],"sourcesContent":["// import React from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size)));\n//   };\n\n//   const total = cartItems.reduce(\n//     (sum, item) => sum + item.price * item.quantity,\n//     0\n//   );\n\n//   const handleSaveCart = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         {\n//           cartItems,\n//           total\n//         },\n//         { withCredentials: true }\n//       );\n//       alert('Cart saved successfully!');\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to save cart');\n//     }\n//   };\n\n//   return (\n//     <div style={sidebarStyle}>\n//       <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//         <h3>Shopping Cart</h3>\n//         <button onClick={onClose} style={closeBtn}>×</button>\n//       </div>\n\n//       {cartItems.length === 0 ? (\n//         <p>Your cart is empty.</p>\n//       ) : (\n//         cartItems.map((item, index) => (\n//           <div key={`${item.id}-${item.size}-${index}`} style={itemStyle}>\n//             <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n//               <img\n//                 src={item.image}\n//                 alt={item.name}\n//                 style={{ width: '50px', height: '50px', objectFit: 'cover', borderRadius: '4px' }}\n//               />\n//               <div>\n//                 <p style={{ fontWeight: 'bold', margin: 0 }}>{item.name}</p>\n//                 <p style={{ margin: 0 }}>Size: <strong>{item.size}</strong></p>\n//                 <p style={{ margin: 0 }}>Style: <strong>{item.style}</strong></p> {/* ✅ Show Style */}\n//                 <p style={{ margin: 0 }}>${item.price.toFixed(2)}</p>\n//               </div>\n//             </div>\n\n//             <div style={{ display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n//               <button onClick={() => updateQuantity(item.id, item.size, -1)} style={qtyBtn}>-</button>\n//               <span style={{ margin: '0 10px' }}>{item.quantity}</span>\n//               <button onClick={() => updateQuantity(item.id, item.size, 1)} style={qtyBtn}>+</button>\n\n//               <button onClick={() => removeItem(item.id, item.size)} style={deleteBtn}>\n//                 <FontAwesomeIcon icon={faTrash} style={{ color: 'red' }} />\n//               </button>\n//             </div>\n//           </div>\n//         ))\n//       )}\n\n//       <h4>Total: ${total.toFixed(2)}</h4>\n\n//       <button style={saveBtn} onClick={handleSaveCart}>\n//         Add to Cart\n//       </button>\n//     </div>\n//   );\n// };\n\n// const sidebarStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   right: 0,\n//   width: '320px',\n//   height: '100%',\n//   backgroundColor: '#fff',\n//   boxShadow: '-2px 0 5px rgba(0,0,0,0.2)',\n//   padding: '20px',\n//   zIndex: 1000,\n//   overflowY: 'auto'\n// };\n\n// const closeBtn = {\n//   fontSize: '32px',\n//   background: 'none',\n//   border: 'black',\n//   cursor: 'pointer',\n//   color: 'red'\n// };\n\n// const itemStyle = {\n//   borderBottom: '1px solid #ddd',\n//   paddingBottom: '10px',\n//   marginBottom: '15px'\n// };\n\n// const qtyBtn = {\n//   width: '30px',\n//   height: '30px',\n//   fontSize: '16px',\n//   background: '#eee',\n//   border: '1px solid #ccc',\n//   cursor: 'pointer'\n// };\n\n// const deleteBtn = {\n//   marginLeft: 'auto',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer'\n// };\n\n// const saveBtn = {\n//   backgroundColor: '#2563eb',\n//   color: '#fff',\n//   padding: '10px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n//   fontWeight: '600'\n// };\n\n// export default CartSidebar;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}