{"ast":null,"code":"// // Login.js\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         backgroundColor: '#f9fafb',\n//         minHeight: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         padding: '20px',\n//         fontFamily: 'system-ui, sans-serif',\n//       }}\n//     >\n//       <form\n//         onSubmit={handleSubmit(onSubmit)}\n//         style={{\n//           backgroundColor: '#ffffff',\n//           padding: '30px',\n//           borderRadius: '10px',\n//           boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//           width: '100%',\n//           maxWidth: '400px',\n//           display: 'flex',\n//           flexDirection: 'column',\n//           gap: '15px',\n//         }}\n//       >\n//         <h2 style={{ textAlign: 'center', marginBottom: '10px', color: '#1f2937' }}>Login to StyleHub</h2>\n\n//         <div style={{ display: 'flex', justifyContent: 'center', gap: '20px', fontSize: '14px' }}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={{\n//             padding: '10px',\n//             borderRadius: '6px',\n//             border: '1px solid #e5e7eb',\n//             fontSize: '14px',\n//           }}\n//           {...register('email', { required: 'Email is required' })}\n//         />\n//         {errors.email && <p style={{ color: '#dc2626', fontSize: '12px' }}>{errors.email.message}</p>}\n\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={{\n//             padding: '10px',\n//             borderRadius: '6px',\n//             border: '1px solid #e5e7eb',\n//             fontSize: '14px',\n//           }}\n//           {...register('password', { required: 'Password is required' })}\n//         />\n//         {errors.password && <p style={{ color: '#dc2626', fontSize: '12px' }}>{errors.password.message}</p>}\n\n//         <button\n//           type=\"submit\"\n//           style={{\n//             backgroundColor: '#2563eb',\n//             color: 'white',\n//             padding: '10px',\n//             border: 'none',\n//             borderRadius: '6px',\n//             fontWeight: '600',\n//             fontSize: '14px',\n//             cursor: 'pointer',\n//           }}\n//         >\n//           Login\n//         </button>\n\n//         <p style={{ textAlign: 'center', fontSize: '13px' }}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={{ color: '#2563eb', fontWeight: '600', textDecoration: 'none' }}>\n//             Register\n//           </Link>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Login.js"],"sourcesContent":["// // Login.js\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         backgroundColor: '#f9fafb',\n//         minHeight: '100vh',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         padding: '20px',\n//         fontFamily: 'system-ui, sans-serif',\n//       }}\n//     >\n//       <form\n//         onSubmit={handleSubmit(onSubmit)}\n//         style={{\n//           backgroundColor: '#ffffff',\n//           padding: '30px',\n//           borderRadius: '10px',\n//           boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//           width: '100%',\n//           maxWidth: '400px',\n//           display: 'flex',\n//           flexDirection: 'column',\n//           gap: '15px',\n//         }}\n//       >\n//         <h2 style={{ textAlign: 'center', marginBottom: '10px', color: '#1f2937' }}>Login to StyleHub</h2>\n\n//         <div style={{ display: 'flex', justifyContent: 'center', gap: '20px', fontSize: '14px' }}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={{\n//             padding: '10px',\n//             borderRadius: '6px',\n//             border: '1px solid #e5e7eb',\n//             fontSize: '14px',\n//           }}\n//           {...register('email', { required: 'Email is required' })}\n//         />\n//         {errors.email && <p style={{ color: '#dc2626', fontSize: '12px' }}>{errors.email.message}</p>}\n\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={{\n//             padding: '10px',\n//             borderRadius: '6px',\n//             border: '1px solid #e5e7eb',\n//             fontSize: '14px',\n//           }}\n//           {...register('password', { required: 'Password is required' })}\n//         />\n//         {errors.password && <p style={{ color: '#dc2626', fontSize: '12px' }}>{errors.password.message}</p>}\n\n//         <button\n//           type=\"submit\"\n//           style={{\n//             backgroundColor: '#2563eb',\n//             color: 'white',\n//             padding: '10px',\n//             border: 'none',\n//             borderRadius: '6px',\n//             fontWeight: '600',\n//             fontSize: '14px',\n//             cursor: 'pointer',\n//           }}\n//         >\n//           Login\n//         </button>\n\n//         <p style={{ textAlign: 'center', fontSize: '13px' }}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={{ color: '#2563eb', fontWeight: '600', textDecoration: 'none' }}>\n//             Register\n//           </Link>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}