{"ast":null,"code":"// import React, { useState } from 'react';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product); // Open size selection modal\n//   };\n\n//   const handleSizeSelect = (size) => {\n//     if (!selectedProduct) return;\n\n//     const productWithSize = { ...selectedProduct, size };\n//     const existing = cartItems.find(\n//       (item) => item.id === productWithSize.id && item.size === size\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === productWithSize.id && item.size === size\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...productWithSize, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null); // Close modal\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'sans-serif', background: '#f9fafb' }}>\n//       <Header cartItems={cartItems} onCartToggle={() => setCartOpen(true)} />\n//       <CategoryNav onCategorySelect={setSelectedCategory} />\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n//         <Filters category={selectedCategory} />\n//         <ProductGrid\n//           category={selectedCategory}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.5)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '20px',\n//               borderRadius: '8px',\n//               textAlign: 'center',\n//               width: '300px',\n//             }}\n//           >\n//             <h3>Select Size for {selectedProduct.name}</h3>\n//             <div\n//               style={{\n//                 display: 'flex',\n//                 gap: '10px',\n//                 marginTop: '15px',\n//                 justifyContent: 'center',\n//                 flexWrap: 'wrap',\n//               }}\n//             >\n//               {['XS', 'S', 'M', 'L', 'XL'].map((size) => (\n//                 <button\n//                   key={size}\n//                   onClick={() => handleSizeSelect(size)}\n//                   style={{\n//                     padding: '8px 16px',\n//                     border: '1px solid #ccc',\n//                     borderRadius: '4px',\n//                     cursor: 'pointer',\n//                     backgroundColor: '#f0f0f0',\n//                   }}\n//                 >\n//                   {size}\n//                 </button>\n//               ))}\n//             </div>\n//             <button\n//               onClick={() => setSelectedProduct(null)}\n//               style={{\n//                 marginTop: '20px',\n//                 backgroundColor: '#f87171',\n//                 color: '#fff',\n//                 padding: '8px 16px',\n//                 border: 'none',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n// import React, { useState } from 'react';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [selectedSize, setSelectedSize] = useState('');\n//   const [selectedStyle, setSelectedStyle] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product); // Show size selection modal\n//   };\n\n//   const handleSizeSelect = (size) => {\n//     if (!selectedProduct) return;\n//     const productWithSize = { ...selectedProduct, size };\n\n//     const existing = cartItems.find(\n//       (item) => item.id === productWithSize.id && item.size === size\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === productWithSize.id && item.size === size\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...productWithSize, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null); // Close modal\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'sans-serif', background: '#f9fafb' }}>\n//       <Header cartItems={cartItems} onCartToggle={() => setCartOpen(true)} />\n//       <CategoryNav onCategorySelect={setSelectedCategory} />\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n//         <Filters\n//           category={selectedCategory}\n//           onSizeChange={setSelectedSize}\n//           onStyleChange={setSelectedStyle}\n//         />\n//         <ProductGrid\n//           category={selectedCategory}\n//           size={selectedSize}\n//           style={selectedStyle}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {/* Size Selection Modal */}\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.5)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '20px',\n//               borderRadius: '8px',\n//               textAlign: 'center',\n//               width: '300px',\n//             }}\n//           >\n//             <h3>Select Size for {selectedProduct.name}</h3>\n//             <div\n//               style={{\n//                 display: 'flex',\n//                 gap: '10px',\n//                 marginTop: '15px',\n//                 justifyContent: 'center',\n//                 flexWrap: 'wrap',\n//               }}\n//             >\n//               {['XS', 'S', 'M', 'L', 'XL'].map((size) => (\n//                 <button\n//                   key={size}\n//                   onClick={() => handleSizeSelect(size)}\n//                   style={{\n//                     padding: '8px 16px',\n//                     border: '1px solid #ccc',\n//                     borderRadius: '4px',\n//                     cursor: 'pointer',\n//                     backgroundColor: '#f0f0f0',\n//                   }}\n//                 >\n//                   {size}\n//                 </button>\n//               ))}\n//             </div>\n//             <button\n//               onClick={() => setSelectedProduct(null)}\n//               style={{\n//                 marginTop: '20px',\n//                 backgroundColor: '#f87171',\n//                 color: '#fff',\n//                 padding: '8px 16px',\n//                 border: 'none',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Pages/Home.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product); // Open size selection modal\n//   };\n\n//   const handleSizeSelect = (size) => {\n//     if (!selectedProduct) return;\n\n//     const productWithSize = { ...selectedProduct, size };\n//     const existing = cartItems.find(\n//       (item) => item.id === productWithSize.id && item.size === size\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === productWithSize.id && item.size === size\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...productWithSize, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null); // Close modal\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'sans-serif', background: '#f9fafb' }}>\n//       <Header cartItems={cartItems} onCartToggle={() => setCartOpen(true)} />\n//       <CategoryNav onCategorySelect={setSelectedCategory} />\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n//         <Filters category={selectedCategory} />\n//         <ProductGrid\n//           category={selectedCategory}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.5)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '20px',\n//               borderRadius: '8px',\n//               textAlign: 'center',\n//               width: '300px',\n//             }}\n//           >\n//             <h3>Select Size for {selectedProduct.name}</h3>\n//             <div\n//               style={{\n//                 display: 'flex',\n//                 gap: '10px',\n//                 marginTop: '15px',\n//                 justifyContent: 'center',\n//                 flexWrap: 'wrap',\n//               }}\n//             >\n//               {['XS', 'S', 'M', 'L', 'XL'].map((size) => (\n//                 <button\n//                   key={size}\n//                   onClick={() => handleSizeSelect(size)}\n//                   style={{\n//                     padding: '8px 16px',\n//                     border: '1px solid #ccc',\n//                     borderRadius: '4px',\n//                     cursor: 'pointer',\n//                     backgroundColor: '#f0f0f0',\n//                   }}\n//                 >\n//                   {size}\n//                 </button>\n//               ))}\n//             </div>\n//             <button\n//               onClick={() => setSelectedProduct(null)}\n//               style={{\n//                 marginTop: '20px',\n//                 backgroundColor: '#f87171',\n//                 color: '#fff',\n//                 padding: '8px 16px',\n//                 border: 'none',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\n\n// import React, { useState } from 'react';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [selectedSize, setSelectedSize] = useState('');\n//   const [selectedStyle, setSelectedStyle] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product); // Show size selection modal\n//   };\n\n//   const handleSizeSelect = (size) => {\n//     if (!selectedProduct) return;\n//     const productWithSize = { ...selectedProduct, size };\n\n//     const existing = cartItems.find(\n//       (item) => item.id === productWithSize.id && item.size === size\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === productWithSize.id && item.size === size\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...productWithSize, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null); // Close modal\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'sans-serif', background: '#f9fafb' }}>\n//       <Header cartItems={cartItems} onCartToggle={() => setCartOpen(true)} />\n//       <CategoryNav onCategorySelect={setSelectedCategory} />\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n//         <Filters\n//           category={selectedCategory}\n//           onSizeChange={setSelectedSize}\n//           onStyleChange={setSelectedStyle}\n//         />\n//         <ProductGrid\n//           category={selectedCategory}\n//           size={selectedSize}\n//           style={selectedStyle}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {/* Size Selection Modal */}\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.5)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '20px',\n//               borderRadius: '8px',\n//               textAlign: 'center',\n//               width: '300px',\n//             }}\n//           >\n//             <h3>Select Size for {selectedProduct.name}</h3>\n//             <div\n//               style={{\n//                 display: 'flex',\n//                 gap: '10px',\n//                 marginTop: '15px',\n//                 justifyContent: 'center',\n//                 flexWrap: 'wrap',\n//               }}\n//             >\n//               {['XS', 'S', 'M', 'L', 'XL'].map((size) => (\n//                 <button\n//                   key={size}\n//                   onClick={() => handleSizeSelect(size)}\n//                   style={{\n//                     padding: '8px 16px',\n//                     border: '1px solid #ccc',\n//                     borderRadius: '4px',\n//                     cursor: 'pointer',\n//                     backgroundColor: '#f0f0f0',\n//                   }}\n//                 >\n//                   {size}\n//                 </button>\n//               ))}\n//             </div>\n//             <button\n//               onClick={() => setSelectedProduct(null)}\n//               style={{\n//                 marginTop: '20px',\n//                 backgroundColor: '#f87171',\n//                 color: '#fff',\n//                 padding: '8px 16px',\n//                 border: 'none',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}