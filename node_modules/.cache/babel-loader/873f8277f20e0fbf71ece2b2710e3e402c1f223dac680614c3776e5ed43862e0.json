{"ast":null,"code":"// import React from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n//   const handleSaveCart = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total },\n//         { withCredentials: true }\n//       );\n\n//       alert('Cart saved successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to save cart');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//           <h3>Shopping Cart</h3>\n//           <button onClick={onClose} style={closeBtn}>×</button>\n//         </div>\n\n//         {cartItems.length === 0 ? (\n//           <p>Your cart is empty.</p>\n//         ) : (\n//           cartItems.map((item, index) => (\n//             <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemStyle}>\n//               <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n//                 <img\n//                   src={item.image}\n//                   alt={item.name}\n//                   style={{ width: '50px', height: '50px', objectFit: 'cover', borderRadius: '4px' }}\n//                 />\n//                 <div>\n//                   <p style={{ fontWeight: 'bold', margin: 0 }}>{item.name}</p>\n//                   <p style={{ margin: 0 }}>Size: <strong>{item.size}</strong></p>\n//                   <p style={{ margin: 0 }}>Style: <strong>{item.style}</strong></p>\n//                   <p style={{ margin: 0 }}>₹{item.price.toFixed(2)}</p>\n//                 </div>\n//               </div>\n\n//               <div style={{ display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtn}>-</button>\n//                 <span style={{ margin: '0 10px' }}>{item.quantity}</span>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtn}>+</button>\n\n//                 <button onClick={() => removeItem(item.id, item.size, item.name)} style={deleteBtn}>\n//                   <FontAwesomeIcon icon={faTrash} style={{ color: 'red' }} />\n//                 </button>\n//               </div>\n//             </div>\n//           ))\n//         )}\n\n//         <h4>Total: ₹{total.toFixed(2)}</h4>\n\n//         <button style={saveBtn} onClick={handleSaveCart}>\n//           Add to Cart\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // ✅ Dark background overlay behind sidebar\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.4)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '320px',\n//   height: '100%',\n//   backgroundColor: '#fff',\n//   boxShadow: '-2px 0 5px rgba(0,0,0,0.2)',\n//   padding: '20px',\n//   overflowY: 'auto',\n// };\n\n// const closeBtn = {\n//   fontSize: '32px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: 'red',\n// };\n\n// const itemStyle = {\n//   borderBottom: '1px solid #ddd',\n//   paddingBottom: '10px',\n//   marginBottom: '15px',\n// };\n\n// const qtyBtn = {\n//   width: '30px',\n//   height: '30px',\n//   fontSize: '16px',\n//   background: '#eee',\n//   border: '1px solid #ccc',\n//   cursor: 'pointer',\n// };\n\n// const deleteBtn = {\n//   marginLeft: 'auto',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n// };\n\n// const saveBtn = {\n//   backgroundColor: '#2563eb',\n//   color: '#fff',\n//   padding: '10px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n// };\n\n// export default CartSidebar;\n\n// second updated with chatgpt\n\n// import React from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n//   const handleCheckout = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total },\n//         { withCredentials: true }\n//       );\n\n//       alert('Cart saved successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to save cart');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n//           <h3 style={{ margin: 0 }}>My Cart</h3>\n//           <button onClick={onClose} style={closeBtn}>×</button>\n//         </div>\n\n//         {cartItems.length === 0 ? (\n//           <p>Your cart is empty.</p>\n//         ) : (\n//           cartItems.map((item, index) => (\n//             <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemStyle}>\n//               <div style={productRow}>\n//                 <img\n//                   src={item.image}\n//                   alt={item.name}\n//                   style={productImage}\n//                 />\n//                 <div>\n//                   <p style={nameText}>{item.name}</p>\n//                   <p style={text}><strong>Size:</strong> {item.size}</p>\n//                   <p style={text}><strong>Style:</strong> {item.style}</p>\n//                   <p style={text}><strong>₹</strong>{item.price.toFixed(2)}</p>\n//                 </div>\n//               </div>\n\n//               <div style={quantityRow}>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtn}>-</button>\n//                 <span style={qtyCount}>{item.quantity}</span>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtn}>+</button>\n\n//                 <button onClick={() => removeItem(item.id, item.size, item.name)} style={deleteBtn}>\n//                   <FontAwesomeIcon icon={faTrash} style={{ color: 'red' }} />\n//                 </button>\n//               </div>\n//             </div>\n//           ))\n//         )}\n\n//         <div style={{ marginTop: '20px' }}>\n//           <h4 style={totalText}>Total: ₹{total.toFixed(2)}</h4>\n//           <button style={checkoutBtn} onClick={handleCheckout}>\n//             Checkout\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // === Styling ===\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.4)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '350px',\n//   height: '100%',\n//   backgroundColor: '#fff',\n//   boxShadow: '-2px 0 5px rgba(0,0,0,0.2)',\n//   padding: '20px',\n//   overflowY: 'auto',\n// };\n\n// const closeBtn = {\n//   fontSize: '28px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: 'red',\n// };\n\n// const itemStyle = {\n//   borderBottom: '1px solid #e0e0e0',\n//   paddingBottom: '12px',\n//   marginBottom: '18px',\n// };\n\n// const productRow = {\n//   display: 'flex',\n//   gap: '12px',\n//   alignItems: 'center',\n// };\n\n// const productImage = {\n//   width: '70px',\n//   height: '70px',\n//   objectFit: 'cover',\n//   borderRadius: '8px',\n// };\n\n// const nameText = {\n//   fontWeight: 'bold',\n//   marginBottom: '6px',\n// };\n\n// const text = {\n//   margin: 0,\n//   fontSize: '14px',\n//   color: '#333',\n// };\n\n// const quantityRow = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   marginTop: '10px',\n//   justifyContent: 'space-between',\n// };\n\n// const qtyBtn = {\n//   width: '32px',\n//   height: '32px',\n//   fontSize: '16px',\n//   background: '#f3f3f3',\n//   border: '1px solid #ccc',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n// };\n\n// const qtyCount = {\n//   margin: '0 10px',\n//   fontSize: '16px',\n// };\n\n// const deleteBtn = {\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   marginLeft: 'auto',\n// };\n\n// const totalText = {\n//   textAlign: 'right',\n//   marginBottom: '10px',\n//   fontSize: '18px',\n//   fontWeight: 'bold',\n// };\n\n// const checkoutBtn = {\n//   backgroundColor: '#1f2937',\n//   color: '#fff',\n//   padding: '12px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '6px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n//   fontSize: '16px',\n// };\n\n// export default CartSidebar;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash, faTimes, faGift, faShippingFast, faPercent, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   const [showSubscription, setShowSubscription] = useState(false);\n\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n//   const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n\n//   // Calculate discounts based on quantity\n//   const getDiscountPercentage = () => {\n//     if (itemCount >= 10) return 60;\n//     if (itemCount >= 5) return 25;\n//     if (itemCount >= 3) return 15;\n//     return 0;\n//   };\n\n//   const discountPercent = getDiscountPercentage();\n//   const hasUnlockedPrizes = itemCount >= 3;\n\n//   const handleCheckout = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total: subtotal },\n//         { withCredentials: true }\n//       );\n\n//       alert('Order placed successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to place order');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         {/* Header */}\n//         <div style={headerStyle}>\n//           <h2 style={titleStyle}>MY CART ({itemCount})</h2>\n//           <button onClick={onClose} style={closeBtn}>\n//             <FontAwesomeIcon icon={faTimes} />\n//           </button>\n//         </div>\n\n//         {/* Rewards Banner */}\n//         {hasUnlockedPrizes && (\n//           <div style={rewardsBannerStyle}>\n//             <div style={rewardsProgressStyle}>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faShippingFast} style={badgeIconStyle} />\n//                 <span>Free Shipping</span>\n//               </div>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faPercent} style={badgeIconStyle} />\n//                 <span>{discountPercent}% off</span>\n//               </div>\n//               {itemCount >= 10 && (\n//                 <div style={rewardsBadgeStyle}>\n//                   <FontAwesomeIcon icon={faGift} style={badgeIconStyle} />\n//                   <span>+ Mystery Gift</span>\n//                 </div>\n//               )}\n//             </div>\n//             <p style={unlockTextStyle}>\n//               <FontAwesomeIcon icon={faTrophy} style={{ color: '#ff6b35', marginRight: '5px' }} />\n//               You've unlocked all prizes! 🎉\n//             </p>\n//           </div>\n//         )}\n\n//         {/* Subscription Banner */}\n//         <div style={subscriptionBannerStyle}>\n//           <p style={subscriptionTextStyle}>\n//             Subscribe to <span style={highlightStyle}>save 20%</span> now and on future deliveries.\n//           </p>\n//           <button style={setUpNowBtnStyle} onClick={() => setShowSubscription(!showSubscription)}>\n//             🔄 Set Up Now\n//           </button>\n//         </div>\n\n//         {/* Cart Items */}\n//         <div style={itemsContainerStyle}>\n//           {cartItems.length === 0 ? (\n//             <p style={emptyCartStyle}>Your cart is empty.</p>\n//           ) : (\n//             cartItems.map((item, index) => (\n//               <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemCardStyle}>\n//                 <div style={itemHeaderStyle}>\n//                   <img\n//                     src={item.image}\n//                     alt={item.name}\n//                     style={productImageStyle}\n//                   />\n//                   <div style={itemInfoStyle}>\n//                     <h4 style={itemNameStyle}>{item.name}</h4>\n//                     <div style={priceContainerStyle}>\n//                       <span style={currentPriceStyle}>₹{item.price.toFixed(2)}</span>\n//                       {discountPercent > 0 && (\n//                         <span style={originalPriceStyle}>₹{(item.price * 1.2).toFixed(2)}</span>\n//                       )}\n//                     </div>\n//                   </div>\n//                 </div>\n\n//                 <div style={quantityControlsStyle}>\n//                   <div style={quantityRowStyle}>\n//                     <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtnStyle}>-</button>\n//                     <span style={qtyCountStyle}>{item.quantity}</span>\n//                     <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtnStyle}>+</button>\n//                   </div>\n//                   <button onClick={() => removeItem(item.id, item.size, item.name)} style={removeTextStyle}>\n//                     Remove\n//                   </button>\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n\n//         {/* Recommended Products */}\n//         {cartItems.length > 0 && (\n//           <div style={recommendedSectionStyle}>\n//             <h4 style={recommendedTitleStyle}>YOUR ORDER GOES GREAT WITH</h4>\n//             <div style={recommendedItemStyle}>\n//               <img src=\"https://via.placeholder.com/60x60\" alt=\"Recommended\" style={recommendedImageStyle} />\n//               <div>\n//                 <p style={recommendedNameStyle}>Premium Add-on Product</p>\n//                 <p style={recommendedPriceStyle}>₹99</p>\n//               </div>\n//               <button style={addToOrderBtnStyle}>Add to Order</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Footer */}\n//         {cartItems.length > 0 && (\n//           <div style={footerStyle}>\n//             <div style={subtotalRowStyle}>\n//               <span style={subtotalLabelStyle}>Subtotal: </span>\n//               <span style={subtotalPriceStyle}>₹{subtotal.toFixed(2)}</span>\n//             </div>\n\n//             <button style={checkoutBtnStyle} onClick={handleCheckout}>\n//               🔒 Checkout\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// // === Updated Styling ===\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '380px',\n//   height: '100%',\n//   backgroundColor: '#ffffff',\n//   boxShadow: '-4px 0 20px rgba(0,0,0,0.15)',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   overflowY: 'hidden',\n// };\n\n// const headerStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n//   padding: '20px 20px 10px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n// };\n\n// const titleStyle = {\n//   margin: 0,\n//   fontSize: '16px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   letterSpacing: '0.5px',\n// };\n\n// const closeBtn = {\n//   fontSize: '18px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: '#6b7280',\n//   padding: '5px',\n//   borderRadius: '4px',\n//   transition: 'background-color 0.2s',\n// };\n\n// const rewardsBannerStyle = {\n//   backgroundColor: '#f0fdf4',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n// };\n\n// const rewardsProgressStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   marginBottom: '8px',\n// };\n\n// const rewardsBadgeStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   backgroundColor: '#10b981',\n//   color: 'white',\n//   padding: '4px 8px',\n//   borderRadius: '12px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n// };\n\n// const badgeIconStyle = {\n//   marginRight: '4px',\n//   fontSize: '10px',\n// };\n\n// const unlockTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#059669',\n//   fontWeight: '500',\n//   display: 'flex',\n//   alignItems: 'center',\n// };\n\n// const subscriptionBannerStyle = {\n//   backgroundColor: '#fef3c7',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const subscriptionTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#92400e',\n//   flex: 1,\n// };\n\n// const highlightStyle = {\n//   color: '#d97706',\n//   fontWeight: '600',\n// };\n\n// const setUpNowBtnStyle = {\n//   backgroundColor: 'transparent',\n//   border: '1px solid #d97706',\n//   color: '#d97706',\n//   padding: '4px 8px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n//   cursor: 'pointer',\n//   whiteSpace: 'nowrap',\n// };\n\n// const itemsContainerStyle = {\n//   flex: 1,\n//   overflowY: 'auto',\n//   padding: '0 20px',\n// };\n\n// const emptyCartStyle = {\n//   textAlign: 'center',\n//   color: '#6b7280',\n//   fontSize: '14px',\n//   padding: '40px 20px',\n// };\n\n// const itemCardStyle = {\n//   borderBottom: '1px solid #f3f4f6',\n//   padding: '16px 0',\n// };\n\n// const itemHeaderStyle = {\n//   display: 'flex',\n//   gap: '12px',\n//   marginBottom: '12px',\n// };\n\n// const productImageStyle = {\n//   width: '60px',\n//   height: '60px',\n//   objectFit: 'cover',\n//   borderRadius: '8px',\n//   border: '1px solid #e5e7eb',\n// };\n\n// const itemInfoStyle = {\n//   flex: 1,\n// };\n\n// const itemNameStyle = {\n//   margin: '0 0 8px 0',\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   lineHeight: '1.3',\n// };\n\n// const priceContainerStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '8px',\n// };\n\n// const currentPriceStyle = {\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n// };\n\n// const originalPriceStyle = {\n//   fontSize: '12px',\n//   color: '#6b7280',\n//   textDecoration: 'line-through',\n// };\n\n// const quantityControlsStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const quantityRowStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '12px',\n// };\n\n// const qtyBtnStyle = {\n//   width: '28px',\n//   height: '28px',\n//   fontSize: '16px',\n//   background: '#f9fafb',\n//   border: '1px solid #d1d5db',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n//   fontWeight: '600',\n//   color: '#374151',\n// };\n\n// const qtyCountStyle = {\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   minWidth: '20px',\n//   textAlign: 'center',\n// };\n\n// const removeTextStyle = {\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   fontSize: '12px',\n//   color: '#ef4444',\n//   fontWeight: '500',\n//   textDecoration: 'underline',\n// };\n\n// const recommendedSectionStyle = {\n//   padding: '16px 20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#fafafa',\n// };\n\n// const recommendedTitleStyle = {\n//   fontSize: '12px',\n//   fontWeight: '600',\n//   color: '#6b7280',\n//   margin: '0 0 12px 0',\n//   letterSpacing: '0.5px',\n// };\n\n// const recommendedItemStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '12px',\n// };\n\n// const recommendedImageStyle = {\n//   width: '40px',\n//   height: '40px',\n//   borderRadius: '6px',\n//   objectFit: 'cover',\n// };\n\n// const recommendedNameStyle = {\n//   margin: '0 0 4px 0',\n//   fontSize: '12px',\n//   fontWeight: '500',\n//   color: '#1f2937',\n// };\n\n// const recommendedPriceStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#6b7280',\n// };\n\n// const addToOrderBtnStyle = {\n//   backgroundColor: 'white',\n//   border: '1px solid #d1d5db',\n//   color: '#374151',\n//   padding: '6px 12px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '500',\n//   cursor: 'pointer',\n//   marginLeft: 'auto',\n// };\n\n// const footerStyle = {\n//   padding: '20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#ffffff',\n// };\n\n// const subtotalRowStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n//   marginBottom: '16px',\n// };\n\n// const subtotalLabelStyle = {\n//   fontSize: '16px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n// };\n\n// const subtotalPriceStyle = {\n//   fontSize: '18px',\n//   fontWeight: '700',\n//   color: '#1f2937',\n// };\n\n// const checkoutBtnStyle = {\n//   backgroundColor: '#dc2626',\n//   color: '#ffffff',\n//   padding: '14px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '8px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   letterSpacing: '0.5px',\n//   transition: 'background-color 0.2s',\n// };\n\n// export default CartSidebar;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash, faTimes, faGift, faShippingFast, faPercent, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   const [showSubscription, setShowSubscription] = useState(false);\n\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n//   const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n\n//   // Calculate discounts based on quantity\n//   const getDiscountPercentage = () => {\n//     if (itemCount >= 10) return 60;\n//     if (itemCount >= 5) return 25;\n//     if (itemCount >= 3) return 15;\n//     return 0;\n//   };\n\n//   const discountPercent = getDiscountPercentage();\n//   const hasUnlockedPrizes = itemCount >= 3;\n\n//   const handleCheckout = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total: subtotal },\n//         { withCredentials: true }\n//       );\n\n//       alert('Order placed successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to place order');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         {/* Header */}\n//         <div style={headerStyle}>\n//           <h2 style={titleStyle}>MY CART ({itemCount})</h2>\n//           <button onClick={onClose} style={closeBtn}>\n//             <FontAwesomeIcon icon={faTimes} />\n//           </button>\n//         </div>\n\n//         {/* Rewards Banner */}\n//         {hasUnlockedPrizes && (\n//           <div style={rewardsBannerStyle}>\n//             <div style={rewardsProgressStyle}>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faShippingFast} style={badgeIconStyle} />\n//                 <span>Free Shipping</span>\n//               </div>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faPercent} style={badgeIconStyle} />\n//                 <span>{discountPercent}% off</span>\n//               </div>\n//               {itemCount >= 10 && (\n//                 <div style={rewardsBadgeStyle}>\n//                   <FontAwesomeIcon icon={faGift} style={badgeIconStyle} />\n//                   <span>+ Mystery Gift</span>\n//                 </div>\n//               )}\n//             </div>\n//             <p style={unlockTextStyle}>\n//               <FontAwesomeIcon icon={faTrophy} style={{ color: '#ff6b35', marginRight: '5px' }} />\n//               You've unlocked all prizes! 🎉\n//             </p>\n//           </div>\n//         )}\n\n//         {/* Subscription Banner */}\n//         <div style={subscriptionBannerStyle}>\n//           <p style={subscriptionTextStyle}>\n//             Subscribe to <span style={highlightStyle}>save 20%</span> now and on future deliveries.\n//           </p>\n//           <button style={setUpNowBtnStyle} onClick={() => setShowSubscription(!showSubscription)}>\n//             🔄 Set Up Now\n//           </button>\n//         </div>\n\n//         {/* Cart Items */}\n//         <div style={itemsContainerStyle}>\n//           {cartItems.length === 0 ? (\n//             <p style={emptyCartStyle}>Your cart is empty.</p>\n//           ) : (\n//             cartItems.map((item, index) => (\n//               <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemCardStyle}>\n//                 <div style={itemHeaderStyle}>\n//                   <img\n//                     src={item.image}\n//                     alt={item.name}\n//                     style={productImageStyle}\n//                   />\n//                   <div style={itemInfoStyle}>\n//                     <h4 style={itemNameStyle}>{item.name}</h4>\n//                     <div style={priceContainerStyle}>\n//                       <span style={currentPriceStyle}>₹{item.price.toFixed(2)}</span>\n//                       {discountPercent > 0 && (\n//                         <span style={originalPriceStyle}>₹{(item.price * 1.2).toFixed(2)}</span>\n//                       )}\n//                     </div>\n//                   </div>\n//                   <div style={quantityControlsRightStyle}>\n//                     <div style={quantityRowStyle}>\n//                       <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtnStyle}>-</button>\n//                       <span style={qtyCountStyle}>{item.quantity}</span>\n//                       <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtnStyle}>+</button>\n//                     </div>\n//                     <button onClick={() => removeItem(item.id, item.size, item.name)} style={removeTextStyle}>\n//                       Remove\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n\n//         {/* Recommended Products */}\n//         {cartItems.length > 0 && (\n//           <div style={recommendedSectionStyle}>\n//             <h4 style={recommendedTitleStyle}>YOUR ORDER GOES GREAT WITH</h4>\n//             <div style={recommendedItemStyle}>\n//               <img src=\"https://via.placeholder.com/60x60\" alt=\"Recommended\" style={recommendedImageStyle} />\n//               <div>\n//                 <p style={recommendedNameStyle}>Premium Add-on Product</p>\n//                 <p style={recommendedPriceStyle}>₹99</p>\n//               </div>\n//               <button style={addToOrderBtnStyle}>Add to Order</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Footer */}\n//         {cartItems.length > 0 && (\n//           <div style={footerStyle}>\n//             <div style={subtotalRowStyle}>\n//               <span style={subtotalLabelStyle}>Subtotal: </span>\n//               <span style={subtotalPriceStyle}>₹{subtotal.toFixed(2)}</span>\n//             </div>\n\n//             <button style={checkoutBtnStyle} onClick={handleCheckout}>\n//               🔒 Checkout\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// // === Updated Styling ===\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '380px',\n//   height: '100%',\n//   backgroundColor: '#ffffff',\n//   boxShadow: '-4px 0 20px rgba(0,0,0,0.15)',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   overflowY: 'hidden',\n// };\n\n// const headerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px 20px 10px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n//   position: 'relative',\n// };\n\n// const titleStyle = {\n//   margin: 0,\n//   fontSize: '16px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   letterSpacing: '0.5px',\n// };\n\n// const closeBtn = {\n//   position: 'absolute',\n//   right: '20px',\n//   top: '50%',\n//   transform: 'translateY(-50%)',\n//   fontSize: '18px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: '#6b7280',\n//   padding: '5px',\n//   borderRadius: '4px',\n//   transition: 'background-color 0.2s',\n// };\n\n// const rewardsBannerStyle = {\n//   backgroundColor: '#f0fdf4',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n// };\n\n// const rewardsProgressStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   marginBottom: '8px',\n// };\n\n// const rewardsBadgeStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   backgroundColor: '#10b981',\n//   color: 'white',\n//   padding: '4px 8px',\n//   borderRadius: '12px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n// };\n\n// const badgeIconStyle = {\n//   marginRight: '4px',\n//   fontSize: '10px',\n// };\n\n// const unlockTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#059669',\n//   fontWeight: '500',\n//   display: 'flex',\n//   alignItems: 'center',\n// };\n\n// const subscriptionBannerStyle = {\n//   backgroundColor: '#fef3c7',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const subscriptionTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#92400e',\n//   flex: 1,\n// };\n\n// const highlightStyle = {\n//   color: '#d97706',\n//   fontWeight: '600',\n// };\n\n// const setUpNowBtnStyle = {\n//   backgroundColor: 'transparent',\n//   border: '1px solid #d97706',\n//   color: '#d97706',\n//   padding: '4px 8px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n//   cursor: 'pointer',\n//   whiteSpace: 'nowrap',\n// };\n\n// const itemsContainerStyle = {\n//   flex: 1,\n//   overflowY: 'auto',\n//   padding: '0 20px',\n// };\n\n// const emptyCartStyle = {\n//   textAlign: 'center',\n//   color: '#6b7280',\n//   fontSize: '14px',\n//   padding: '40px 20px',\n// };\n\n// const itemCardStyle = {\n//   borderBottom: '1px solid #f3f4f6',\n//   padding: '16px 0',\n// };\n\n// const itemHeaderStyle = {\n//   display: 'flex',\n//   gap: '12px',\n//   marginBottom: '12px',\n// };\n\n// const productImageStyle = {\n//   width: '60px',\n//   height: '60px',\n//   objectFit: 'cover',\n//   borderRadius: '8px',\n//   border: '1px solid #e5e7eb',\n// };\n\n// const itemInfoStyle = {\n//   flex: 1,\n//   display: 'flex',\n//   flexDirection: 'column',\n//   justifyContent: 'space-between',\n// };\n\n// const itemNameStyle = {\n//   margin: '0 0 4px 0',\n//   fontSize: '15px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   lineHeight: '1.4',\n// };\n\n// const priceContainerStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '8px',\n//   marginTop: 'auto',\n// };\n\n// const currentPriceStyle = {\n//   fontSize: '15px',\n//   fontWeight: '700',\n//   color: '#1f2937',\n// };\n\n// const originalPriceStyle = {\n//   fontSize: '12px',\n//   color: '#6b7280',\n//   textDecoration: 'line-through',\n// };\n\n// const quantityControlsRightStyle = {\n//   display: 'flex',\n//   flexDirection: 'column',\n//   alignItems: 'flex-end',\n//   gap: '8px',\n// };\n\n// const quantityRowStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '8px',\n//   border: '1px solid #d1d5db',\n//   borderRadius: '4px',\n//   padding: '2px',\n//   backgroundColor: '#ffffff',\n// };\n\n// const qtyBtnStyle = {\n//   width: '30px',\n//   height: '30px',\n//   fontSize: '16px',\n//   background: '#ffffff',\n//   border: 'none',\n//   cursor: 'pointer',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n//   fontWeight: '600',\n//   color: '#374151',\n//   borderRadius: '2px',\n// };\n\n// const qtyCountStyle = {\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   minWidth: '30px',\n//   textAlign: 'center',\n//   padding: '0 8px',\n// };\n\n// const removeTextStyle = {\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   fontSize: '12px',\n//   color: '#ef4444',\n//   fontWeight: '500',\n//   textDecoration: 'underline',\n//   padding: '2px 0',\n// };\n\n// const recommendedSectionStyle = {\n//   padding: '16px 20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#fafafa',\n// };\n\n// const recommendedTitleStyle = {\n//   fontSize: '12px',\n//   fontWeight: '600',\n//   color: '#6b7280',\n//   margin: '0 0 12px 0',\n//   letterSpacing: '0.5px',\n// };\n\n// const recommendedItemStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '12px',\n// };\n\n// const recommendedImageStyle = {\n//   width: '40px',\n//   height: '40px',\n//   borderRadius: '6px',\n//   objectFit: 'cover',\n// };\n\n// const recommendedNameStyle = {\n//   margin: '0 0 4px 0',\n//   fontSize: '12px',\n//   fontWeight: '500',\n//   color: '#1f2937',\n// };\n\n// const recommendedPriceStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#6b7280',\n// };\n\n// const addToOrderBtnStyle = {\n//   backgroundColor: 'white',\n//   border: '1px solid #d1d5db',\n//   color: '#374151',\n//   padding: '6px 12px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '500',\n//   cursor: 'pointer',\n//   marginLeft: 'auto',\n// };\n\n// const footerStyle = {\n//   padding: '20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#ffffff',\n// };\n\n// const subtotalRowStyle = {\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n//   alignItems: 'center',\n//   marginBottom: '16px',\n//   gap: '8px',\n// };\n\n// const subtotalLabelStyle = {\n//   fontSize: '18px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n// };\n\n// const subtotalPriceStyle = {\n//   fontSize: '18px',\n//   fontWeight: '700',\n//   color: '#1f2937',\n// };\n\n// const checkoutBtnStyle = {\n//   backgroundColor: '#dc2626',\n//   color: '#ffffff',\n//   padding: '14px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '8px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   letterSpacing: '0.5px',\n//   transition: 'background-color 0.2s',\n// };\n\n// export default CartSidebar;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/CartSidebar.jsx"],"sourcesContent":["// import React from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n//   const handleSaveCart = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total },\n//         { withCredentials: true }\n//       );\n\n//       alert('Cart saved successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to save cart');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n//           <h3>Shopping Cart</h3>\n//           <button onClick={onClose} style={closeBtn}>×</button>\n//         </div>\n\n//         {cartItems.length === 0 ? (\n//           <p>Your cart is empty.</p>\n//         ) : (\n//           cartItems.map((item, index) => (\n//             <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemStyle}>\n//               <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n//                 <img\n//                   src={item.image}\n//                   alt={item.name}\n//                   style={{ width: '50px', height: '50px', objectFit: 'cover', borderRadius: '4px' }}\n//                 />\n//                 <div>\n//                   <p style={{ fontWeight: 'bold', margin: 0 }}>{item.name}</p>\n//                   <p style={{ margin: 0 }}>Size: <strong>{item.size}</strong></p>\n//                   <p style={{ margin: 0 }}>Style: <strong>{item.style}</strong></p>\n//                   <p style={{ margin: 0 }}>₹{item.price.toFixed(2)}</p>\n//                 </div>\n//               </div>\n\n//               <div style={{ display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtn}>-</button>\n//                 <span style={{ margin: '0 10px' }}>{item.quantity}</span>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtn}>+</button>\n\n//                 <button onClick={() => removeItem(item.id, item.size, item.name)} style={deleteBtn}>\n//                   <FontAwesomeIcon icon={faTrash} style={{ color: 'red' }} />\n//                 </button>\n//               </div>\n//             </div>\n//           ))\n//         )}\n\n//         <h4>Total: ₹{total.toFixed(2)}</h4>\n\n//         <button style={saveBtn} onClick={handleSaveCart}>\n//           Add to Cart\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // ✅ Dark background overlay behind sidebar\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.4)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '320px',\n//   height: '100%',\n//   backgroundColor: '#fff',\n//   boxShadow: '-2px 0 5px rgba(0,0,0,0.2)',\n//   padding: '20px',\n//   overflowY: 'auto',\n// };\n\n// const closeBtn = {\n//   fontSize: '32px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: 'red',\n// };\n\n// const itemStyle = {\n//   borderBottom: '1px solid #ddd',\n//   paddingBottom: '10px',\n//   marginBottom: '15px',\n// };\n\n// const qtyBtn = {\n//   width: '30px',\n//   height: '30px',\n//   fontSize: '16px',\n//   background: '#eee',\n//   border: '1px solid #ccc',\n//   cursor: 'pointer',\n// };\n\n// const deleteBtn = {\n//   marginLeft: 'auto',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n// };\n\n// const saveBtn = {\n//   backgroundColor: '#2563eb',\n//   color: '#fff',\n//   padding: '10px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n// };\n\n// export default CartSidebar;\n\n\n\n\n\n\n\n\n\n\n\n\n// second updated with chatgpt\n\n\n// import React from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n//   const handleCheckout = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total },\n//         { withCredentials: true }\n//       );\n\n//       alert('Cart saved successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to save cart');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n//           <h3 style={{ margin: 0 }}>My Cart</h3>\n//           <button onClick={onClose} style={closeBtn}>×</button>\n//         </div>\n\n//         {cartItems.length === 0 ? (\n//           <p>Your cart is empty.</p>\n//         ) : (\n//           cartItems.map((item, index) => (\n//             <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemStyle}>\n//               <div style={productRow}>\n//                 <img\n//                   src={item.image}\n//                   alt={item.name}\n//                   style={productImage}\n//                 />\n//                 <div>\n//                   <p style={nameText}>{item.name}</p>\n//                   <p style={text}><strong>Size:</strong> {item.size}</p>\n//                   <p style={text}><strong>Style:</strong> {item.style}</p>\n//                   <p style={text}><strong>₹</strong>{item.price.toFixed(2)}</p>\n//                 </div>\n//               </div>\n\n//               <div style={quantityRow}>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtn}>-</button>\n//                 <span style={qtyCount}>{item.quantity}</span>\n//                 <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtn}>+</button>\n\n//                 <button onClick={() => removeItem(item.id, item.size, item.name)} style={deleteBtn}>\n//                   <FontAwesomeIcon icon={faTrash} style={{ color: 'red' }} />\n//                 </button>\n//               </div>\n//             </div>\n//           ))\n//         )}\n\n//         <div style={{ marginTop: '20px' }}>\n//           <h4 style={totalText}>Total: ₹{total.toFixed(2)}</h4>\n//           <button style={checkoutBtn} onClick={handleCheckout}>\n//             Checkout\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // === Styling ===\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.4)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '350px',\n//   height: '100%',\n//   backgroundColor: '#fff',\n//   boxShadow: '-2px 0 5px rgba(0,0,0,0.2)',\n//   padding: '20px',\n//   overflowY: 'auto',\n// };\n\n// const closeBtn = {\n//   fontSize: '28px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: 'red',\n// };\n\n// const itemStyle = {\n//   borderBottom: '1px solid #e0e0e0',\n//   paddingBottom: '12px',\n//   marginBottom: '18px',\n// };\n\n// const productRow = {\n//   display: 'flex',\n//   gap: '12px',\n//   alignItems: 'center',\n// };\n\n// const productImage = {\n//   width: '70px',\n//   height: '70px',\n//   objectFit: 'cover',\n//   borderRadius: '8px',\n// };\n\n// const nameText = {\n//   fontWeight: 'bold',\n//   marginBottom: '6px',\n// };\n\n// const text = {\n//   margin: 0,\n//   fontSize: '14px',\n//   color: '#333',\n// };\n\n// const quantityRow = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   marginTop: '10px',\n//   justifyContent: 'space-between',\n// };\n\n// const qtyBtn = {\n//   width: '32px',\n//   height: '32px',\n//   fontSize: '16px',\n//   background: '#f3f3f3',\n//   border: '1px solid #ccc',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n// };\n\n// const qtyCount = {\n//   margin: '0 10px',\n//   fontSize: '16px',\n// };\n\n// const deleteBtn = {\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   marginLeft: 'auto',\n// };\n\n// const totalText = {\n//   textAlign: 'right',\n//   marginBottom: '10px',\n//   fontSize: '18px',\n//   fontWeight: 'bold',\n// };\n\n// const checkoutBtn = {\n//   backgroundColor: '#1f2937',\n//   color: '#fff',\n//   padding: '12px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '6px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n//   fontSize: '16px',\n// };\n\n// export default CartSidebar;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash, faTimes, faGift, faShippingFast, faPercent, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   const [showSubscription, setShowSubscription] = useState(false);\n  \n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n//   const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  \n//   // Calculate discounts based on quantity\n//   const getDiscountPercentage = () => {\n//     if (itemCount >= 10) return 60;\n//     if (itemCount >= 5) return 25;\n//     if (itemCount >= 3) return 15;\n//     return 0;\n//   };\n\n//   const discountPercent = getDiscountPercentage();\n//   const hasUnlockedPrizes = itemCount >= 3;\n\n//   const handleCheckout = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total: subtotal },\n//         { withCredentials: true }\n//       );\n\n//       alert('Order placed successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to place order');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         {/* Header */}\n//         <div style={headerStyle}>\n//           <h2 style={titleStyle}>MY CART ({itemCount})</h2>\n//           <button onClick={onClose} style={closeBtn}>\n//             <FontAwesomeIcon icon={faTimes} />\n//           </button>\n//         </div>\n\n//         {/* Rewards Banner */}\n//         {hasUnlockedPrizes && (\n//           <div style={rewardsBannerStyle}>\n//             <div style={rewardsProgressStyle}>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faShippingFast} style={badgeIconStyle} />\n//                 <span>Free Shipping</span>\n//               </div>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faPercent} style={badgeIconStyle} />\n//                 <span>{discountPercent}% off</span>\n//               </div>\n//               {itemCount >= 10 && (\n//                 <div style={rewardsBadgeStyle}>\n//                   <FontAwesomeIcon icon={faGift} style={badgeIconStyle} />\n//                   <span>+ Mystery Gift</span>\n//                 </div>\n//               )}\n//             </div>\n//             <p style={unlockTextStyle}>\n//               <FontAwesomeIcon icon={faTrophy} style={{ color: '#ff6b35', marginRight: '5px' }} />\n//               You've unlocked all prizes! 🎉\n//             </p>\n//           </div>\n//         )}\n\n//         {/* Subscription Banner */}\n//         <div style={subscriptionBannerStyle}>\n//           <p style={subscriptionTextStyle}>\n//             Subscribe to <span style={highlightStyle}>save 20%</span> now and on future deliveries.\n//           </p>\n//           <button style={setUpNowBtnStyle} onClick={() => setShowSubscription(!showSubscription)}>\n//             🔄 Set Up Now\n//           </button>\n//         </div>\n\n//         {/* Cart Items */}\n//         <div style={itemsContainerStyle}>\n//           {cartItems.length === 0 ? (\n//             <p style={emptyCartStyle}>Your cart is empty.</p>\n//           ) : (\n//             cartItems.map((item, index) => (\n//               <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemCardStyle}>\n//                 <div style={itemHeaderStyle}>\n//                   <img\n//                     src={item.image}\n//                     alt={item.name}\n//                     style={productImageStyle}\n//                   />\n//                   <div style={itemInfoStyle}>\n//                     <h4 style={itemNameStyle}>{item.name}</h4>\n//                     <div style={priceContainerStyle}>\n//                       <span style={currentPriceStyle}>₹{item.price.toFixed(2)}</span>\n//                       {discountPercent > 0 && (\n//                         <span style={originalPriceStyle}>₹{(item.price * 1.2).toFixed(2)}</span>\n//                       )}\n//                     </div>\n//                   </div>\n//                 </div>\n\n//                 <div style={quantityControlsStyle}>\n//                   <div style={quantityRowStyle}>\n//                     <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtnStyle}>-</button>\n//                     <span style={qtyCountStyle}>{item.quantity}</span>\n//                     <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtnStyle}>+</button>\n//                   </div>\n//                   <button onClick={() => removeItem(item.id, item.size, item.name)} style={removeTextStyle}>\n//                     Remove\n//                   </button>\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n\n//         {/* Recommended Products */}\n//         {cartItems.length > 0 && (\n//           <div style={recommendedSectionStyle}>\n//             <h4 style={recommendedTitleStyle}>YOUR ORDER GOES GREAT WITH</h4>\n//             <div style={recommendedItemStyle}>\n//               <img src=\"https://via.placeholder.com/60x60\" alt=\"Recommended\" style={recommendedImageStyle} />\n//               <div>\n//                 <p style={recommendedNameStyle}>Premium Add-on Product</p>\n//                 <p style={recommendedPriceStyle}>₹99</p>\n//               </div>\n//               <button style={addToOrderBtnStyle}>Add to Order</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Footer */}\n//         {cartItems.length > 0 && (\n//           <div style={footerStyle}>\n//             <div style={subtotalRowStyle}>\n//               <span style={subtotalLabelStyle}>Subtotal: </span>\n//               <span style={subtotalPriceStyle}>₹{subtotal.toFixed(2)}</span>\n//             </div>\n            \n//             <button style={checkoutBtnStyle} onClick={handleCheckout}>\n//               🔒 Checkout\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// // === Updated Styling ===\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '380px',\n//   height: '100%',\n//   backgroundColor: '#ffffff',\n//   boxShadow: '-4px 0 20px rgba(0,0,0,0.15)',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   overflowY: 'hidden',\n// };\n\n// const headerStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n//   padding: '20px 20px 10px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n// };\n\n// const titleStyle = {\n//   margin: 0,\n//   fontSize: '16px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   letterSpacing: '0.5px',\n// };\n\n// const closeBtn = {\n//   fontSize: '18px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: '#6b7280',\n//   padding: '5px',\n//   borderRadius: '4px',\n//   transition: 'background-color 0.2s',\n// };\n\n// const rewardsBannerStyle = {\n//   backgroundColor: '#f0fdf4',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n// };\n\n// const rewardsProgressStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   marginBottom: '8px',\n// };\n\n// const rewardsBadgeStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   backgroundColor: '#10b981',\n//   color: 'white',\n//   padding: '4px 8px',\n//   borderRadius: '12px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n// };\n\n// const badgeIconStyle = {\n//   marginRight: '4px',\n//   fontSize: '10px',\n// };\n\n// const unlockTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#059669',\n//   fontWeight: '500',\n//   display: 'flex',\n//   alignItems: 'center',\n// };\n\n// const subscriptionBannerStyle = {\n//   backgroundColor: '#fef3c7',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const subscriptionTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#92400e',\n//   flex: 1,\n// };\n\n// const highlightStyle = {\n//   color: '#d97706',\n//   fontWeight: '600',\n// };\n\n// const setUpNowBtnStyle = {\n//   backgroundColor: 'transparent',\n//   border: '1px solid #d97706',\n//   color: '#d97706',\n//   padding: '4px 8px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n//   cursor: 'pointer',\n//   whiteSpace: 'nowrap',\n// };\n\n// const itemsContainerStyle = {\n//   flex: 1,\n//   overflowY: 'auto',\n//   padding: '0 20px',\n// };\n\n// const emptyCartStyle = {\n//   textAlign: 'center',\n//   color: '#6b7280',\n//   fontSize: '14px',\n//   padding: '40px 20px',\n// };\n\n// const itemCardStyle = {\n//   borderBottom: '1px solid #f3f4f6',\n//   padding: '16px 0',\n// };\n\n// const itemHeaderStyle = {\n//   display: 'flex',\n//   gap: '12px',\n//   marginBottom: '12px',\n// };\n\n// const productImageStyle = {\n//   width: '60px',\n//   height: '60px',\n//   objectFit: 'cover',\n//   borderRadius: '8px',\n//   border: '1px solid #e5e7eb',\n// };\n\n// const itemInfoStyle = {\n//   flex: 1,\n// };\n\n// const itemNameStyle = {\n//   margin: '0 0 8px 0',\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   lineHeight: '1.3',\n// };\n\n// const priceContainerStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '8px',\n// };\n\n// const currentPriceStyle = {\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n// };\n\n// const originalPriceStyle = {\n//   fontSize: '12px',\n//   color: '#6b7280',\n//   textDecoration: 'line-through',\n// };\n\n// const quantityControlsStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const quantityRowStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '12px',\n// };\n\n// const qtyBtnStyle = {\n//   width: '28px',\n//   height: '28px',\n//   fontSize: '16px',\n//   background: '#f9fafb',\n//   border: '1px solid #d1d5db',\n//   borderRadius: '4px',\n//   cursor: 'pointer',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n//   fontWeight: '600',\n//   color: '#374151',\n// };\n\n// const qtyCountStyle = {\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   minWidth: '20px',\n//   textAlign: 'center',\n// };\n\n// const removeTextStyle = {\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   fontSize: '12px',\n//   color: '#ef4444',\n//   fontWeight: '500',\n//   textDecoration: 'underline',\n// };\n\n// const recommendedSectionStyle = {\n//   padding: '16px 20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#fafafa',\n// };\n\n// const recommendedTitleStyle = {\n//   fontSize: '12px',\n//   fontWeight: '600',\n//   color: '#6b7280',\n//   margin: '0 0 12px 0',\n//   letterSpacing: '0.5px',\n// };\n\n// const recommendedItemStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '12px',\n// };\n\n// const recommendedImageStyle = {\n//   width: '40px',\n//   height: '40px',\n//   borderRadius: '6px',\n//   objectFit: 'cover',\n// };\n\n// const recommendedNameStyle = {\n//   margin: '0 0 4px 0',\n//   fontSize: '12px',\n//   fontWeight: '500',\n//   color: '#1f2937',\n// };\n\n// const recommendedPriceStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#6b7280',\n// };\n\n// const addToOrderBtnStyle = {\n//   backgroundColor: 'white',\n//   border: '1px solid #d1d5db',\n//   color: '#374151',\n//   padding: '6px 12px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '500',\n//   cursor: 'pointer',\n//   marginLeft: 'auto',\n// };\n\n// const footerStyle = {\n//   padding: '20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#ffffff',\n// };\n\n// const subtotalRowStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n//   marginBottom: '16px',\n// };\n\n// const subtotalLabelStyle = {\n//   fontSize: '16px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n// };\n\n// const subtotalPriceStyle = {\n//   fontSize: '18px',\n//   fontWeight: '700',\n//   color: '#1f2937',\n// };\n\n// const checkoutBtnStyle = {\n//   backgroundColor: '#dc2626',\n//   color: '#ffffff',\n//   padding: '14px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '8px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   letterSpacing: '0.5px',\n//   transition: 'background-color 0.2s',\n// };\n\n// export default CartSidebar;\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faTrash, faTimes, faGift, faShippingFast, faPercent, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\n// const CartSidebar = ({ open, onClose, cartItems, setCartItems }) => {\n//   const [showSubscription, setShowSubscription] = useState(false);\n  \n//   if (!open) return null;\n\n//   const updateQuantity = (id, size, name, delta) => {\n//     const updated = cartItems.map(item =>\n//       item.id === id && item.size === size && item.name === name\n//         ? { ...item, quantity: Math.max(1, item.quantity + delta) }\n//         : item\n//     );\n//     setCartItems(updated);\n//   };\n\n//   const removeItem = (id, size, name) => {\n//     setCartItems(cartItems.filter(item => !(item.id === id && item.size === size && item.name === name)));\n//   };\n\n//   const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n//   const itemCount = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  \n//   // Calculate discounts based on quantity\n//   const getDiscountPercentage = () => {\n//     if (itemCount >= 10) return 60;\n//     if (itemCount >= 5) return 25;\n//     if (itemCount >= 3) return 15;\n//     return 0;\n//   };\n\n//   const discountPercent = getDiscountPercentage();\n//   const hasUnlockedPrizes = itemCount >= 3;\n\n//   const handleCheckout = async () => {\n//     const stored = localStorage.getItem('user');\n//     if (!stored) {\n//       alert(\"User not logged in\");\n//       return;\n//     }\n\n//     try {\n//       await axios.post(\n//         'http://localhost:3001/api/cart/save',\n//         { cartItems, total: subtotal },\n//         { withCredentials: true }\n//       );\n\n//       alert('Order placed successfully!');\n//       setCartItems([]);\n//       onClose();\n//     } catch (err) {\n//       console.error('❌ Failed to save cart:', err);\n//       alert('Failed to place order');\n//     }\n//   };\n\n//   return (\n//     <div style={overlayStyle}>\n//       <div style={sidebarStyle}>\n//         {/* Header */}\n//         <div style={headerStyle}>\n//           <h2 style={titleStyle}>MY CART ({itemCount})</h2>\n//           <button onClick={onClose} style={closeBtn}>\n//             <FontAwesomeIcon icon={faTimes} />\n//           </button>\n//         </div>\n\n//         {/* Rewards Banner */}\n//         {hasUnlockedPrizes && (\n//           <div style={rewardsBannerStyle}>\n//             <div style={rewardsProgressStyle}>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faShippingFast} style={badgeIconStyle} />\n//                 <span>Free Shipping</span>\n//               </div>\n//               <div style={rewardsBadgeStyle}>\n//                 <FontAwesomeIcon icon={faPercent} style={badgeIconStyle} />\n//                 <span>{discountPercent}% off</span>\n//               </div>\n//               {itemCount >= 10 && (\n//                 <div style={rewardsBadgeStyle}>\n//                   <FontAwesomeIcon icon={faGift} style={badgeIconStyle} />\n//                   <span>+ Mystery Gift</span>\n//                 </div>\n//               )}\n//             </div>\n//             <p style={unlockTextStyle}>\n//               <FontAwesomeIcon icon={faTrophy} style={{ color: '#ff6b35', marginRight: '5px' }} />\n//               You've unlocked all prizes! 🎉\n//             </p>\n//           </div>\n//         )}\n\n//         {/* Subscription Banner */}\n//         <div style={subscriptionBannerStyle}>\n//           <p style={subscriptionTextStyle}>\n//             Subscribe to <span style={highlightStyle}>save 20%</span> now and on future deliveries.\n//           </p>\n//           <button style={setUpNowBtnStyle} onClick={() => setShowSubscription(!showSubscription)}>\n//             🔄 Set Up Now\n//           </button>\n//         </div>\n\n//         {/* Cart Items */}\n//         <div style={itemsContainerStyle}>\n//           {cartItems.length === 0 ? (\n//             <p style={emptyCartStyle}>Your cart is empty.</p>\n//           ) : (\n//             cartItems.map((item, index) => (\n//               <div key={`${item.id}-${item.size}-${item.name}-${index}`} style={itemCardStyle}>\n//                 <div style={itemHeaderStyle}>\n//                   <img\n//                     src={item.image}\n//                     alt={item.name}\n//                     style={productImageStyle}\n//                   />\n//                   <div style={itemInfoStyle}>\n//                     <h4 style={itemNameStyle}>{item.name}</h4>\n//                     <div style={priceContainerStyle}>\n//                       <span style={currentPriceStyle}>₹{item.price.toFixed(2)}</span>\n//                       {discountPercent > 0 && (\n//                         <span style={originalPriceStyle}>₹{(item.price * 1.2).toFixed(2)}</span>\n//                       )}\n//                     </div>\n//                   </div>\n//                   <div style={quantityControlsRightStyle}>\n//                     <div style={quantityRowStyle}>\n//                       <button onClick={() => updateQuantity(item.id, item.size, item.name, -1)} style={qtyBtnStyle}>-</button>\n//                       <span style={qtyCountStyle}>{item.quantity}</span>\n//                       <button onClick={() => updateQuantity(item.id, item.size, item.name, 1)} style={qtyBtnStyle}>+</button>\n//                     </div>\n//                     <button onClick={() => removeItem(item.id, item.size, item.name)} style={removeTextStyle}>\n//                       Remove\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n\n//         {/* Recommended Products */}\n//         {cartItems.length > 0 && (\n//           <div style={recommendedSectionStyle}>\n//             <h4 style={recommendedTitleStyle}>YOUR ORDER GOES GREAT WITH</h4>\n//             <div style={recommendedItemStyle}>\n//               <img src=\"https://via.placeholder.com/60x60\" alt=\"Recommended\" style={recommendedImageStyle} />\n//               <div>\n//                 <p style={recommendedNameStyle}>Premium Add-on Product</p>\n//                 <p style={recommendedPriceStyle}>₹99</p>\n//               </div>\n//               <button style={addToOrderBtnStyle}>Add to Order</button>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Footer */}\n//         {cartItems.length > 0 && (\n//           <div style={footerStyle}>\n//             <div style={subtotalRowStyle}>\n//               <span style={subtotalLabelStyle}>Subtotal: </span>\n//               <span style={subtotalPriceStyle}>₹{subtotal.toFixed(2)}</span>\n//             </div>\n            \n//             <button style={checkoutBtnStyle} onClick={handleCheckout}>\n//               🔒 Checkout\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// // === Updated Styling ===\n// const overlayStyle = {\n//   position: 'fixed',\n//   top: 0,\n//   left: 0,\n//   width: '100vw',\n//   height: '100vh',\n//   backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//   zIndex: 9999,\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n// };\n\n// const sidebarStyle = {\n//   width: '380px',\n//   height: '100%',\n//   backgroundColor: '#ffffff',\n//   boxShadow: '-4px 0 20px rgba(0,0,0,0.15)',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   overflowY: 'hidden',\n// };\n\n// const headerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px 20px 10px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n//   position: 'relative',\n// };\n\n// const titleStyle = {\n//   margin: 0,\n//   fontSize: '16px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   letterSpacing: '0.5px',\n// };\n\n// const closeBtn = {\n//   position: 'absolute',\n//   right: '20px',\n//   top: '50%',\n//   transform: 'translateY(-50%)',\n//   fontSize: '18px',\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   color: '#6b7280',\n//   padding: '5px',\n//   borderRadius: '4px',\n//   transition: 'background-color 0.2s',\n// };\n\n// const rewardsBannerStyle = {\n//   backgroundColor: '#f0fdf4',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n// };\n\n// const rewardsProgressStyle = {\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   marginBottom: '8px',\n// };\n\n// const rewardsBadgeStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   backgroundColor: '#10b981',\n//   color: 'white',\n//   padding: '4px 8px',\n//   borderRadius: '12px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n// };\n\n// const badgeIconStyle = {\n//   marginRight: '4px',\n//   fontSize: '10px',\n// };\n\n// const unlockTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#059669',\n//   fontWeight: '500',\n//   display: 'flex',\n//   alignItems: 'center',\n// };\n\n// const subscriptionBannerStyle = {\n//   backgroundColor: '#fef3c7',\n//   padding: '12px 20px',\n//   borderBottom: '1px solid #e5e7eb',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const subscriptionTextStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#92400e',\n//   flex: 1,\n// };\n\n// const highlightStyle = {\n//   color: '#d97706',\n//   fontWeight: '600',\n// };\n\n// const setUpNowBtnStyle = {\n//   backgroundColor: 'transparent',\n//   border: '1px solid #d97706',\n//   color: '#d97706',\n//   padding: '4px 8px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '600',\n//   cursor: 'pointer',\n//   whiteSpace: 'nowrap',\n// };\n\n// const itemsContainerStyle = {\n//   flex: 1,\n//   overflowY: 'auto',\n//   padding: '0 20px',\n// };\n\n// const emptyCartStyle = {\n//   textAlign: 'center',\n//   color: '#6b7280',\n//   fontSize: '14px',\n//   padding: '40px 20px',\n// };\n\n// const itemCardStyle = {\n//   borderBottom: '1px solid #f3f4f6',\n//   padding: '16px 0',\n// };\n\n// const itemHeaderStyle = {\n//   display: 'flex',\n//   gap: '12px',\n//   marginBottom: '12px',\n// };\n\n// const productImageStyle = {\n//   width: '60px',\n//   height: '60px',\n//   objectFit: 'cover',\n//   borderRadius: '8px',\n//   border: '1px solid #e5e7eb',\n// };\n\n// const itemInfoStyle = {\n//   flex: 1,\n//   display: 'flex',\n//   flexDirection: 'column',\n//   justifyContent: 'space-between',\n// };\n\n// const itemNameStyle = {\n//   margin: '0 0 4px 0',\n//   fontSize: '15px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   lineHeight: '1.4',\n// };\n\n// const priceContainerStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '8px',\n//   marginTop: 'auto',\n// };\n\n// const currentPriceStyle = {\n//   fontSize: '15px',\n//   fontWeight: '700',\n//   color: '#1f2937',\n// };\n\n// const originalPriceStyle = {\n//   fontSize: '12px',\n//   color: '#6b7280',\n//   textDecoration: 'line-through',\n// };\n\n// const quantityControlsRightStyle = {\n//   display: 'flex',\n//   flexDirection: 'column',\n//   alignItems: 'flex-end',\n//   gap: '8px',\n// };\n\n// const quantityRowStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '8px',\n//   border: '1px solid #d1d5db',\n//   borderRadius: '4px',\n//   padding: '2px',\n//   backgroundColor: '#ffffff',\n// };\n\n// const qtyBtnStyle = {\n//   width: '30px',\n//   height: '30px',\n//   fontSize: '16px',\n//   background: '#ffffff',\n//   border: 'none',\n//   cursor: 'pointer',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n//   fontWeight: '600',\n//   color: '#374151',\n//   borderRadius: '2px',\n// };\n\n// const qtyCountStyle = {\n//   fontSize: '14px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n//   minWidth: '30px',\n//   textAlign: 'center',\n//   padding: '0 8px',\n// };\n\n// const removeTextStyle = {\n//   background: 'none',\n//   border: 'none',\n//   cursor: 'pointer',\n//   fontSize: '12px',\n//   color: '#ef4444',\n//   fontWeight: '500',\n//   textDecoration: 'underline',\n//   padding: '2px 0',\n// };\n\n// const recommendedSectionStyle = {\n//   padding: '16px 20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#fafafa',\n// };\n\n// const recommendedTitleStyle = {\n//   fontSize: '12px',\n//   fontWeight: '600',\n//   color: '#6b7280',\n//   margin: '0 0 12px 0',\n//   letterSpacing: '0.5px',\n// };\n\n// const recommendedItemStyle = {\n//   display: 'flex',\n//   alignItems: 'center',\n//   gap: '12px',\n// };\n\n// const recommendedImageStyle = {\n//   width: '40px',\n//   height: '40px',\n//   borderRadius: '6px',\n//   objectFit: 'cover',\n// };\n\n// const recommendedNameStyle = {\n//   margin: '0 0 4px 0',\n//   fontSize: '12px',\n//   fontWeight: '500',\n//   color: '#1f2937',\n// };\n\n// const recommendedPriceStyle = {\n//   margin: 0,\n//   fontSize: '12px',\n//   color: '#6b7280',\n// };\n\n// const addToOrderBtnStyle = {\n//   backgroundColor: 'white',\n//   border: '1px solid #d1d5db',\n//   color: '#374151',\n//   padding: '6px 12px',\n//   borderRadius: '4px',\n//   fontSize: '11px',\n//   fontWeight: '500',\n//   cursor: 'pointer',\n//   marginLeft: 'auto',\n// };\n\n// const footerStyle = {\n//   padding: '20px',\n//   borderTop: '1px solid #e5e7eb',\n//   backgroundColor: '#ffffff',\n// };\n\n// const subtotalRowStyle = {\n//   display: 'flex',\n//   justifyContent: 'flex-end',\n//   alignItems: 'center',\n//   marginBottom: '16px',\n//   gap: '8px',\n// };\n\n// const subtotalLabelStyle = {\n//   fontSize: '18px',\n//   fontWeight: '600',\n//   color: '#1f2937',\n// };\n\n// const subtotalPriceStyle = {\n//   fontSize: '18px',\n//   fontWeight: '700',\n//   color: '#1f2937',\n// };\n\n// const checkoutBtnStyle = {\n//   backgroundColor: '#dc2626',\n//   color: '#ffffff',\n//   padding: '14px',\n//   width: '100%',\n//   border: 'none',\n//   borderRadius: '8px',\n//   cursor: 'pointer',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   letterSpacing: '0.5px',\n//   transition: 'background-color 0.2s',\n// };\n\n// export default CartSidebar;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAaA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAoignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}