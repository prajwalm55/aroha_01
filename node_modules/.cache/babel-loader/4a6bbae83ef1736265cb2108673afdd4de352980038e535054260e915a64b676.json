{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Login.js\",\n  _s = $RefreshSig$();\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />\n//             {' '}User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />\n//             {' '}Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message:\n//                 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         {/* Phone Number Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Phone Number\"\n//           style={inputStyle}\n//           {...register('phone', {\n//             required: 'Phone number is required',\n//             pattern: {\n//               value: /^[6-9]\\d{9}$/,\n//               message: 'Enter a valid 10-digit phone number starting with 6-9',\n//             },\n//           })}\n//         />\n//         {errors.phone && <p style={errorText}>{errors.phone.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563', // gray-700\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb', // blue-600\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981', // green-500\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message: 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563',\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb',\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981',\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [role, setRole] = useState('user');\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = async data => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/auth/login', {\n        ...data,\n        role // send to backend, if needed\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        const userData = response.data;\n        localStorage.setItem('user', JSON.stringify(userData));\n\n        // âœ… Navigate based on backend role\n        if (userData.role === 'admin') {\n          alert('Admin login successful');\n          navigate('/admin');\n        } else if (userData.role === 'user') {\n          alert('User login successful');\n          navigate('/');\n        } else {\n          alert('Unknown role');\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register('email', {\n            required: 'Email is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('password', {\n            required: 'Password is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"user\",\n          checked: role === 'user',\n          onChange: () => setRole('user')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), ' ', \"User\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"admin\",\n          checked: role === 'admin',\n          onChange: () => setRole('admin')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), ' ', \"Admin\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 555,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Sa9Qef3AXL8jtHBzt080KHvVxGA=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","useState","axios","useNavigate","Link","jsxDEV","_jsxDEV","Login","_s","role","setRole","navigate","register","handleSubmit","formState","errors","onSubmit","data","response","post","withCredentials","status","userData","localStorage","setItem","JSON","stringify","alert","err","_err$response","_err$response$data","message","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","required","email","password","value","checked","onChange","to","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Login.js"],"sourcesContent":["// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />\n//             {' '}User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />\n//             {' '}Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message:\n//                 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         {/* Phone Number Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Phone Number\"\n//           style={inputStyle}\n//           {...register('phone', {\n//             required: 'Phone number is required',\n//             pattern: {\n//               value: /^[6-9]\\d{9}$/,\n//               message: 'Enter a valid 10-digit phone number starting with 6-9',\n//             },\n//           })}\n//         />\n//         {errors.phone && <p style={errorText}>{errors.phone.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563', // gray-700\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb', // blue-600\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981', // green-500\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n\n\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message: 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563',\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb',\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981',\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n\n\n\n\n\n\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst Login = () => {\n  const [role, setRole] = useState('user');\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    try {\n      const response = await axios.post(\n        'http://localhost:3001/api/auth/login',\n        {\n          ...data,\n          role, // send to backend, if needed\n        },\n        {\n          withCredentials: true,\n        }\n      );\n\n      if (response.status === 200) {\n        const userData = response.data;\n        localStorage.setItem('user', JSON.stringify(userData));\n\n        // âœ… Navigate based on backend role\n        if (userData.role === 'admin') {\n          alert('Admin login successful');\n          navigate('/admin');\n        } else if (userData.role === 'user') {\n          alert('User login successful');\n          navigate('/');\n        } else {\n          alert('Unknown role');\n        }\n      }\n    } catch (err) {\n      alert(err?.response?.data?.message || 'Login failed');\n    }\n  };\n\n  return (\n    <div className=\"login-container\" style={{ padding: '2rem' }}>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            {...register('email', { required: 'Email is required' })}\n          />\n          {errors.email && <p>{errors.email.message}</p>}\n        </div>\n\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            {...register('password', { required: 'Password is required' })}\n          />\n          {errors.password && <p>{errors.password.message}</p>}\n        </div>\n\n        <div>\n          <label>Select Role:</label>\n          <input\n            type=\"radio\"\n            value=\"user\"\n            checked={role === 'user'}\n            onChange={() => setRole('user')}\n          />{' '}\n          User\n          <input\n            type=\"radio\"\n            value=\"admin\"\n            checked={role === 'admin'}\n            onChange={() => setRole('admin')}\n          />{' '}\n          Admin\n        </div>\n\n        <button type=\"submit\">Login</button>\n      </form>\n\n      <p>\n        Don't have an account? <Link to=\"/register\">Register here</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}