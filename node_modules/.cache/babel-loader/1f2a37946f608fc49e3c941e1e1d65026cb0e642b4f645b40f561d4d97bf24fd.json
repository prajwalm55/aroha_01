{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Pages/Home.jsx\",\n  _s = $RefreshSig$();\n// // ✅ src/Pages/Home.js\n// import React, { useState } from 'react';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [sizeFilter, setSizeFilter] = useState('');\n//   const [styleFilter, setStyleFilter] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product);\n//   };\n\n//   const handleSizeSelect = (size) => {\n//     if (!selectedProduct) return;\n\n//     const productWithSize = { ...selectedProduct, size };\n//     const existing = cartItems.find(\n//       (item) => item.id === productWithSize.id && item.size === size\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === productWithSize.id && item.size === size\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...productWithSize, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null);\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'sans-serif', background: '#f9fafb' }}>\n//       <Header cartItems={cartItems} onCartToggle={() => setCartOpen(true)} />\n//       <CategoryNav onCategorySelect={setSelectedCategory} />\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n//         <Filters\n//           sizeFilter={sizeFilter}\n//           setSizeFilter={setSizeFilter}\n//           styleFilter={styleFilter}\n//           setStyleFilter={setStyleFilter}\n//         />\n//         <ProductGrid\n//           category={selectedCategory}\n//           size={sizeFilter}\n//           style={styleFilter}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.5)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '20px',\n//               borderRadius: '8px',\n//               textAlign: 'center',\n//               width: '300px',\n//             }}\n//           >\n//             <h3>Select Size for {selectedProduct.name}</h3>\n//             <div\n//               style={{\n//                 display: 'flex',\n//                 gap: '10px',\n//                 marginTop: '15px',\n//                 justifyContent: 'center',\n//                 flexWrap: 'wrap',\n//               }}\n//             >\n//               {['XS', 'S', 'M', 'L', 'XL'].map((size) => (\n//                 <button\n//                   key={size}\n//                   onClick={() => handleSizeSelect(size)}\n//                   style={{\n//                     padding: '8px 16px',\n//                     border: '1px solid #ccc',\n//                     borderRadius: '4px',\n//                     cursor: 'pointer',\n//                     backgroundColor: '#f0f0f0',\n//                   }}\n//                 >\n//                   {size}\n//                 </button>\n//               ))}\n//             </div>\n//             <button\n//               onClick={() => setSelectedProduct(null)}\n//               style={{\n//                 marginTop: '20px',\n//                 backgroundColor: '#f87171',\n//                 color: '#fff',\n//                 padding: '8px 16px',\n//                 border: 'none',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState } from 'react';\nimport Header from '../Components/Header';\nimport CategoryNav from '../Components/CategoryNav';\nimport Filters from '../Components/Filters';\nimport ProductGrid from '../Components/ProductGrid';\nimport CartSidebar from '../Components/CartSidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [cartOpen, setCartOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sizeFilter, setSizeFilter] = useState('');\n  const [styleFilter, setStyleFilter] = useState('');\n  const [cartItems, setCartItems] = useState([]);\n  const handleAddToCart = product => {\n    const existing = cartItems.find(item => item.id === product.id && item.size === product.size);\n    if (existing) {\n      const updated = cartItems.map(item => item.id === product.id && item.size === product.size ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item);\n      setCartItems(updated);\n    } else {\n      setCartItems([...cartItems, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n    setCartOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'sans-serif',\n      background: '#f9fafb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cartItems: cartItems,\n      onCartToggle: () => setCartOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryNav, {\n      onCategorySelect: setSelectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        maxWidth: '1200px',\n        margin: '0 auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        sizeFilter: sizeFilter,\n        setSizeFilter: setSizeFilter,\n        styleFilter: styleFilter,\n        setStyleFilter: setStyleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductGrid, {\n        category: selectedCategory,\n        size: sizeFilter,\n        style: styleFilter,\n        onAddToCart: handleAddToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartSidebar, {\n      open: cartOpen,\n      onClose: () => setCartOpen(false),\n      cartItems: cartItems,\n      setCartItems: setCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"/aLAZYqeZ1fDCyIe443iWUUZLWk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Header","CategoryNav","Filters","ProductGrid","CartSidebar","jsxDEV","_jsxDEV","Home","_s","cartOpen","setCartOpen","selectedCategory","setSelectedCategory","sizeFilter","setSizeFilter","styleFilter","setStyleFilter","cartItems","setCartItems","handleAddToCart","product","existing","find","item","id","size","updated","map","quantity","style","fontFamily","background","children","onCartToggle","fileName","_jsxFileName","lineNumber","columnNumber","onCategorySelect","maxWidth","margin","padding","category","onAddToCart","open","onClose","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Pages/Home.jsx"],"sourcesContent":["// // ✅ src/Pages/Home.js\n// import React, { useState } from 'react';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [sizeFilter, setSizeFilter] = useState('');\n//   const [styleFilter, setStyleFilter] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product);\n//   };\n\n//   const handleSizeSelect = (size) => {\n//     if (!selectedProduct) return;\n\n//     const productWithSize = { ...selectedProduct, size };\n//     const existing = cartItems.find(\n//       (item) => item.id === productWithSize.id && item.size === size\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === productWithSize.id && item.size === size\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...productWithSize, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null);\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'sans-serif', background: '#f9fafb' }}>\n//       <Header cartItems={cartItems} onCartToggle={() => setCartOpen(true)} />\n//       <CategoryNav onCategorySelect={setSelectedCategory} />\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n//         <Filters\n//           sizeFilter={sizeFilter}\n//           setSizeFilter={setSizeFilter}\n//           styleFilter={styleFilter}\n//           setStyleFilter={setStyleFilter}\n//         />\n//         <ProductGrid\n//           category={selectedCategory}\n//           size={sizeFilter}\n//           style={styleFilter}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.5)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '20px',\n//               borderRadius: '8px',\n//               textAlign: 'center',\n//               width: '300px',\n//             }}\n//           >\n//             <h3>Select Size for {selectedProduct.name}</h3>\n//             <div\n//               style={{\n//                 display: 'flex',\n//                 gap: '10px',\n//                 marginTop: '15px',\n//                 justifyContent: 'center',\n//                 flexWrap: 'wrap',\n//               }}\n//             >\n//               {['XS', 'S', 'M', 'L', 'XL'].map((size) => (\n//                 <button\n//                   key={size}\n//                   onClick={() => handleSizeSelect(size)}\n//                   style={{\n//                     padding: '8px 16px',\n//                     border: '1px solid #ccc',\n//                     borderRadius: '4px',\n//                     cursor: 'pointer',\n//                     backgroundColor: '#f0f0f0',\n//                   }}\n//                 >\n//                   {size}\n//                 </button>\n//               ))}\n//             </div>\n//             <button\n//               onClick={() => setSelectedProduct(null)}\n//               style={{\n//                 marginTop: '20px',\n//                 backgroundColor: '#f87171',\n//                 color: '#fff',\n//                 padding: '8px 16px',\n//                 border: 'none',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState } from 'react';\nimport Header from '../Components/Header';\nimport CategoryNav from '../Components/CategoryNav';\nimport Filters from '../Components/Filters';\nimport ProductGrid from '../Components/ProductGrid';\nimport CartSidebar from '../Components/CartSidebar';\n\nconst Home = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [sizeFilter, setSizeFilter] = useState('');\n  const [styleFilter, setStyleFilter] = useState('');\n  const [cartItems, setCartItems] = useState([]);\n\n  const handleAddToCart = (product) => {\n    const existing = cartItems.find(\n      (item) => item.id === product.id && item.size === product.size\n    );\n\n    if (existing) {\n      const updated = cartItems.map((item) =>\n        item.id === product.id && item.size === product.size\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      );\n      setCartItems(updated);\n    } else {\n      setCartItems([...cartItems, { ...product, quantity: 1 }]);\n    }\n\n    setCartOpen(true);\n  };\n\n  return (\n    <div style={{ fontFamily: 'sans-serif', background: '#f9fafb' }}>\n      <Header cartItems={cartItems} onCartToggle={() => setCartOpen(true)} />\n      <CategoryNav onCategorySelect={setSelectedCategory} />\n      <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n        <Filters\n          sizeFilter={sizeFilter}\n          setSizeFilter={setSizeFilter}\n          styleFilter={styleFilter}\n          setStyleFilter={setStyleFilter}\n        />\n        <ProductGrid\n          category={selectedCategory}\n          size={sizeFilter}\n          style={styleFilter}\n          onAddToCart={handleAddToCart}\n        />\n      </main>\n      <CartSidebar\n        open={cartOpen}\n        onClose={() => setCartOpen(false)}\n        cartItems={cartItems}\n        setCartItems={setCartItems}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}