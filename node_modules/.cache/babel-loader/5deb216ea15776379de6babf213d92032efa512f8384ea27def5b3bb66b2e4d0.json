{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n// import Sidebar from '../Components/Sidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [sizeFilter, setSizeFilter] = useState('');\n//   const [styleFilter, setStyleFilter] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n//   const [sidebarOpen, setSidebarOpen] = useState(false);\n\n//   const location = useLocation();\n\n//   // ðŸ”“ Open sidebar after login/register if flag is set\n//   useEffect(() => {\n//     if (location?.state?.openSidebar) {\n//       setSidebarOpen(true);\n//     }\n//   }, [location]);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product); // Show product confirmation modal\n//   };\n\n//   const handleConfirmAdd = () => {\n//     if (!selectedProduct) return;\n\n//     const existing = cartItems.find(\n//       (item) => item.id === selectedProduct.id\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === selectedProduct.id\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...selectedProduct, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null);\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'system-ui, sans-serif', background: '#f9fafb' }}>\n//       <Header\n//         cartItems={cartItems}\n//         onCartToggle={() => setCartOpen(true)}\n//         sidebarOpen={sidebarOpen}\n//         setSidebarOpen={setSidebarOpen}\n//       />\n\n//       <Sidebar open={sidebarOpen} onClose={() => setSidebarOpen(false)} />\n\n//       <CategoryNav\n//         selectedCategory={selectedCategory}\n//         onCategorySelect={setSelectedCategory}\n//       />\n\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '40px 32px' }}>\n//         <Filters\n//           sizeFilter={sizeFilter}\n//           setSizeFilter={setSizeFilter}\n//           styleFilter={styleFilter}\n//           setStyleFilter={setStyleFilter}\n//         />\n//         <ProductGrid\n//           category={selectedCategory}\n//           size={sizeFilter}\n//           style={styleFilter}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {/* Product Confirmation Modal */}\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.4)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '24px',\n//               borderRadius: '12px',\n//               width: '340px',\n//               boxShadow: '0 6px 16px rgba(0,0,0,0.2)',\n//               fontFamily: 'system-ui, sans-serif',\n//               textAlign: 'center',\n//             }}\n//           >\n//             <h3 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '8px' }}>\n//               {selectedProduct.name}\n//             </h3>\n//             <p style={{ marginBottom: '4px', fontSize: '14px' }}>\n//               <strong>Size:</strong> {selectedProduct.size}\n//             </p>\n//             <p style={{ marginBottom: '16px', fontSize: '14px' }}>\n//               <strong>Price:</strong> ${selectedProduct.price}\n//             </p>\n\n//             <button\n//               onClick={handleConfirmAdd}\n//               style={{\n//                 backgroundColor: '#22c55e',\n//                 color: '#fff',\n//                 padding: '12px 0',\n//                 border: 'none',\n//                 borderRadius: '6px',\n//                 cursor: 'pointer',\n//                 fontWeight: '600',\n//                 width: '100%',\n//                 fontSize: '15px',\n//               }}\n//             >\n//               Confirm\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Pages/Home.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import Header from '../Components/Header';\n// import CategoryNav from '../Components/CategoryNav';\n// import Filters from '../Components/Filters';\n// import ProductGrid from '../Components/ProductGrid';\n// import CartSidebar from '../Components/CartSidebar';\n// import Sidebar from '../Components/Sidebar';\n\n// const Home = () => {\n//   const [cartOpen, setCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [sizeFilter, setSizeFilter] = useState('');\n//   const [styleFilter, setStyleFilter] = useState('');\n//   const [cartItems, setCartItems] = useState([]);\n//   const [selectedProduct, setSelectedProduct] = useState(null);\n//   const [sidebarOpen, setSidebarOpen] = useState(false);\n\n//   const location = useLocation();\n\n//   // ðŸ”“ Open sidebar after login/register if flag is set\n//   useEffect(() => {\n//     if (location?.state?.openSidebar) {\n//       setSidebarOpen(true);\n//     }\n//   }, [location]);\n\n//   const handleAddToCart = (product) => {\n//     setSelectedProduct(product); // Show product confirmation modal\n//   };\n\n//   const handleConfirmAdd = () => {\n//     if (!selectedProduct) return;\n\n//     const existing = cartItems.find(\n//       (item) => item.id === selectedProduct.id\n//     );\n\n//     if (existing) {\n//       const updated = cartItems.map((item) =>\n//         item.id === selectedProduct.id\n//           ? { ...item, quantity: item.quantity + 1 }\n//           : item\n//       );\n//       setCartItems(updated);\n//     } else {\n//       setCartItems([...cartItems, { ...selectedProduct, quantity: 1 }]);\n//     }\n\n//     setCartOpen(true);\n//     setSelectedProduct(null);\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'system-ui, sans-serif', background: '#f9fafb' }}>\n//       <Header\n//         cartItems={cartItems}\n//         onCartToggle={() => setCartOpen(true)}\n//         sidebarOpen={sidebarOpen}\n//         setSidebarOpen={setSidebarOpen}\n//       />\n\n//       <Sidebar open={sidebarOpen} onClose={() => setSidebarOpen(false)} />\n\n//       <CategoryNav\n//         selectedCategory={selectedCategory}\n//         onCategorySelect={setSelectedCategory}\n//       />\n\n//       <main style={{ maxWidth: '1200px', margin: '0 auto', padding: '40px 32px' }}>\n//         <Filters\n//           sizeFilter={sizeFilter}\n//           setSizeFilter={setSizeFilter}\n//           styleFilter={styleFilter}\n//           setStyleFilter={setStyleFilter}\n//         />\n//         <ProductGrid\n//           category={selectedCategory}\n//           size={sizeFilter}\n//           style={styleFilter}\n//           onAddToCart={handleAddToCart}\n//         />\n//       </main>\n\n//       <CartSidebar\n//         open={cartOpen}\n//         onClose={() => setCartOpen(false)}\n//         cartItems={cartItems}\n//         setCartItems={setCartItems}\n//       />\n\n//       {/* Product Confirmation Modal */}\n//       {selectedProduct && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: 0,\n//             left: 0,\n//             right: 0,\n//             bottom: 0,\n//             backgroundColor: 'rgba(0,0,0,0.4)',\n//             display: 'flex',\n//             justifyContent: 'center',\n//             alignItems: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               padding: '24px',\n//               borderRadius: '12px',\n//               width: '340px',\n//               boxShadow: '0 6px 16px rgba(0,0,0,0.2)',\n//               fontFamily: 'system-ui, sans-serif',\n//               textAlign: 'center',\n//             }}\n//           >\n//             <h3 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '8px' }}>\n//               {selectedProduct.name}\n//             </h3>\n//             <p style={{ marginBottom: '4px', fontSize: '14px' }}>\n//               <strong>Size:</strong> {selectedProduct.size}\n//             </p>\n//             <p style={{ marginBottom: '16px', fontSize: '14px' }}>\n//               <strong>Price:</strong> ${selectedProduct.price}\n//             </p>\n\n//             <button\n//               onClick={handleConfirmAdd}\n//               style={{\n//                 backgroundColor: '#22c55e',\n//                 color: '#fff',\n//                 padding: '12px 0',\n//                 border: 'none',\n//                 borderRadius: '6px',\n//                 cursor: 'pointer',\n//                 fontWeight: '600',\n//                 width: '100%',\n//                 fontSize: '15px',\n//               }}\n//             >\n//               Confirm\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Home;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}