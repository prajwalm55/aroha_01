{"ast":null,"code":"// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />\n//             {' '}User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />\n//             {' '}Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message:\n//                 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         {/* Phone Number Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Phone Number\"\n//           style={inputStyle}\n//           {...register('phone', {\n//             required: 'Phone number is required',\n//             pattern: {\n//               value: /^[6-9]\\d{9}$/,\n//               message: 'Enter a valid 10-digit phone number starting with 6-9',\n//             },\n//           })}\n//         />\n//         {errors.phone && <p style={errorText}>{errors.phone.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563', // gray-700\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb', // blue-600\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981', // green-500\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message: 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563',\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb',\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981',\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Login.js"],"sourcesContent":["// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />\n//             {' '}User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />\n//             {' '}Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message:\n//                 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         {/* Phone Number Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Phone Number\"\n//           style={inputStyle}\n//           {...register('phone', {\n//             required: 'Phone number is required',\n//             pattern: {\n//               value: /^[6-9]\\d{9}$/,\n//               message: 'Enter a valid 10-digit phone number starting with 6-9',\n//             },\n//           })}\n//         />\n//         {errors.phone && <p style={errorText}>{errors.phone.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563', // gray-700\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb', // blue-600\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981', // green-500\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n\n\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message: 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563',\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb',\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981',\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}