{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// function AdminDashboard() {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [updatedProduct, setUpdatedProduct] = useState({ name: \"\", price: \"\", description: \"\" });\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch products on page load\n//   useEffect(() => {\n//     axios.get(\"http://localhost:3001/api/products/all\", {\n//       withCredentials: true\n//     })\n//     .then(res => setProducts(res.data))\n//     .catch(err => setError(\"Unauthorized or failed to load products\"));\n//   }, []);\n\n//   // Delete Product\n//   const deleteProduct = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3001/api/admin/products/${id}`, {\n//         withCredentials: true\n//       });\n//       setProducts(products.filter(p => p._id !== id));\n//     } catch (err) {\n//       alert(\"Delete failed\");\n//     }\n//   };\n\n//   // Handle Edit Click\n//   const startEdit = (product) => {\n//     setEditingProduct(product._id);\n//     setUpdatedProduct({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description\n//     });\n//   };\n\n//   // Submit Update\n//   const submitUpdate = async () => {\n//     try {\n//       const res = await axios.put(`http://localhost:3001/api/admin/products/${editingProduct}`, updatedProduct, {\n//         withCredentials: true\n//       });\n//       setProducts(products.map(p => p._id === editingProduct ? res.data : p));\n//       setEditingProduct(null);\n//     } catch (err) {\n//       alert(\"Update failed\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Admin Dashboard</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//       {products.map(product => (\n//         <div key={product._id} style={{ border: \"1px solid #ccc\", margin: \"10px\", padding: \"10px\" }}>\n//           {editingProduct === product._id ? (\n//             <>\n//               <input\n//                 type=\"text\"\n//                 value={updatedProduct.name}\n//                 onChange={(e) => setUpdatedProduct({ ...updatedProduct, name: e.target.value })}\n//               />\n//               <input\n//                 type=\"number\"\n//                 value={updatedProduct.price}\n//                 onChange={(e) => setUpdatedProduct({ ...updatedProduct, price: e.target.value })}\n//               />\n//               <input\n//                 type=\"text\"\n//                 value={updatedProduct.description}\n//                 onChange={(e) => setUpdatedProduct({ ...updatedProduct, description: e.target.value })}\n//               />\n//               <button onClick={submitUpdate}>Save</button>\n//               <button onClick={() => setEditingProduct(null)}>Cancel</button>\n//             </>\n//           ) : (\n//             <>\n//               <p><strong>{product.name}</strong></p>\n//               <p>₹{product.price}</p>\n//               <p>{product.description}</p>\n//               <button onClick={() => startEdit(product)}>Edit</button>\n//               <button onClick={() => deleteProduct(product._id)}>Delete</button>\n//             </>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Pages/AdminDashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n\n// function AdminDashboard() {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [updatedProduct, setUpdatedProduct] = useState({ name: \"\", price: \"\", description: \"\" });\n//   const [error, setError] = useState(\"\");\n\n//   // Fetch products on page load\n//   useEffect(() => {\n//     axios.get(\"http://localhost:3001/api/products/all\", {\n//       withCredentials: true\n//     })\n//     .then(res => setProducts(res.data))\n//     .catch(err => setError(\"Unauthorized or failed to load products\"));\n//   }, []);\n\n//   // Delete Product\n//   const deleteProduct = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3001/api/admin/products/${id}`, {\n//         withCredentials: true\n//       });\n//       setProducts(products.filter(p => p._id !== id));\n//     } catch (err) {\n//       alert(\"Delete failed\");\n//     }\n//   };\n\n//   // Handle Edit Click\n//   const startEdit = (product) => {\n//     setEditingProduct(product._id);\n//     setUpdatedProduct({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description\n//     });\n//   };\n\n//   // Submit Update\n//   const submitUpdate = async () => {\n//     try {\n//       const res = await axios.put(`http://localhost:3001/api/admin/products/${editingProduct}`, updatedProduct, {\n//         withCredentials: true\n//       });\n//       setProducts(products.map(p => p._id === editingProduct ? res.data : p));\n//       setEditingProduct(null);\n//     } catch (err) {\n//       alert(\"Update failed\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Admin Dashboard</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//       {products.map(product => (\n//         <div key={product._id} style={{ border: \"1px solid #ccc\", margin: \"10px\", padding: \"10px\" }}>\n//           {editingProduct === product._id ? (\n//             <>\n//               <input\n//                 type=\"text\"\n//                 value={updatedProduct.name}\n//                 onChange={(e) => setUpdatedProduct({ ...updatedProduct, name: e.target.value })}\n//               />\n//               <input\n//                 type=\"number\"\n//                 value={updatedProduct.price}\n//                 onChange={(e) => setUpdatedProduct({ ...updatedProduct, price: e.target.value })}\n//               />\n//               <input\n//                 type=\"text\"\n//                 value={updatedProduct.description}\n//                 onChange={(e) => setUpdatedProduct({ ...updatedProduct, description: e.target.value })}\n//               />\n//               <button onClick={submitUpdate}>Save</button>\n//               <button onClick={() => setEditingProduct(null)}>Cancel</button>\n//             </>\n//           ) : (\n//             <>\n//               <p><strong>{product.name}</strong></p>\n//               <p>₹{product.price}</p>\n//               <p>{product.description}</p>\n//               <button onClick={() => startEdit(product)}>Edit</button>\n//               <button onClick={() => deleteProduct(product._id)}>Delete</button>\n//             </>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n\n// export default AdminDashboard;\n\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}