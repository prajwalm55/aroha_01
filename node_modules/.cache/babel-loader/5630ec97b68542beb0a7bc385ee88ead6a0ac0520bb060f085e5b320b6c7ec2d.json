{"ast":null,"code":"// import React, { useEffect, useState, useRef } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// // import AdminDashboardTopbar from '../Components/Pages/Admin\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     const res = await axios.get('http://localhost:3001/api/products/all');\n//     setProducts(res.data);\n//     calculateStats(res.data);\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       await axios.delete(`http://localhost:3001/api/products/delete/${selectedProductId}`);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n\n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n\n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n\n//       setSelectedFile(file);\n\n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n\n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n\n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n\n//         const uploadResponse = await axios.post('http://localhost:3001/api/upload', formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//           },\n//         });\n\n//         if (uploadResponse.data.success) {\n//           imageUrl = uploadResponse.data.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       if (editingProduct) {\n//         await axios.put(`http://localhost:3001/api/products/update/${editingProduct._id}`, productData);\n//       } else {\n//         await axios.post('http://localhost:3001/api/products/add', productData);\n//       }\n\n//       // Reset form and close modal\n//       setEditingProduct(null);\n//       setShowModal(false);\n//       setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     navigate('/login');\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ padding: '24px', backgroundColor: '#f3f4f6', minHeight: '100vh', fontFamily: 'Arial, sans-serif' }}>\n//       {/* Topbar */}\n//       <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '24px' }}>\n//         <h2 style={{ fontSize: '24px', fontWeight: 'bold' }}>\n//           <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//         </h2>\n//         <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n//           <span>Welcome, Admin</span>\n//           <div style={{ width: '32px', height: '32px', backgroundColor: '#2563eb', color: '#fff', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 'bold' }}>A</div>\n//           <button onClick={handleLogout} style={{ backgroundColor: '#000', color: '#fff', padding: '8px 16px', borderRadius: '4px' }}>Logout</button>\n//         </div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '16px', marginBottom: '24px' }}>\n//         {[\n//           { label: 'Total Products 📦', value: totalProducts },\n//           { label: 'Active Products ✅', value: activeProducts },\n//           { label: 'Low Stock ⚠️', value: lowStock },\n//           { label: 'Total Value 💰', value: `$${totalValue.toFixed(2)}` }\n//         ].map((stat, idx) => (\n//           <div key={idx} style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px' }}>\n//             <p>{stat.label}</p>\n//             <h2 style={{ fontSize: '24px', fontWeight: 'bold' }}>{stat.value}</h2>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px', marginBottom: '24px' }}>\n//         <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '16px' }}>\n//           <h3 style={{ fontSize: '18px', fontWeight: 'bold' }}>Product Management</h3>\n//           <button\n//             onClick={openModal}\n//             style={{ backgroundColor: '#2563eb', color: '#fff', padding: '8px 12px', borderRadius: '4px' }}\n//           >\n//             + Add New Product\n//           </button>\n//         </div>\n\n//         <table style={{ width: '100%', fontSize: '14px', borderCollapse: 'collapse' }}>\n//           <thead style={{ backgroundColor: '#dbeafe' }}>\n//             <tr>\n//               <th style={{ padding: '8px', textAlign: 'left' }}>Product</th>\n//               <th style={{ textAlign: 'center' }}>Category</th>\n//               <th style={{ textAlign: 'center' }}>Price</th>\n//               <th style={{ textAlign: 'center' }}>Stock</th>\n//               <th style={{ textAlign: 'center' }}>Size</th>\n//               <th style={{ textAlign: 'center' }}>Style</th>\n//               <th style={{ textAlign: 'center' }}>Status</th>\n//               <th style={{ textAlign: 'center' }}>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products.map((product) => (\n//               <tr key={product._id} style={{ borderTop: '1px solid #e5e7eb' }}>\n//                 <td style={{ display: 'flex', alignItems: 'center', padding: '8px' }}>\n//                   <img\n//                     src={product.image}\n//                     alt={product.name}\n//                     style={{\n//                       width: '40px',\n//                       height: '40px',\n//                       objectFit: 'cover',\n//                       borderRadius: '6px',\n//                       marginRight: '12px',\n//                       border: '1px solid #ccc',\n//                     }}\n//                   />\n//                   <span style={{ fontWeight: 'bold' }}>{product.name}</span>\n//                 </td>\n//                 <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                 <td style={{ textAlign: 'center' }}>${product.price.toFixed(2)}</td>\n//                 <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                 <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                 <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                 <td style={{ textAlign: 'center' }}>\n//                   <span style={{\n//                     padding: '4px 8px',\n//                     borderRadius: '12px',\n//                     fontSize: '12px',\n//                     backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                     color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                   }}>\n//                     {product.quantity >= 1 ? 'active' : 'inactive'}\n//                   </span>\n//                 </td>\n//                 <td style={{ textAlign: 'center' }}>\n//                   <span\n//                     role=\"img\"\n//                     aria-label=\"edit\"\n//                     onClick={() => handleEdit(product)}\n//                     style={{ cursor: 'pointer', marginRight: '12px', color: '#3b82f6', fontSize: '16px' }}\n//                   >\n//                     ✏️\n//                   </span>\n//                   <span\n//                     role=\"img\"\n//                     aria-label=\"delete\"\n//                     onClick={() => handleDeleteClick(product._id)}\n//                     style={{ cursor: 'pointer', color: '#ef4444', fontSize: '16px' }}\n//                   >\n//                     🗑️\n//                   </span>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n\n//       {/* Updated Modal with Image Upload */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', padding: '24px', borderRadius: '8px',\n//             width: '400px', maxHeight: '90vh', overflowY: 'auto', boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '16px' }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input name=\"name\" placeholder=\"Product Name\" value={newProduct.name} onChange={handleInputChange} style={inputStyle} />\n\n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ fontSize: '14px', fontWeight: '500', color: '#374151' }}>\n//                   Product Image\n//                 </label>\n\n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n\n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: '14px',\n//                     cursor: 'pointer'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n\n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n\n//                 <input name=\"image\" placeholder=\"Or paste image URL\" value={newProduct.image} onChange={handleInputChange} style={inputStyle} />\n//               </div>\n\n//               <select name=\"category\" value={newProduct.category} onChange={handleInputChange} style={inputStyle}>\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirt\">Shirt</option>\n//                 <option value=\"Pant\">Pant</option>\n//                 <option value=\"Accesories\">Accesories</option>\n//               </select>\n//               <input name=\"price\" type=\"number\" placeholder=\"Price ($)\" value={newProduct.price} onChange={handleInputChange} style={inputStyle} />\n//               <input name=\"quantity\" type=\"number\" placeholder=\"Stock Quantity\" value={newProduct.quantity} onChange={handleInputChange} style={inputStyle} />\n//               <select name=\"size\" value={newProduct.size} onChange={handleInputChange} style={inputStyle}>\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select name=\"style\" value={newProduct.style} onChange={handleInputChange} style={inputStyle}>\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px', gap: '10px' }}>\n//               <button onClick={() => setShowModal(false)} style={{ padding: '8px 16px', backgroundColor: '#f3f4f6', borderRadius: '4px', border: 'none', cursor: 'pointer' }}>Cancel</button>\n//               <button onClick={handleSave} style={{ padding: '8px 16px', backgroundColor: '#2563eb', color: '#fff', borderRadius: '4px', border: 'none', cursor: 'pointer' }}>\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000\n//         }}>\n//           <div style={{\n//             background: '#fff', padding: '24px 32px', borderRadius: '12px', width: '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', textAlign: 'center', fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ marginBottom: '10px' }}>🟠 Delete Product</h3>\n//             <p style={{ marginBottom: '20px' }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ display: 'flex', justifyContent: 'center', gap: '12px' }}>\n//               <button onClick={cancelDelete} style={{ padding: '8px 16px', backgroundColor: '#e5e7eb', border: 'none', borderRadius: '8px', cursor: 'pointer' }}>Cancel</button>\n//               <button onClick={confirmDelete} style={{ padding: '8px 16px', backgroundColor: '#ef4444', color: '#fff', border: 'none', borderRadius: '8px', cursor: 'pointer' }}>Delete</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\n// import React, { useEffect, useState, useRef } from 'react';\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await fetch('http://localhost:3001/api/products/all');\n//       const data = await res.json();\n//       setProducts(data);\n//       calculateStats(data);\n//     } catch (err) {\n//       console.error('Failed to fetch products', err);\n//     }\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:3001/api/products/delete/${selectedProductId}`, {\n//         method: 'DELETE'\n//       });\n\n//       if (response.ok) {\n//         fetchProducts();\n//       } else {\n//         console.error('Delete failed');\n//       }\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n\n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n\n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n\n//       setSelectedFile(file);\n\n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n\n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n\n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n\n//         const uploadResponse = await fetch('http://localhost:3001/api/upload', {\n//           method: 'POST',\n//           body: formData\n//         });\n\n//         const uploadResult = await uploadResponse.json();\n\n//         if (uploadResult.success) {\n//           imageUrl = uploadResult.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       let response;\n//       if (editingProduct) {\n//         response = await fetch(`http://localhost:3001/api/products/update/${editingProduct._id}`, {\n//           method: 'PUT',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       } else {\n//         response = await fetch('http://localhost:3001/api/products/add', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       }\n\n//       if (response.ok) {\n//         // Reset form and close modal\n//         setEditingProduct(null);\n//         setShowModal(false);\n//         setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//         setImagePreview(null);\n//         setSelectedFile(null);\n//         fetchProducts();\n//       } else {\n//         alert('Failed to save product');\n//       }\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     window.location.href = '/login'; // or use your routing method\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ \n//       padding: '24px', \n//       backgroundColor: '#f3f4f6', \n//       minHeight: '100vh', \n//       fontFamily: 'Arial, sans-serif' \n//     }}>\n//       {/* Topbar */}\n//       <div style={{ \n//         display: 'flex', \n//         justifyContent: 'space-between', \n//         alignItems: 'center', \n//         marginBottom: '24px'\n//       }}>\n//         <h2 style={{ \n//           fontSize: '24px', \n//           fontWeight: 'bold',\n//           margin: '0'\n//         }}>\n//           <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//         </h2>\n//         <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n//           <span>Welcome, Admin</span>\n//           <div style={{ \n//             width: '32px', \n//             height: '32px', \n//             backgroundColor: '#2563eb', \n//             color: '#fff', \n//             borderRadius: '50%', \n//             display: 'flex', \n//             alignItems: 'center', \n//             justifyContent: 'center', \n//             fontWeight: 'bold' \n//           }}>A</div>\n//           <button onClick={handleLogout} style={{ \n//             backgroundColor: '#000', \n//             color: '#fff', \n//             padding: '8px 16px', \n//             borderRadius: '4px',\n//             border: 'none',\n//             cursor: 'pointer'\n//           }}>Logout</button>\n//         </div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(4, 1fr)', \n//         gap: '16px', \n//         marginBottom: '24px' \n//       }}>\n//         {[\n//           { label: 'Total Products 📦', value: totalProducts },\n//           { label: 'Active Products ✅', value: activeProducts },\n//           { label: 'Low Stock ⚠️', value: lowStock },\n//           { label: 'Total Value 💰', value: `$${totalValue.toFixed(2)}` }\n//         ].map((stat, idx) => (\n//           <div key={idx} style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px' }}>\n//             <p style={{ margin: '0 0 8px 0' }}>{stat.label}</p>\n//             <h2 style={{ \n//               fontSize: '24px', \n//               fontWeight: 'bold',\n//               margin: '0'\n//             }}>{stat.value}</h2>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px', marginBottom: '24px', overflowX: 'auto' }}>\n//         <div style={{ \n//           display: 'flex', \n//           justifyContent: 'space-between', \n//           marginBottom: '16px'\n//         }}>\n//           <h3 style={{ \n//             fontSize: '18px', \n//             fontWeight: 'bold',\n//             margin: '0'\n//           }}>Product Management</h3>\n//           <button\n//             onClick={openModal}\n//             style={{ \n//               backgroundColor: '#2563eb', \n//               color: '#fff', \n//               padding: '8px 12px', \n//               borderRadius: '4px',\n//               border: 'none',\n//               cursor: 'pointer'\n//             }}\n//           >\n//             + Add New Product\n//           </button>\n//         </div>\n\n//         <div style={{ minWidth: '800px' }}>\n//           <table style={{ width: '100%', fontSize: '14px', borderCollapse: 'collapse' }}>\n//             <thead style={{ backgroundColor: '#dbeafe' }}>\n//               <tr>\n//                 <th style={{ padding: '8px', textAlign: 'left' }}>Product</th>\n//                 <th style={{ textAlign: 'center' }}>Category</th>\n//                 <th style={{ textAlign: 'center' }}>Price</th>\n//                 <th style={{ textAlign: 'center' }}>Stock</th>\n//                 <th style={{ textAlign: 'center' }}>Size</th>\n//                 <th style={{ textAlign: 'center' }}>Style</th>\n//                 <th style={{ textAlign: 'center' }}>Status</th>\n//                 <th style={{ textAlign: 'center' }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product._id} style={{ borderTop: '1px solid #e5e7eb' }}>\n//                   <td style={{ display: 'flex', alignItems: 'center', padding: '8px' }}>\n//                     <img\n//                       src={product.image}\n//                       alt={product.name}\n//                       style={{\n//                         width: '40px',\n//                         height: '40px',\n//                         objectFit: 'cover',\n//                         borderRadius: '6px',\n//                         marginRight: '12px',\n//                         border: '1px solid #ccc',\n//                       }}\n//                     />\n//                     <span style={{ fontWeight: 'bold' }}>{product.name}</span>\n//                   </td>\n//                   <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                   <td style={{ textAlign: 'center' }}>${product.price.toFixed(2)}</td>\n//                   <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                   <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                   <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                   <td style={{ textAlign: 'center' }}>\n//                     <span style={{\n//                       padding: '4px 8px',\n//                       borderRadius: '12px',\n//                       fontSize: '12px',\n//                       backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                       color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                     }}>\n//                       {product.quantity >= 1 ? 'active' : 'inactive'}\n//                     </span>\n//                   </td>\n//                   <td style={{ textAlign: 'center' }}>\n//                     <span\n//                       role=\"img\"\n//                       aria-label=\"edit\"\n//                       onClick={() => handleEdit(product)}\n//                       style={{ cursor: 'pointer', marginRight: '12px', color: '#3b82f6', fontSize: '16px' }}\n//                     >\n//                       ✏️\n//                     </span>\n//                     <span\n//                       role=\"img\"\n//                       aria-label=\"delete\"\n//                       onClick={() => handleDeleteClick(product._id)}\n//                       style={{ cursor: 'pointer', color: '#ef4444', fontSize: '16px' }}\n//                     >\n//                       🗑️\n//                     </span>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Updated Modal with Image Upload */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', \n//             padding: '24px', \n//             borderRadius: '8px',\n//             width: '400px', \n//             maxHeight: '90vh', \n//             overflowY: 'auto', \n//             boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ \n//               fontSize: '18px', \n//               fontWeight: 'bold', \n//               marginBottom: '16px',\n//               margin: '0 0 16px 0'\n//             }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input \n//                 name=\"name\" \n//                 placeholder=\"Product Name\" \n//                 value={newProduct.name} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//               />\n\n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ fontSize: '14px', fontWeight: '500', color: '#374151' }}>\n//                   Product Image\n//                 </label>\n\n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n\n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: '14px',\n//                     cursor: 'pointer',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n\n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n\n//                 <input \n//                   name=\"image\" \n//                   placeholder=\"Or paste image URL\" \n//                   value={newProduct.image} \n//                   onChange={handleInputChange} \n//                   style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//                 />\n//               </div>\n\n//               <select \n//                 name=\"category\" \n//                 value={newProduct.category} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}}\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirt\">Shirt</option>\n//                 <option value=\"Pant\">Pant</option>\n//                 <option value=\"Accesories\">Accesories</option>\n//               </select>\n//               <input \n//                 name=\"price\" \n//                 type=\"number\" \n//                 placeholder=\"Price ($)\" \n//                 value={newProduct.price} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//               />\n//               <input \n//                 name=\"quantity\" \n//                 type=\"number\" \n//                 placeholder=\"Stock Quantity\" \n//                 value={newProduct.quantity} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//               />\n//               <select \n//                 name=\"size\" \n//                 value={newProduct.size} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}}\n//               >\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select \n//                 name=\"style\" \n//                 value={newProduct.style} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}}\n//               >\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'flex-end', \n//               marginTop: '20px', \n//               gap: '10px' \n//             }}>\n//               <button \n//                 onClick={() => setShowModal(false)} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#f3f4f6', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={handleSave} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000\n//         }}>\n//           <div style={{\n//             background: '#fff', \n//             padding: '24px 32px', \n//             borderRadius: '12px', \n//             width: '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', \n//             textAlign: 'center', \n//             fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ marginBottom: '10px', margin: '0 0 10px 0' }}>🟠 Delete Product</h3>\n//             <p style={{ \n//               marginBottom: '20px',\n//               margin: '0 0 20px 0'\n//             }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'center', \n//               gap: '12px' \n//             }}>\n//               <button \n//                 onClick={cancelDelete} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#e5e7eb', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={confirmDelete} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#ef4444', \n//                   color: '#fff', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Pages/AdminDashboard.jsx"],"sourcesContent":["// import React, { useEffect, useState, useRef } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// // import AdminDashboardTopbar from '../Components/Pages/Admin\n\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     const res = await axios.get('http://localhost:3001/api/products/all');\n//     setProducts(res.data);\n//     calculateStats(res.data);\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       await axios.delete(`http://localhost:3001/api/products/delete/${selectedProductId}`);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n    \n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n      \n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n      \n//       setSelectedFile(file);\n      \n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n      \n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n      \n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n        \n//         const uploadResponse = await axios.post('http://localhost:3001/api/upload', formData, {\n//           headers: {\n//             'Content-Type': 'multipart/form-data',\n//           },\n//         });\n        \n//         if (uploadResponse.data.success) {\n//           imageUrl = uploadResponse.data.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       if (editingProduct) {\n//         await axios.put(`http://localhost:3001/api/products/update/${editingProduct._id}`, productData);\n//       } else {\n//         await axios.post('http://localhost:3001/api/products/add', productData);\n//       }\n      \n//       // Reset form and close modal\n//       setEditingProduct(null);\n//       setShowModal(false);\n//       setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       fetchProducts();\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     navigate('/login');\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ padding: '24px', backgroundColor: '#f3f4f6', minHeight: '100vh', fontFamily: 'Arial, sans-serif' }}>\n//       {/* Topbar */}\n//       <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '24px' }}>\n//         <h2 style={{ fontSize: '24px', fontWeight: 'bold' }}>\n//           <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//         </h2>\n//         <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n//           <span>Welcome, Admin</span>\n//           <div style={{ width: '32px', height: '32px', backgroundColor: '#2563eb', color: '#fff', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center', fontWeight: 'bold' }}>A</div>\n//           <button onClick={handleLogout} style={{ backgroundColor: '#000', color: '#fff', padding: '8px 16px', borderRadius: '4px' }}>Logout</button>\n//         </div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '16px', marginBottom: '24px' }}>\n//         {[\n//           { label: 'Total Products 📦', value: totalProducts },\n//           { label: 'Active Products ✅', value: activeProducts },\n//           { label: 'Low Stock ⚠️', value: lowStock },\n//           { label: 'Total Value 💰', value: `$${totalValue.toFixed(2)}` }\n//         ].map((stat, idx) => (\n//           <div key={idx} style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px' }}>\n//             <p>{stat.label}</p>\n//             <h2 style={{ fontSize: '24px', fontWeight: 'bold' }}>{stat.value}</h2>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px', marginBottom: '24px' }}>\n//         <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '16px' }}>\n//           <h3 style={{ fontSize: '18px', fontWeight: 'bold' }}>Product Management</h3>\n//           <button\n//             onClick={openModal}\n//             style={{ backgroundColor: '#2563eb', color: '#fff', padding: '8px 12px', borderRadius: '4px' }}\n//           >\n//             + Add New Product\n//           </button>\n//         </div>\n\n//         <table style={{ width: '100%', fontSize: '14px', borderCollapse: 'collapse' }}>\n//           <thead style={{ backgroundColor: '#dbeafe' }}>\n//             <tr>\n//               <th style={{ padding: '8px', textAlign: 'left' }}>Product</th>\n//               <th style={{ textAlign: 'center' }}>Category</th>\n//               <th style={{ textAlign: 'center' }}>Price</th>\n//               <th style={{ textAlign: 'center' }}>Stock</th>\n//               <th style={{ textAlign: 'center' }}>Size</th>\n//               <th style={{ textAlign: 'center' }}>Style</th>\n//               <th style={{ textAlign: 'center' }}>Status</th>\n//               <th style={{ textAlign: 'center' }}>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products.map((product) => (\n//               <tr key={product._id} style={{ borderTop: '1px solid #e5e7eb' }}>\n//                 <td style={{ display: 'flex', alignItems: 'center', padding: '8px' }}>\n//                   <img\n//                     src={product.image}\n//                     alt={product.name}\n//                     style={{\n//                       width: '40px',\n//                       height: '40px',\n//                       objectFit: 'cover',\n//                       borderRadius: '6px',\n//                       marginRight: '12px',\n//                       border: '1px solid #ccc',\n//                     }}\n//                   />\n//                   <span style={{ fontWeight: 'bold' }}>{product.name}</span>\n//                 </td>\n//                 <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                 <td style={{ textAlign: 'center' }}>${product.price.toFixed(2)}</td>\n//                 <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                 <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                 <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                 <td style={{ textAlign: 'center' }}>\n//                   <span style={{\n//                     padding: '4px 8px',\n//                     borderRadius: '12px',\n//                     fontSize: '12px',\n//                     backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                     color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                   }}>\n//                     {product.quantity >= 1 ? 'active' : 'inactive'}\n//                   </span>\n//                 </td>\n//                 <td style={{ textAlign: 'center' }}>\n//                   <span\n//                     role=\"img\"\n//                     aria-label=\"edit\"\n//                     onClick={() => handleEdit(product)}\n//                     style={{ cursor: 'pointer', marginRight: '12px', color: '#3b82f6', fontSize: '16px' }}\n//                   >\n//                     ✏️\n//                   </span>\n//                   <span\n//                     role=\"img\"\n//                     aria-label=\"delete\"\n//                     onClick={() => handleDeleteClick(product._id)}\n//                     style={{ cursor: 'pointer', color: '#ef4444', fontSize: '16px' }}\n//                   >\n//                     🗑️\n//                   </span>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n\n//       {/* Updated Modal with Image Upload */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', padding: '24px', borderRadius: '8px',\n//             width: '400px', maxHeight: '90vh', overflowY: 'auto', boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '16px' }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input name=\"name\" placeholder=\"Product Name\" value={newProduct.name} onChange={handleInputChange} style={inputStyle} />\n              \n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ fontSize: '14px', fontWeight: '500', color: '#374151' }}>\n//                   Product Image\n//                 </label>\n                \n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n                \n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n                \n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: '14px',\n//                     cursor: 'pointer'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n                \n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n                \n//                 <input name=\"image\" placeholder=\"Or paste image URL\" value={newProduct.image} onChange={handleInputChange} style={inputStyle} />\n//               </div>\n              \n//               <select name=\"category\" value={newProduct.category} onChange={handleInputChange} style={inputStyle}>\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirt\">Shirt</option>\n//                 <option value=\"Pant\">Pant</option>\n//                 <option value=\"Accesories\">Accesories</option>\n//               </select>\n//               <input name=\"price\" type=\"number\" placeholder=\"Price ($)\" value={newProduct.price} onChange={handleInputChange} style={inputStyle} />\n//               <input name=\"quantity\" type=\"number\" placeholder=\"Stock Quantity\" value={newProduct.quantity} onChange={handleInputChange} style={inputStyle} />\n//               <select name=\"size\" value={newProduct.size} onChange={handleInputChange} style={inputStyle}>\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select name=\"style\" value={newProduct.style} onChange={handleInputChange} style={inputStyle}>\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px', gap: '10px' }}>\n//               <button onClick={() => setShowModal(false)} style={{ padding: '8px 16px', backgroundColor: '#f3f4f6', borderRadius: '4px', border: 'none', cursor: 'pointer' }}>Cancel</button>\n//               <button onClick={handleSave} style={{ padding: '8px 16px', backgroundColor: '#2563eb', color: '#fff', borderRadius: '4px', border: 'none', cursor: 'pointer' }}>\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000\n//         }}>\n//           <div style={{\n//             background: '#fff', padding: '24px 32px', borderRadius: '12px', width: '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', textAlign: 'center', fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ marginBottom: '10px' }}>🟠 Delete Product</h3>\n//             <p style={{ marginBottom: '20px' }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ display: 'flex', justifyContent: 'center', gap: '12px' }}>\n//               <button onClick={cancelDelete} style={{ padding: '8px 16px', backgroundColor: '#e5e7eb', border: 'none', borderRadius: '8px', cursor: 'pointer' }}>Cancel</button>\n//               <button onClick={confirmDelete} style={{ padding: '8px 16px', backgroundColor: '#ef4444', color: '#fff', border: 'none', borderRadius: '8px', cursor: 'pointer' }}>Delete</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\n\n\n\n\n\n\n// import React, { useEffect, useState, useRef } from 'react';\n\n// const AdminDashboard = () => {\n//   const [products, setProducts] = useState([]);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Add new state for image upload\n//   const [imagePreview, setImagePreview] = useState(null);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const fileInputRef = useRef(null);\n\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     size: '',\n//     style: '',\n//     category: '',\n//     price: '',\n//     quantity: '',\n//     image: '',\n//   });\n\n//   const [totalProducts, setTotalProducts] = useState(0);\n//   const [activeProducts, setActiveProducts] = useState(0);\n//   const [lowStock, setLowStock] = useState(0);\n//   const [totalValue, setTotalValue] = useState(0);\n\n//   const [showDeletePopup, setShowDeletePopup] = useState(false);\n//   const [selectedProductId, setSelectedProductId] = useState(null);\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await fetch('http://localhost:3001/api/products/all');\n//       const data = await res.json();\n//       setProducts(data);\n//       calculateStats(data);\n//     } catch (err) {\n//       console.error('Failed to fetch products', err);\n//     }\n//   };\n\n//   const calculateStats = (products) => {\n//     setTotalProducts(products.length);\n//     const active = products.filter((p) => p.quantity >= 1);\n//     setActiveProducts(active.length);\n//     const lowStockCount = products.filter((p) => p.quantity > 0 && p.quantity < 10).length;\n//     setLowStock(lowStockCount);\n//     const total = products.reduce((acc, product) => acc + product.price * product.quantity, 0);\n//     setTotalValue(total);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedProductId(id);\n//     setShowDeletePopup(true);\n//   };\n\n//   const confirmDelete = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:3001/api/products/delete/${selectedProductId}`, {\n//         method: 'DELETE'\n//       });\n      \n//       if (response.ok) {\n//         fetchProducts();\n//       } else {\n//         console.error('Delete failed');\n//       }\n//     } catch (err) {\n//       console.error('Delete failed', err);\n//     } finally {\n//       setShowDeletePopup(false);\n//       setSelectedProductId(null);\n//     }\n//   };\n\n//   const cancelDelete = () => {\n//     setShowDeletePopup(false);\n//     setSelectedProductId(null);\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setNewProduct(product);\n//     setShowModal(true);\n//     // Clear image upload states when editing\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleInputChange to clear file upload when URL is entered\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({ ...newProduct, [name]: value });\n    \n//     // If image URL is being entered, clear file upload\n//     if (name === 'image' && value) {\n//       setImagePreview(null);\n//       setSelectedFile(null);\n//       if (fileInputRef.current) {\n//         fileInputRef.current.value = '';\n//       }\n//     }\n//   };\n\n//   // New image upload handlers\n//   const handleImageUpload = (e) => {\n//     const file = e.target.files[0];\n//     if (file) {\n//       // Validate file type\n//       const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n//       if (!validTypes.includes(file.type)) {\n//         alert('Please select a valid image file (JPEG, PNG, GIF, WebP)');\n//         return;\n//       }\n      \n//       // Validate file size (max 5MB)\n//       if (file.size > 5 * 1024 * 1024) {\n//         alert('File size should be less than 5MB');\n//         return;\n//       }\n      \n//       setSelectedFile(file);\n      \n//       // Create preview URL\n//       const reader = new FileReader();\n//       reader.onload = (e) => {\n//         setImagePreview(e.target.result);\n//       };\n//       reader.readAsDataURL(file);\n      \n//       // Clear URL input when file is uploaded\n//       setNewProduct(prev => ({ ...prev, image: '' }));\n//     }\n//   };\n\n//   const removeImage = () => {\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     setNewProduct(prev => ({ ...prev, image: '' }));\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//   };\n\n//   // Updated handleSave to handle file uploads\n//   const handleSave = async () => {\n//     try {\n//       let imageUrl = newProduct.image;\n      \n//       // If there's a selected file, upload it first\n//       if (selectedFile) {\n//         const formData = new FormData();\n//         formData.append('image', selectedFile);\n        \n//         const uploadResponse = await fetch('http://localhost:3001/api/upload', {\n//           method: 'POST',\n//           body: formData\n//         });\n        \n//         const uploadResult = await uploadResponse.json();\n        \n//         if (uploadResult.success) {\n//           imageUrl = uploadResult.imageUrl;\n//         } else {\n//           alert('Failed to upload image');\n//           return;\n//         }\n//       }\n\n//       // Create product data with image URL\n//       const productData = {\n//         ...newProduct,\n//         image: imageUrl\n//       };\n\n//       let response;\n//       if (editingProduct) {\n//         response = await fetch(`http://localhost:3001/api/products/update/${editingProduct._id}`, {\n//           method: 'PUT',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       } else {\n//         response = await fetch('http://localhost:3001/api/products/add', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(productData)\n//         });\n//       }\n      \n//       if (response.ok) {\n//         // Reset form and close modal\n//         setEditingProduct(null);\n//         setShowModal(false);\n//         setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//         setImagePreview(null);\n//         setSelectedFile(null);\n//         fetchProducts();\n//       } else {\n//         alert('Failed to save product');\n//       }\n//     } catch (err) {\n//       console.error('Save failed', err);\n//       alert('Something went wrong while saving!');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     window.location.href = '/login'; // or use your routing method\n//   };\n\n//   // Updated openModal function\n//   const openModal = () => {\n//     setEditingProduct(null);\n//     setNewProduct({ name: '', size: '', style: '', category: '', price: '', quantity: '', image: '' });\n//     setImagePreview(null);\n//     setSelectedFile(null);\n//     if (fileInputRef.current) {\n//       fileInputRef.current.value = '';\n//     }\n//     setShowModal(true);\n//   };\n\n//   const inputStyle = {\n//     padding: '10px',\n//     borderRadius: '4px',\n//     border: '1px solid #ccc',\n//     fontSize: '14px',\n//   };\n\n//   return (\n//     <div style={{ \n//       padding: '24px', \n//       backgroundColor: '#f3f4f6', \n//       minHeight: '100vh', \n//       fontFamily: 'Arial, sans-serif' \n//     }}>\n//       {/* Topbar */}\n//       <div style={{ \n//         display: 'flex', \n//         justifyContent: 'space-between', \n//         alignItems: 'center', \n//         marginBottom: '24px'\n//       }}>\n//         <h2 style={{ \n//           fontSize: '24px', \n//           fontWeight: 'bold',\n//           margin: '0'\n//         }}>\n//           <span role=\"img\" aria-label=\"dashboard\" style={{ marginRight: '8px' }}>📦</span>Admin Dashboard\n//         </h2>\n//         <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n//           <span>Welcome, Admin</span>\n//           <div style={{ \n//             width: '32px', \n//             height: '32px', \n//             backgroundColor: '#2563eb', \n//             color: '#fff', \n//             borderRadius: '50%', \n//             display: 'flex', \n//             alignItems: 'center', \n//             justifyContent: 'center', \n//             fontWeight: 'bold' \n//           }}>A</div>\n//           <button onClick={handleLogout} style={{ \n//             backgroundColor: '#000', \n//             color: '#fff', \n//             padding: '8px 16px', \n//             borderRadius: '4px',\n//             border: 'none',\n//             cursor: 'pointer'\n//           }}>Logout</button>\n//         </div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(4, 1fr)', \n//         gap: '16px', \n//         marginBottom: '24px' \n//       }}>\n//         {[\n//           { label: 'Total Products 📦', value: totalProducts },\n//           { label: 'Active Products ✅', value: activeProducts },\n//           { label: 'Low Stock ⚠️', value: lowStock },\n//           { label: 'Total Value 💰', value: `$${totalValue.toFixed(2)}` }\n//         ].map((stat, idx) => (\n//           <div key={idx} style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px' }}>\n//             <p style={{ margin: '0 0 8px 0' }}>{stat.label}</p>\n//             <h2 style={{ \n//               fontSize: '24px', \n//               fontWeight: 'bold',\n//               margin: '0'\n//             }}>{stat.value}</h2>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Product Table */}\n//       <div style={{ backgroundColor: '#fff', padding: '16px', borderRadius: '8px', marginBottom: '24px', overflowX: 'auto' }}>\n//         <div style={{ \n//           display: 'flex', \n//           justifyContent: 'space-between', \n//           marginBottom: '16px'\n//         }}>\n//           <h3 style={{ \n//             fontSize: '18px', \n//             fontWeight: 'bold',\n//             margin: '0'\n//           }}>Product Management</h3>\n//           <button\n//             onClick={openModal}\n//             style={{ \n//               backgroundColor: '#2563eb', \n//               color: '#fff', \n//               padding: '8px 12px', \n//               borderRadius: '4px',\n//               border: 'none',\n//               cursor: 'pointer'\n//             }}\n//           >\n//             + Add New Product\n//           </button>\n//         </div>\n\n//         <div style={{ minWidth: '800px' }}>\n//           <table style={{ width: '100%', fontSize: '14px', borderCollapse: 'collapse' }}>\n//             <thead style={{ backgroundColor: '#dbeafe' }}>\n//               <tr>\n//                 <th style={{ padding: '8px', textAlign: 'left' }}>Product</th>\n//                 <th style={{ textAlign: 'center' }}>Category</th>\n//                 <th style={{ textAlign: 'center' }}>Price</th>\n//                 <th style={{ textAlign: 'center' }}>Stock</th>\n//                 <th style={{ textAlign: 'center' }}>Size</th>\n//                 <th style={{ textAlign: 'center' }}>Style</th>\n//                 <th style={{ textAlign: 'center' }}>Status</th>\n//                 <th style={{ textAlign: 'center' }}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product._id} style={{ borderTop: '1px solid #e5e7eb' }}>\n//                   <td style={{ display: 'flex', alignItems: 'center', padding: '8px' }}>\n//                     <img\n//                       src={product.image}\n//                       alt={product.name}\n//                       style={{\n//                         width: '40px',\n//                         height: '40px',\n//                         objectFit: 'cover',\n//                         borderRadius: '6px',\n//                         marginRight: '12px',\n//                         border: '1px solid #ccc',\n//                       }}\n//                     />\n//                     <span style={{ fontWeight: 'bold' }}>{product.name}</span>\n//                   </td>\n//                   <td style={{ textAlign: 'center' }}>{product.category}</td>\n//                   <td style={{ textAlign: 'center' }}>${product.price.toFixed(2)}</td>\n//                   <td style={{ textAlign: 'center', color: product.quantity === 0 ? 'red' : 'inherit' }}>{product.quantity}</td>\n//                   <td style={{ textAlign: 'center' }}>{product.size}</td>\n//                   <td style={{ textAlign: 'center' }}>{product.style}</td>\n//                   <td style={{ textAlign: 'center' }}>\n//                     <span style={{\n//                       padding: '4px 8px',\n//                       borderRadius: '12px',\n//                       fontSize: '12px',\n//                       backgroundColor: product.quantity >= 1 ? '#dcfce7' : '#fee2e2',\n//                       color: product.quantity >= 1 ? '#15803d' : '#b91c1c'\n//                     }}>\n//                       {product.quantity >= 1 ? 'active' : 'inactive'}\n//                     </span>\n//                   </td>\n//                   <td style={{ textAlign: 'center' }}>\n//                     <span\n//                       role=\"img\"\n//                       aria-label=\"edit\"\n//                       onClick={() => handleEdit(product)}\n//                       style={{ cursor: 'pointer', marginRight: '12px', color: '#3b82f6', fontSize: '16px' }}\n//                     >\n//                       ✏️\n//                     </span>\n//                     <span\n//                       role=\"img\"\n//                       aria-label=\"delete\"\n//                       onClick={() => handleDeleteClick(product._id)}\n//                       style={{ cursor: 'pointer', color: '#ef4444', fontSize: '16px' }}\n//                     >\n//                       🗑️\n//                     </span>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {/* Updated Modal with Image Upload */}\n//       {showModal && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh',\n//           backgroundColor: 'rgba(0,0,0,0.4)',\n//           display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000\n//         }}>\n//           <div style={{\n//             backgroundColor: '#fff', \n//             padding: '24px', \n//             borderRadius: '8px',\n//             width: '400px', \n//             maxHeight: '90vh', \n//             overflowY: 'auto', \n//             boxShadow: '0 10px 25px rgba(0,0,0,0.1)'\n//           }}>\n//             <h3 style={{ \n//               fontSize: '18px', \n//               fontWeight: 'bold', \n//               marginBottom: '16px',\n//               margin: '0 0 16px 0'\n//             }}>\n//               {editingProduct ? 'Edit Product' : 'Add New Product'}\n//             </h3>\n\n//             <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n//               <input \n//                 name=\"name\" \n//                 placeholder=\"Product Name\" \n//                 value={newProduct.name} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//               />\n              \n//               {/* Image Upload Section */}\n//               <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n//                 <label style={{ fontSize: '14px', fontWeight: '500', color: '#374151' }}>\n//                   Product Image\n//                 </label>\n                \n//                 {/* Image Preview */}\n//                 {(newProduct.image || imagePreview) && (\n//                   <div style={{ position: 'relative', width: '100px', height: '100px', marginBottom: '8px' }}>\n//                     <img \n//                       src={imagePreview || newProduct.image} \n//                       alt=\"Product preview\" \n//                       style={{ \n//                         width: '100%', \n//                         height: '100%', \n//                         objectFit: 'cover', \n//                         borderRadius: '4px',\n//                         border: '1px solid #d1d5db'\n//                       }} \n//                     />\n//                     <button\n//                       type=\"button\"\n//                       onClick={removeImage}\n//                       style={{\n//                         position: 'absolute',\n//                         top: '-8px',\n//                         right: '-8px',\n//                         backgroundColor: '#ef4444',\n//                         color: '#fff',\n//                         border: 'none',\n//                         borderRadius: '50%',\n//                         width: '20px',\n//                         height: '20px',\n//                         fontSize: '12px',\n//                         cursor: 'pointer'\n//                       }}\n//                     >\n//                       ×\n//                     </button>\n//                   </div>\n//                 )}\n                \n//                 {/* File Upload Input */}\n//                 <input\n//                   type=\"file\"\n//                   accept=\"image/*\"\n//                   onChange={handleImageUpload}\n//                   style={{ display: 'none' }}\n//                   ref={fileInputRef}\n//                 />\n                \n//                 <button\n//                   type=\"button\"\n//                   onClick={() => fileInputRef.current?.click()}\n//                   style={{\n//                     padding: '8px 12px',\n//                     backgroundColor: '#f3f4f6',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '4px',\n//                     fontSize: '14px',\n//                     cursor: 'pointer',\n//                     width: '100%'\n//                   }}\n//                 >\n//                   📁 Upload Image\n//                 </button>\n                \n//                 {/* Or divider */}\n//                 <div style={{ \n//                   display: 'flex', \n//                   alignItems: 'center', \n//                   gap: '8px', \n//                   fontSize: '12px', \n//                   color: '#6b7280',\n//                   margin: '4px 0' \n//                 }}>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                   <span>OR</span>\n//                   <div style={{ flex: 1, height: '1px', backgroundColor: '#e5e7eb' }}></div>\n//                 </div>\n                \n//                 <input \n//                   name=\"image\" \n//                   placeholder=\"Or paste image URL\" \n//                   value={newProduct.image} \n//                   onChange={handleInputChange} \n//                   style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//                 />\n//               </div>\n              \n//               <select \n//                 name=\"category\" \n//                 value={newProduct.category} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}}\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 <option value=\"Shirt\">Shirt</option>\n//                 <option value=\"Pant\">Pant</option>\n//                 <option value=\"Accesories\">Accesories</option>\n//               </select>\n//               <input \n//                 name=\"price\" \n//                 type=\"number\" \n//                 placeholder=\"Price ($)\" \n//                 value={newProduct.price} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//               />\n//               <input \n//                 name=\"quantity\" \n//                 type=\"number\" \n//                 placeholder=\"Stock Quantity\" \n//                 value={newProduct.quantity} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}} \n//               />\n//               <select \n//                 name=\"size\" \n//                 value={newProduct.size} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}}\n//               >\n//                 <option value=\"\">Select Size</option>\n//                 <option value=\"XS\">XS</option>\n//                 <option value=\"S\">S</option>\n//                 <option value=\"M\">M</option>\n//                 <option value=\"L\">L</option>\n//                 <option value=\"XL\">XL</option>\n//               </select>\n//               <select \n//                 name=\"style\" \n//                 value={newProduct.style} \n//                 onChange={handleInputChange} \n//                 style={{...inputStyle, width: '100%', boxSizing: 'border-box'}}\n//               >\n//                 <option value=\"\">Select Style</option>\n//                 <option value=\"Regular Fit\">Regular Fit</option>\n//                 <option value=\"Oversized Fit\">Oversized Fit</option>\n//               </select>\n//             </div>\n\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'flex-end', \n//               marginTop: '20px', \n//               gap: '10px' \n//             }}>\n//               <button \n//                 onClick={() => setShowModal(false)} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#f3f4f6', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={handleSave} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#2563eb', \n//                   color: '#fff', \n//                   borderRadius: '4px', \n//                   border: 'none', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 {editingProduct ? 'Update' : 'Save Product'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Delete Confirmation Popup */}\n//       {showDeletePopup && (\n//         <div style={{\n//           position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n//           backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', alignItems: 'center',\n//           justifyContent: 'center', zIndex: 2000\n//         }}>\n//           <div style={{\n//             background: '#fff', \n//             padding: '24px 32px', \n//             borderRadius: '12px', \n//             width: '350px',\n//             boxShadow: '0 2px 10px rgba(0,0,0,0.2)', \n//             textAlign: 'center', \n//             fontFamily: 'system-ui'\n//           }}>\n//             <h3 style={{ marginBottom: '10px', margin: '0 0 10px 0' }}>🟠 Delete Product</h3>\n//             <p style={{ \n//               marginBottom: '20px',\n//               margin: '0 0 20px 0'\n//             }}>\n//               Are you sure you want to delete this product? This action cannot be undone.\n//             </p>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'center', \n//               gap: '12px' \n//             }}>\n//               <button \n//                 onClick={cancelDelete} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#e5e7eb', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 Cancel\n//               </button>\n//               <button \n//                 onClick={confirmDelete} \n//                 style={{ \n//                   padding: '8px 16px', \n//                   backgroundColor: '#ef4444', \n//                   color: '#fff', \n//                   border: 'none', \n//                   borderRadius: '8px', \n//                   cursor: 'pointer'\n//                 }}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;"],"mappings":"AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}