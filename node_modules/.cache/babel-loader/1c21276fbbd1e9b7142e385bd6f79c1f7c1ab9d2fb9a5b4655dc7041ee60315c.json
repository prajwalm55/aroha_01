{"ast":null,"code":"// // import { useForm } from 'react-hook-form';\n// // import styles from './Auth.module.css';\n// // import { Link } from 'react-router-dom';\n// //  import axios from 'axios';\n\n// // const Register = () => {\n// //   const {\n// //   register,\n// //   handleSubmit,\n// //   formState: { errors },\n// // } = useForm({\n// //   mode: 'onChange',          // Validate on first change\n// //   reValidateMode: 'onChange', // Revalidate on every change\n// // });\n\n// // const onSubmit = async (data) => {\n// //   try {\n// //     console.log('Registration form submitted', data);\n\n// //     const response = await axios.post('http://localhost:3001/api/auth/register', data);\n\n// //     if (response.status === 201) {\n// //       alert('Registration successful!');\n// //       // Optional: reset form or redirect to login\n// //     }\n// //   } catch (error) {\n// //     console.error('Registration error:', error);\n\n// //     if (error.response) {\n// //       // Server responded with a non-2xx status\n// //       alert(error.response.data.message || 'Registration failed');\n// //     } else {\n// //       // Unexpected error (like network failure)\n// //       alert('An unexpected error occurred. Please try again.');\n// //     }\n// //   }\n// // };\n\n// //   return (\n// //     <div className={styles.authContainer}>\n// //       <form className={styles.authForm} onSubmit={handleSubmit(onSubmit)}>\n// //         <h2 className={styles.authTitle}>Create an account</h2>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"name\" className={styles.label}>Full Name</label>\n// //           <input\n// //             id=\"name\"\n// //             type=\"text\"\n// //             className={styles.input}\n// //             {...register('name', {\n// //               required: 'Name is required',\n// //               minLength: {\n// //                 value: 3,\n// //                 message: 'Name must be at least 3 characters',\n// //               },\n// //             })}\n// //           />\n// //           {errors.name && <div className={styles.error}>{errors.name.message}</div>}\n// //         </div>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"email\" className={styles.label}>Email</label>\n// //           <input\n// //             id=\"email\"\n// //             type=\"email\"\n// //             className={styles.input}\n// //             {...register('email', {\n// //               required: 'Email is required',\n// //               pattern: {\n// //                 value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n// //                 message: 'Invalid email address',\n// //               },\n// //             })}\n// //           />\n// //           {errors.email && <div className={styles.error}>{errors.email.message}</div>}\n// //         </div>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"mobile\" className={styles.label}>Mobile Number</label>\n// //           <input\n// //             id=\"mobile\"\n// //             type=\"text\"\n// //             className={styles.input}\n// //             {...register('mobile', {\n// //               required: 'Mobile number is required',\n// //               pattern: {\n// //                 value: /^[0-9]{10}$/,\n// //                 message: 'Mobile number must be 10 digits',\n// //               },\n// //             })}\n// //           />\n// //           {errors.mobile && <div className={styles.error}>{errors.mobile.message}</div>}\n// //         </div>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"password\" className={styles.label}>Password</label>\n// //           <input\n// //             id=\"password\"\n// //             type=\"password\"\n// //             className={styles.input}\n// //             {...register('password', {\n// //               required: 'Password is required',\n// //               minLength: {\n// //                 value: 6,\n// //                 message: 'Password must be at least 6 characters',\n// //               },\n// //             })}\n// //           />\n// //           {errors.password && <div className={styles.error}>{errors.password.message}</div>}\n// //         </div>\n\n// //         <button type=\"submit\" className={styles.submitButton}>\n// //           Register\n// //         </button>\n\n// //         <p className={styles.toggleText}>\n// //           Already have an account?{' '}\n// //           <Link to=\"/login\" className={styles.toggleLink}>Login</Link>\n// //         </p>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Register;\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Register = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors }\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/auth/register', {\n//         ...data,\n//         role\n//       });\n\n//       if (response.status === 201) {\n//         alert('Registration Successful');\n//         navigate('/login');\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Registration failed');\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         background: 'radial-gradient(circle at center, #232427 0%, #1e1f21 100%)',\n//         height: '100vh',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         justifyContent: 'center',\n//         fontFamily: 'sans-serif',\n//         color: '#fff',\n//       }}\n//     >\n//       <div\n//         style={{\n//           display: 'flex',\n//           backgroundColor: '#2f3033',\n//           borderRadius: '10px',\n//           boxShadow: '0 0 30px rgba(0, 0, 0, 0.6)',\n//           overflow: 'hidden',\n//           width: '600px',\n//           maxWidth: '90%',\n//         }}\n//       >\n//         {/* Left Side (Form) */}\n//         <div style={{ flex: 1, padding: '30px' }}>\n//           <div\n//             style={{\n//               display: 'flex',\n//               justifyContent: 'center',\n//               gap: '40px',\n//               marginBottom: '25px',\n//               fontSize: '15px'\n//             }}\n//           >\n//             <label>\n//               <input\n//                 type=\"radio\"\n//                 value=\"admin\"\n//                 checked={role === 'admin'}\n//                 onChange={() => setRole('admin')}\n//               />{' '}\n//               Admin\n//             </label>\n//             <label>\n//               <input\n//                 type=\"radio\"\n//                 value=\"user\"\n//                 checked={role === 'user'}\n//                 onChange={() => setRole('user')}\n//               />{' '}\n//               User\n//             </label>\n//           </div>\n\n//           <form onSubmit={handleSubmit(onSubmit)} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n//             {/* Name */}\n//             <input\n//               type=\"text\"\n//               placeholder=\"Name\"\n//               style={inputStyle}\n//               {...register('name', { required: 'Name is required' })}\n//             />\n//             {errors.name && <p style={errorStyle}>{errors.name.message}</p>}\n\n//             {/* Email */}\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               style={inputStyle}\n//               {...register('email', { required: 'Email is required' })}\n//             />\n//             {errors.email && <p style={errorStyle}>{errors.email.message}</p>}\n\n//             {/* Mobile */}\n//             <input\n//               type=\"text\"\n//               placeholder=\"Mobile\"\n//               style={inputStyle}\n//               {...register('mobile', { required: 'Mobile number is required' })}\n//             />\n//             {errors.mobile && <p style={errorStyle}>{errors.mobile.message}</p>}\n\n//             {/* Password */}\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               style={inputStyle}\n//               {...register('password', {\n//                 required: 'Password is required',\n//                 minLength: {\n//                   value: 6,\n//                   message: 'Password must be at least 6 characters'\n//                 }\n//               })}\n//             />\n//             {errors.password && <p style={errorStyle}>{errors.password.message}</p>}\n\n//             <button\n//               type=\"submit\"\n//               style={{\n//                 background: '#18b65f',\n//                 border: 'none',\n//                 padding: '12px',\n//                 fontWeight: 'bold',\n//                 fontSize: '16px',\n//                 color: 'white',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               REGISTER\n//             </button>\n\n//             <p style={{ textAlign: 'center', marginTop: '10px', fontSize: '13px', color: '#ccc' }}>\n//               Already have an account?{' '}\n//               <Link to=\"/login\" style={{ color: '#18b65f', textDecoration: 'underline', fontWeight: 'bold' }}>\n//                 Login\n//               </Link>\n//             </p>\n//           </form>\n//         </div>\n\n//         {/* Right Side */}\n//         <div\n//           style={{\n//             flex: 1,\n//             background: 'rgba(0, 0, 0, 0.1)',\n//             borderLeft: '1px solid #555',\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//             justifyContent: 'center',\n//             padding: '30px',\n//           }}\n//         >\n//           <div style={{ fontSize: '48px', marginBottom: '10px' }}>🛡️</div>\n//           <h2 style={{ fontSize: '24px', fontWeight: 'bold', margin: 0 }}>ECHO</h2>\n//           <p style={{ fontSize: '13px', color: '#aaa' }}>Payments Simplified</p>\n//         </div>\n//       </div>\n\n//       <p\n//         style={{\n//           marginTop: '20px',\n//           fontSize: '12px',\n//           color: '#aaa',\n//         }}\n//       >\n//         ©2018 Copyright ECHO Health, Inc. All Rights Reserved.\n//       </p>\n//     </div>\n//   );\n// };\n\n// const inputStyle = {\n//   background: '#444',\n//   padding: '10px 12px',\n//   border: 'none',\n//   color: 'white',\n//   fontSize: '14px',\n//   borderRadius: '4px',\n// };\n\n// const errorStyle = {\n//   color: '#ff6b6b',\n//   fontSize: '12px',\n//   margin: '0 -5px'\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Register.js"],"sourcesContent":["// // import { useForm } from 'react-hook-form';\n// // import styles from './Auth.module.css';\n// // import { Link } from 'react-router-dom';\n// //  import axios from 'axios';\n\n// // const Register = () => {\n// //   const {\n// //   register,\n// //   handleSubmit,\n// //   formState: { errors },\n// // } = useForm({\n// //   mode: 'onChange',          // Validate on first change\n// //   reValidateMode: 'onChange', // Revalidate on every change\n// // });\n\n\n\n\n// // const onSubmit = async (data) => {\n// //   try {\n// //     console.log('Registration form submitted', data);\n\n// //     const response = await axios.post('http://localhost:3001/api/auth/register', data);\n\n// //     if (response.status === 201) {\n// //       alert('Registration successful!');\n// //       // Optional: reset form or redirect to login\n// //     }\n// //   } catch (error) {\n// //     console.error('Registration error:', error);\n\n// //     if (error.response) {\n// //       // Server responded with a non-2xx status\n// //       alert(error.response.data.message || 'Registration failed');\n// //     } else {\n// //       // Unexpected error (like network failure)\n// //       alert('An unexpected error occurred. Please try again.');\n// //     }\n// //   }\n// // };\n\n\n// //   return (\n// //     <div className={styles.authContainer}>\n// //       <form className={styles.authForm} onSubmit={handleSubmit(onSubmit)}>\n// //         <h2 className={styles.authTitle}>Create an account</h2>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"name\" className={styles.label}>Full Name</label>\n// //           <input\n// //             id=\"name\"\n// //             type=\"text\"\n// //             className={styles.input}\n// //             {...register('name', {\n// //               required: 'Name is required',\n// //               minLength: {\n// //                 value: 3,\n// //                 message: 'Name must be at least 3 characters',\n// //               },\n// //             })}\n// //           />\n// //           {errors.name && <div className={styles.error}>{errors.name.message}</div>}\n// //         </div>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"email\" className={styles.label}>Email</label>\n// //           <input\n// //             id=\"email\"\n// //             type=\"email\"\n// //             className={styles.input}\n// //             {...register('email', {\n// //               required: 'Email is required',\n// //               pattern: {\n// //                 value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n// //                 message: 'Invalid email address',\n// //               },\n// //             })}\n// //           />\n// //           {errors.email && <div className={styles.error}>{errors.email.message}</div>}\n// //         </div>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"mobile\" className={styles.label}>Mobile Number</label>\n// //           <input\n// //             id=\"mobile\"\n// //             type=\"text\"\n// //             className={styles.input}\n// //             {...register('mobile', {\n// //               required: 'Mobile number is required',\n// //               pattern: {\n// //                 value: /^[0-9]{10}$/,\n// //                 message: 'Mobile number must be 10 digits',\n// //               },\n// //             })}\n// //           />\n// //           {errors.mobile && <div className={styles.error}>{errors.mobile.message}</div>}\n// //         </div>\n\n// //         <div className={styles.inputGroup}>\n// //           <label htmlFor=\"password\" className={styles.label}>Password</label>\n// //           <input\n// //             id=\"password\"\n// //             type=\"password\"\n// //             className={styles.input}\n// //             {...register('password', {\n// //               required: 'Password is required',\n// //               minLength: {\n// //                 value: 6,\n// //                 message: 'Password must be at least 6 characters',\n// //               },\n// //             })}\n// //           />\n// //           {errors.password && <div className={styles.error}>{errors.password.message}</div>}\n// //         </div>\n\n// //         <button type=\"submit\" className={styles.submitButton}>\n// //           Register\n// //         </button>\n\n// //         <p className={styles.toggleText}>\n// //           Already have an account?{' '}\n// //           <Link to=\"/login\" className={styles.toggleLink}>Login</Link>\n// //         </p>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default Register;\n\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Register = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors }\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post('http://localhost:3001/api/auth/register', {\n//         ...data,\n//         role\n//       });\n\n//       if (response.status === 201) {\n//         alert('Registration Successful');\n//         navigate('/login');\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Registration failed');\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         background: 'radial-gradient(circle at center, #232427 0%, #1e1f21 100%)',\n//         height: '100vh',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         justifyContent: 'center',\n//         fontFamily: 'sans-serif',\n//         color: '#fff',\n//       }}\n//     >\n//       <div\n//         style={{\n//           display: 'flex',\n//           backgroundColor: '#2f3033',\n//           borderRadius: '10px',\n//           boxShadow: '0 0 30px rgba(0, 0, 0, 0.6)',\n//           overflow: 'hidden',\n//           width: '600px',\n//           maxWidth: '90%',\n//         }}\n//       >\n//         {/* Left Side (Form) */}\n//         <div style={{ flex: 1, padding: '30px' }}>\n//           <div\n//             style={{\n//               display: 'flex',\n//               justifyContent: 'center',\n//               gap: '40px',\n//               marginBottom: '25px',\n//               fontSize: '15px'\n//             }}\n//           >\n//             <label>\n//               <input\n//                 type=\"radio\"\n//                 value=\"admin\"\n//                 checked={role === 'admin'}\n//                 onChange={() => setRole('admin')}\n//               />{' '}\n//               Admin\n//             </label>\n//             <label>\n//               <input\n//                 type=\"radio\"\n//                 value=\"user\"\n//                 checked={role === 'user'}\n//                 onChange={() => setRole('user')}\n//               />{' '}\n//               User\n//             </label>\n//           </div>\n\n//           <form onSubmit={handleSubmit(onSubmit)} style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n//             {/* Name */}\n//             <input\n//               type=\"text\"\n//               placeholder=\"Name\"\n//               style={inputStyle}\n//               {...register('name', { required: 'Name is required' })}\n//             />\n//             {errors.name && <p style={errorStyle}>{errors.name.message}</p>}\n\n//             {/* Email */}\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email\"\n//               style={inputStyle}\n//               {...register('email', { required: 'Email is required' })}\n//             />\n//             {errors.email && <p style={errorStyle}>{errors.email.message}</p>}\n\n//             {/* Mobile */}\n//             <input\n//               type=\"text\"\n//               placeholder=\"Mobile\"\n//               style={inputStyle}\n//               {...register('mobile', { required: 'Mobile number is required' })}\n//             />\n//             {errors.mobile && <p style={errorStyle}>{errors.mobile.message}</p>}\n\n//             {/* Password */}\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               style={inputStyle}\n//               {...register('password', {\n//                 required: 'Password is required',\n//                 minLength: {\n//                   value: 6,\n//                   message: 'Password must be at least 6 characters'\n//                 }\n//               })}\n//             />\n//             {errors.password && <p style={errorStyle}>{errors.password.message}</p>}\n\n//             <button\n//               type=\"submit\"\n//               style={{\n//                 background: '#18b65f',\n//                 border: 'none',\n//                 padding: '12px',\n//                 fontWeight: 'bold',\n//                 fontSize: '16px',\n//                 color: 'white',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}\n//             >\n//               REGISTER\n//             </button>\n\n//             <p style={{ textAlign: 'center', marginTop: '10px', fontSize: '13px', color: '#ccc' }}>\n//               Already have an account?{' '}\n//               <Link to=\"/login\" style={{ color: '#18b65f', textDecoration: 'underline', fontWeight: 'bold' }}>\n//                 Login\n//               </Link>\n//             </p>\n//           </form>\n//         </div>\n\n//         {/* Right Side */}\n//         <div\n//           style={{\n//             flex: 1,\n//             background: 'rgba(0, 0, 0, 0.1)',\n//             borderLeft: '1px solid #555',\n//             display: 'flex',\n//             flexDirection: 'column',\n//             alignItems: 'center',\n//             justifyContent: 'center',\n//             padding: '30px',\n//           }}\n//         >\n//           <div style={{ fontSize: '48px', marginBottom: '10px' }}>🛡️</div>\n//           <h2 style={{ fontSize: '24px', fontWeight: 'bold', margin: 0 }}>ECHO</h2>\n//           <p style={{ fontSize: '13px', color: '#aaa' }}>Payments Simplified</p>\n//         </div>\n//       </div>\n\n//       <p\n//         style={{\n//           marginTop: '20px',\n//           fontSize: '12px',\n//           color: '#aaa',\n//         }}\n//       >\n//         ©2018 Copyright ECHO Health, Inc. All Rights Reserved.\n//       </p>\n//     </div>\n//   );\n// };\n\n// const inputStyle = {\n//   background: '#444',\n//   padding: '10px 12px',\n//   border: 'none',\n//   color: 'white',\n//   fontSize: '14px',\n//   borderRadius: '4px',\n// };\n\n// const errorStyle = {\n//   color: '#ff6b6b',\n//   fontSize: '12px',\n//   margin: '0 -5px'\n// };\n\n// export default Register;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}