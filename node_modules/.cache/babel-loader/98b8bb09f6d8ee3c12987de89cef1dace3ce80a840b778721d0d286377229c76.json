{"ast":null,"code":"// import { useForm } from 'react-hook-form';\n// import styles from './Auth.module.css';\n// import { Link } from 'react-router-dom';\n//  import axios from 'axios';\n\n// const Register = () => {\n//   const {\n//   register,\n//   handleSubmit,\n//   formState: { errors },\n// } = useForm({\n//   mode: 'onChange',          // Validate on first change\n//   reValidateMode: 'onChange', // Revalidate on every change\n// });\n\n// const onSubmit = async (data) => {\n//   try {\n//     console.log('Registration form submitted', data);\n\n//     const response = await axios.post('http://localhost:3001/api/auth/register', data);\n\n//     if (response.status === 201) {\n//       alert('Registration successful!');\n//       // Optional: reset form or redirect to login\n//     }\n//   } catch (error) {\n//     console.error('Registration error:', error);\n\n//     if (error.response) {\n//       // Server responded with a non-2xx status\n//       alert(error.response.data.message || 'Registration failed');\n//     } else {\n//       // Unexpected error (like network failure)\n//       alert('An unexpected error occurred. Please try again.');\n//     }\n//   }\n// };\n\n//   return (\n//     <div className={styles.authContainer}>\n//       <form className={styles.authForm} onSubmit={handleSubmit(onSubmit)}>\n//         <h2 className={styles.authTitle}>Create an account</h2>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"name\" className={styles.label}>Full Name</label>\n//           <input\n//             id=\"name\"\n//             type=\"text\"\n//             className={styles.input}\n//             {...register('name', {\n//               required: 'Name is required',\n//               minLength: {\n//                 value: 3,\n//                 message: 'Name must be at least 3 characters',\n//               },\n//             })}\n//           />\n//           {errors.name && <div className={styles.error}>{errors.name.message}</div>}\n//         </div>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"email\" className={styles.label}>Email</label>\n//           <input\n//             id=\"email\"\n//             type=\"email\"\n//             className={styles.input}\n//             {...register('email', {\n//               required: 'Email is required',\n//               pattern: {\n//                 value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n//                 message: 'Invalid email address',\n//               },\n//             })}\n//           />\n//           {errors.email && <div className={styles.error}>{errors.email.message}</div>}\n//         </div>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"mobile\" className={styles.label}>Mobile Number</label>\n//           <input\n//             id=\"mobile\"\n//             type=\"text\"\n//             className={styles.input}\n//             {...register('mobile', {\n//               required: 'Mobile number is required',\n//               pattern: {\n//                 value: /^[0-9]{10}$/,\n//                 message: 'Mobile number must be 10 digits',\n//               },\n//             })}\n//           />\n//           {errors.mobile && <div className={styles.error}>{errors.mobile.message}</div>}\n//         </div>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"password\" className={styles.label}>Password</label>\n//           <input\n//             id=\"password\"\n//             type=\"password\"\n//             className={styles.input}\n//             {...register('password', {\n//               required: 'Password is required',\n//               minLength: {\n//                 value: 6,\n//                 message: 'Password must be at least 6 characters',\n//               },\n//             })}\n//           />\n//           {errors.password && <div className={styles.error}>{errors.password.message}</div>}\n//         </div>\n\n//         <button type=\"submit\" className={styles.submitButton}>\n//           Register\n//         </button>\n\n//         <p className={styles.toggleText}>\n//           Already have an account?{' '}\n//           <Link to=\"/login\" className={styles.toggleLink}>Login</Link>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Register.js"],"sourcesContent":["// import { useForm } from 'react-hook-form';\n// import styles from './Auth.module.css';\n// import { Link } from 'react-router-dom';\n//  import axios from 'axios';\n\n// const Register = () => {\n//   const {\n//   register,\n//   handleSubmit,\n//   formState: { errors },\n// } = useForm({\n//   mode: 'onChange',          // Validate on first change\n//   reValidateMode: 'onChange', // Revalidate on every change\n// });\n\n\n\n\n// const onSubmit = async (data) => {\n//   try {\n//     console.log('Registration form submitted', data);\n\n//     const response = await axios.post('http://localhost:3001/api/auth/register', data);\n\n//     if (response.status === 201) {\n//       alert('Registration successful!');\n//       // Optional: reset form or redirect to login\n//     }\n//   } catch (error) {\n//     console.error('Registration error:', error);\n\n//     if (error.response) {\n//       // Server responded with a non-2xx status\n//       alert(error.response.data.message || 'Registration failed');\n//     } else {\n//       // Unexpected error (like network failure)\n//       alert('An unexpected error occurred. Please try again.');\n//     }\n//   }\n// };\n\n\n//   return (\n//     <div className={styles.authContainer}>\n//       <form className={styles.authForm} onSubmit={handleSubmit(onSubmit)}>\n//         <h2 className={styles.authTitle}>Create an account</h2>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"name\" className={styles.label}>Full Name</label>\n//           <input\n//             id=\"name\"\n//             type=\"text\"\n//             className={styles.input}\n//             {...register('name', {\n//               required: 'Name is required',\n//               minLength: {\n//                 value: 3,\n//                 message: 'Name must be at least 3 characters',\n//               },\n//             })}\n//           />\n//           {errors.name && <div className={styles.error}>{errors.name.message}</div>}\n//         </div>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"email\" className={styles.label}>Email</label>\n//           <input\n//             id=\"email\"\n//             type=\"email\"\n//             className={styles.input}\n//             {...register('email', {\n//               required: 'Email is required',\n//               pattern: {\n//                 value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n//                 message: 'Invalid email address',\n//               },\n//             })}\n//           />\n//           {errors.email && <div className={styles.error}>{errors.email.message}</div>}\n//         </div>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"mobile\" className={styles.label}>Mobile Number</label>\n//           <input\n//             id=\"mobile\"\n//             type=\"text\"\n//             className={styles.input}\n//             {...register('mobile', {\n//               required: 'Mobile number is required',\n//               pattern: {\n//                 value: /^[0-9]{10}$/,\n//                 message: 'Mobile number must be 10 digits',\n//               },\n//             })}\n//           />\n//           {errors.mobile && <div className={styles.error}>{errors.mobile.message}</div>}\n//         </div>\n\n//         <div className={styles.inputGroup}>\n//           <label htmlFor=\"password\" className={styles.label}>Password</label>\n//           <input\n//             id=\"password\"\n//             type=\"password\"\n//             className={styles.input}\n//             {...register('password', {\n//               required: 'Password is required',\n//               minLength: {\n//                 value: 6,\n//                 message: 'Password must be at least 6 characters',\n//               },\n//             })}\n//           />\n//           {errors.password && <div className={styles.error}>{errors.password.message}</div>}\n//         </div>\n\n//         <button type=\"submit\" className={styles.submitButton}>\n//           Register\n//         </button>\n\n//         <p className={styles.toggleText}>\n//           Already have an account?{' '}\n//           <Link to=\"/login\" className={styles.toggleLink}>Login</Link>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}