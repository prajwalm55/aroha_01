{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Login.js\",\n  _s = $RefreshSig$();\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />\n//             {' '}User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />\n//             {' '}Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message:\n//                 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         {/* Phone Number Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Phone Number\"\n//           style={inputStyle}\n//           {...register('phone', {\n//             required: 'Phone number is required',\n//             pattern: {\n//               value: /^[6-9]\\d{9}$/,\n//               message: 'Enter a valid 10-digit phone number starting with 6-9',\n//             },\n//           })}\n//         />\n//         {errors.phone && <p style={errorText}>{errors.phone.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563', // gray-700\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb', // blue-600\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981', // green-500\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message: 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563',\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb',\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981',\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n// Login.js\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = async data => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/user/login', data);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store user details in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('role', user.role);\n\n      // Navigate based on role\n      if (user.role === 'admin') {\n        alert('Admin login successful');\n        navigate('/admin');\n      } else if (user.role === 'user') {\n        alert('User login successful');\n        navigate('/');\n      } else {\n        alert('Invalid role. Contact admin.');\n      }\n    } catch (error) {\n      alert('Invalid credentials');\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"bg-white p-6 rounded-md shadow-md w-full max-w-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register('email', {\n            required: 'Email is required'\n          }),\n          className: \"w-full px-3 py-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm mt-1\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('password', {\n            required: 'Password is required'\n          }),\n          className: \"w-full px-3 py-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm mt-1\",\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded transition duration-200\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mt-4 text-sm\",\n        children: [\"Don\\u2019t have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"text-blue-600 hover:underline\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 544,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HoKfjMZ92ei5+tBlduY2RAS552Q=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","useState","axios","useNavigate","Link","jsxDEV","_jsxDEV","Login","_s","navigate","register","handleSubmit","formState","errors","onSubmit","data","response","post","token","user","localStorage","setItem","JSON","stringify","role","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","required","email","message","password","to","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/LoginAuthMERN_MVC-Main/Frontend/src/Components/Auth/Login.js"],"sourcesContent":["// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin/dashboard');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />\n//             {' '}User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />\n//             {' '}Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message:\n//                 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         {/* Phone Number Input */}\n//         <input\n//           type=\"text\"\n//           placeholder=\"Phone Number\"\n//           style={inputStyle}\n//           {...register('phone', {\n//             required: 'Phone number is required',\n//             pattern: {\n//               value: /^[6-9]\\d{9}$/,\n//               message: 'Enter a valid 10-digit phone number starting with 6-9',\n//             },\n//           })}\n//         />\n//         {errors.phone && <p style={errorText}>{errors.phone.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563', // gray-700\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb', // blue-600\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981', // green-500\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n\n\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [role, setRole] = useState('user');\n//   const navigate = useNavigate();\n\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\n//         'http://localhost:3001/api/auth/login',\n//         {\n//           ...data,\n//           role,\n//         },\n//         {\n//           withCredentials: true,\n//         }\n//       );\n\n//       if (response.status === 200) {\n//         const userData = response.data;\n//         localStorage.setItem('user', JSON.stringify(userData));\n\n//         if (userData.role === 'admin' && role === 'admin') {\n//           alert('Admin login successful');\n//           navigate('/admin');\n//         } else if (userData.role === 'user' && role === 'user') {\n//           alert('User login successful');\n//           navigate('/');\n//         } else {\n//           alert(`You are not authorized to login as ${role}`);\n//         }\n//       }\n//     } catch (err) {\n//       alert(err?.response?.data?.message || 'Login failed');\n//     }\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <form onSubmit={handleSubmit(onSubmit)} style={formStyle}>\n//         <h2 style={headingStyle}>Login to StyleHub</h2>\n\n//         <div style={roleContainerStyle}>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"user\"\n//               checked={role === 'user'}\n//               onChange={() => setRole('user')}\n//             />{' '}\n//             User\n//           </label>\n//           <label>\n//             <input\n//               type=\"radio\"\n//               value=\"admin\"\n//               checked={role === 'admin'}\n//               onChange={() => setRole('admin')}\n//             />{' '}\n//             Admin\n//           </label>\n//         </div>\n\n//         {/* Email Input */}\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           style={inputStyle}\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^\\S+@\\S+\\.\\S+$/,\n//               message: 'Enter a valid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p style={errorText}>{errors.email.message}</p>}\n\n//         {/* Password Input with Styled Hint */}\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           style={inputStyle}\n//           {...register('password', {\n//             required: 'Password is required',\n//             minLength: {\n//               value: 6,\n//               message: 'Password must be at least 6 characters',\n//             },\n//             pattern: {\n//               value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]).{6,}$/,\n//               message: 'Password must include uppercase, number, and special character',\n//             },\n//           })}\n//         />\n//         <div style={passwordHint}>\n//           <span style={hintBullet}>â€¢</span>\n//           <span><strong style={hintKeyword}>6+ chars</strong>,</span>\n//           <strong style={hintKeyword}>1 uppercase</strong>,\n//           <strong style={hintKeyword}>1 number</strong>,\n//           <strong style={hintKeyword}>1 special character</strong>\n//         </div>\n//         {errors.password && <p style={errorText}>{errors.password.message}</p>}\n\n//         <button type=\"submit\" style={submitBtn}>Login</button>\n\n//         <p style={textCenter}>\n//           Don't have an account?{' '}\n//           <Link to=\"/register\" style={linkStyle}>Register</Link>\n//         </p>\n\n//         <p style={{ textAlign: 'center', marginTop: '8px' }}>\n//           <span\n//             onClick={() => navigate('/')}\n//             style={skipLink}\n//             onMouseEnter={(e) => e.target.style.color = '#3b82f6'}\n//             onMouseLeave={(e) => e.target.style.color = '#6b7280'}\n//           >\n//             Don't want to create an account right now?\n//           </span>\n//         </p>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // ðŸ”§ Styles\n// const containerStyle = {\n//   backgroundColor: '#f9fafb',\n//   minHeight: '100vh',\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   padding: '20px',\n//   fontFamily: 'system-ui, sans-serif',\n// };\n\n// const formStyle = {\n//   backgroundColor: '#ffffff',\n//   padding: '30px',\n//   borderRadius: '10px',\n//   boxShadow: '0 4px 10px rgba(0,0,0,0.05)',\n//   width: '100%',\n//   maxWidth: '400px',\n//   display: 'flex',\n//   flexDirection: 'column',\n//   gap: '15px',\n// };\n\n// const headingStyle = {\n//   textAlign: 'center',\n//   marginBottom: '10px',\n//   color: '#1f2937',\n// };\n\n// const roleContainerStyle = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   gap: '20px',\n//   fontSize: '14px',\n// };\n\n// const inputStyle = {\n//   padding: '10px',\n//   borderRadius: '6px',\n//   border: '1px solid #e5e7eb',\n//   fontSize: '14px',\n// };\n\n// const errorText = {\n//   color: '#dc2626',\n//   fontSize: '12px',\n//   marginTop: '-10px',\n//   marginBottom: '-5px',\n// };\n\n// const passwordHint = {\n//   fontSize: '12px',\n//   color: '#4b5563',\n//   marginTop: '-5px',\n//   marginBottom: '-3px',\n//   display: 'flex',\n//   flexWrap: 'wrap',\n//   gap: '4px',\n//   lineHeight: '1.5',\n// };\n\n// const hintKeyword = {\n//   color: '#2563eb',\n//   fontWeight: '500',\n// };\n\n// const hintBullet = {\n//   color: '#10b981',\n//   fontWeight: 'bold',\n//   marginRight: '6px',\n// };\n\n// const submitBtn = {\n//   backgroundColor: '#2563eb',\n//   color: 'white',\n//   padding: '10px',\n//   border: 'none',\n//   borderRadius: '6px',\n//   fontWeight: '600',\n//   fontSize: '14px',\n//   cursor: 'pointer',\n// };\n\n// const textCenter = {\n//   textAlign: 'center',\n//   fontSize: '13px',\n// };\n\n// const linkStyle = {\n//   color: '#2563eb',\n//   fontWeight: '600',\n//   textDecoration: 'none',\n// };\n\n// const skipLink = {\n//   textDecoration: 'underline',\n//   color: '#6b7280',\n//   fontSize: '13px',\n//   cursor: 'pointer',\n//   transition: 'color 0.2s ease',\n// };\n\n// export default Login;\n\n\n\n// Login.js\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/user/login', data);\n      const { token, user } = response.data;\n\n      // Store user details in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('role', user.role);\n\n      // Navigate based on role\n      if (user.role === 'admin') {\n        alert('Admin login successful');\n        navigate('/admin');\n      } else if (user.role === 'user') {\n        alert('User login successful');\n        navigate('/');\n      } else {\n        alert('Invalid role. Contact admin.');\n      }\n    } catch (error) {\n      alert('Invalid credentials');\n      console.error('Login error:', error);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"bg-white p-6 rounded-md shadow-md w-full max-w-sm\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-center\">Login</h2>\n\n        <div className=\"mb-4\">\n          <label className=\"block mb-1\">Email</label>\n          <input\n            type=\"email\"\n            {...register('email', { required: 'Email is required' })}\n            className=\"w-full px-3 py-2 border rounded\"\n          />\n          {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>}\n        </div>\n\n        <div className=\"mb-4\">\n          <label className=\"block mb-1\">Password</label>\n          <input\n            type=\"password\"\n            {...register('password', { required: 'Password is required' })}\n            className=\"w-full px-3 py-2 border rounded\"\n          />\n          {errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password.message}</p>}\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded transition duration-200\"\n        >\n          Login\n        </button>\n\n        <p className=\"text-center mt-4 text-sm\">\n          Donâ€™t have an account?{' '}\n          <Link to=\"/register\" className=\"text-blue-600 hover:underline\">\n            Register\n          </Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}